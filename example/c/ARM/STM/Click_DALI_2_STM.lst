;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 2/5/2018 11:26:38 AM
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2000  	536936444
0x0004	0x13790000  	4985
0x0008	0x15110000  	5393
0x000C	0x15110000  	5393
0x0010	0x15110000  	5393
0x0014	0x15110000  	5393
0x0018	0x15110000  	5393
0x001C	0x15110000  	5393
0x0020	0x15110000  	5393
0x0024	0x15110000  	5393
0x0028	0x15110000  	5393
0x002C	0x15110000  	5393
0x0030	0x15110000  	5393
0x0034	0x15110000  	5393
0x0038	0x15110000  	5393
0x003C	0x15110000  	5393
0x0040	0x15110000  	5393
0x0044	0x15110000  	5393
0x0048	0x15110000  	5393
0x004C	0x15110000  	5393
0x0050	0x15110000  	5393
0x0054	0x15110000  	5393
0x0058	0x15110000  	5393
0x005C	0x15110000  	5393
0x0060	0x15110000  	5393
0x0064	0x15110000  	5393
0x0068	0x15110000  	5393
0x006C	0x15110000  	5393
0x0070	0x15110000  	5393
0x0074	0x15110000  	5393
0x0078	0x15110000  	5393
0x007C	0x15110000  	5393
0x0080	0x15110000  	5393
0x0084	0x15110000  	5393
0x0088	0x15110000  	5393
0x008C	0x15110000  	5393
0x0090	0x15110000  	5393
0x0094	0x15110000  	5393
0x0098	0x15110000  	5393
0x009C	0x15110000  	5393
0x00A0	0x15110000  	5393
0x00A4	0x15110000  	5393
0x00A8	0x15110000  	5393
0x00AC	0x15110000  	5393
0x00B0	0x13950000  	5013
0x00B4	0x15110000  	5393
0x00B8	0x15110000  	5393
0x00BC	0x15110000  	5393
0x00C0	0x15110000  	5393
0x00C4	0x15110000  	5393
0x00C8	0x15110000  	5393
0x00CC	0x15110000  	5393
0x00D0	0x15110000  	5393
0x00D4	0x15110000  	5393
0x00D8	0x15110000  	5393
0x00DC	0x15110000  	5393
0x00E0	0x15110000  	5393
0x00E4	0x15110000  	5393
0x00E8	0x15110000  	5393
0x00EC	0x15110000  	5393
0x00F0	0x15110000  	5393
0x00F4	0x15110000  	5393
0x00F8	0x15110000  	5393
0x00FC	0x15110000  	5393
0x0100	0x15110000  	5393
0x0104	0x15110000  	5393
0x0108	0x15110000  	5393
0x010C	0x15110000  	5393
0x0110	0x15110000  	5393
0x0114	0x15110000  	5393
0x0118	0x15110000  	5393
0x011C	0x15110000  	5393
0x0120	0x15110000  	5393
0x0124	0x15110000  	5393
0x0128	0x15110000  	5393
0x012C	0x15110000  	5393
0x0130	0x15110000  	5393
0x0134	0x15110000  	5393
0x0138	0x15110000  	5393
0x013C	0x15110000  	5393
0x0140	0x15110000  	5393
0x0144	0x15110000  	5393
0x0148	0x15110000  	5393
0x014C	0x15110000  	5393
; end of ____SysVT
_main:
;Click_DALI_2_STM.c, 76 :: 		void main()
0x1378	0xF000F81E  BL	5048
0x137C	0xF000F8FC  BL	5496
0x1380	0xF000F8BC  BL	5372
;Click_DALI_2_STM.c, 78 :: 		systemInit();
0x1384	0xF7FFFF68  BL	_systemInit+0
;Click_DALI_2_STM.c, 79 :: 		applicationInit();
0x1388	0xF7FFFFE6  BL	_applicationInit+0
;Click_DALI_2_STM.c, 81 :: 		while (1)
L_main17:
;Click_DALI_2_STM.c, 83 :: 		applicationTask();
0x138C	0xF7FFFF78  BL	_applicationTask+0
;Click_DALI_2_STM.c, 84 :: 		}
0x1390	0xE7FC    B	L_main17
;Click_DALI_2_STM.c, 85 :: 		}
L_end_main:
L__main_end_loop:
0x1392	0xE7FE    B	L__main_end_loop
; end of _main
___FillZeros:
;__Lib_System_105_107.c, 70 :: 		
0x121C	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 72 :: 		
0x121E	0xF04F0900  MOV	R9, #0
;__Lib_System_105_107.c, 73 :: 		
0x1222	0xF04F0C00  MOV	R12, #0
;__Lib_System_105_107.c, 74 :: 		
0x1226	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_105_107.c, 75 :: 		
0x122A	0xDC04    BGT	L_loopFZs
;__Lib_System_105_107.c, 76 :: 		
0x122C	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_105_107.c, 77 :: 		
0x1230	0xDB01    BLT	L_loopFZs
;__Lib_System_105_107.c, 78 :: 		
0x1232	0x46D4    MOV	R12, R10
;__Lib_System_105_107.c, 79 :: 		
0x1234	0x46EA    MOV	R10, SP
;__Lib_System_105_107.c, 80 :: 		
L_loopFZs:
;__Lib_System_105_107.c, 81 :: 		
0x1236	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_105_107.c, 82 :: 		
0x123A	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 83 :: 		
0x123E	0xD1FA    BNE	L_loopFZs
;__Lib_System_105_107.c, 84 :: 		
0x1240	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_105_107.c, 85 :: 		
0x1244	0xDD05    BLE	L_norep
;__Lib_System_105_107.c, 86 :: 		
0x1246	0x46E2    MOV	R10, R12
;__Lib_System_105_107.c, 87 :: 		
0x1248	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_105_107.c, 88 :: 		
0x124C	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_105_107.c, 89 :: 		
0x1250	0xE7F1    B	L_loopFZs
;__Lib_System_105_107.c, 90 :: 		
L_norep:
;__Lib_System_105_107.c, 92 :: 		
L_end___FillZeros:
0x1252	0xB001    ADD	SP, SP, #4
0x1254	0x4770    BX	LR
; end of ___FillZeros
_systemInit:
;Click_DALI_2_STM.c, 35 :: 		void systemInit()
0x1258	0xB081    SUB	SP, SP, #4
0x125A	0xF8CDE000  STR	LR, [SP, #0]
;Click_DALI_2_STM.c, 37 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_INT_PIN, _GPIO_OUTPUT );
0x125E	0x2200    MOVS	R2, #0
0x1260	0x2107    MOVS	R1, #7
0x1262	0x2000    MOVS	R0, #0
0x1264	0xF7FFFDC0  BL	_mikrobus_gpioInit+0
;Click_DALI_2_STM.c, 38 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_RST_PIN, _GPIO_OUTPUT );
0x1268	0x2200    MOVS	R2, #0
0x126A	0x2101    MOVS	R1, #1
0x126C	0x2000    MOVS	R0, #0
0x126E	0xF7FFFDBB  BL	_mikrobus_gpioInit+0
;Click_DALI_2_STM.c, 39 :: 		}
L_end_systemInit:
0x1272	0xF8DDE000  LDR	LR, [SP, #0]
0x1276	0xB001    ADD	SP, SP, #4
0x1278	0x4770    BX	LR
; end of _systemInit
_mikrobus_gpioInit:
;easymx_v7_STM32F107VC.c, 162 :: 		T_mikrobus_ret mikrobus_gpioInit(T_mikrobus_soc bus, T_mikrobus_pin pin, T_gpio_dir direction)
; direction start address is: 8 (R2)
; pin start address is: 4 (R1)
; bus start address is: 0 (R0)
0x0DE8	0xB081    SUB	SP, SP, #4
0x0DEA	0xF8CDE000  STR	LR, [SP, #0]
0x0DEE	0xFA5FF981  UXTB	R9, R1
0x0DF2	0xFA5FFA82  UXTB	R10, R2
; direction end address is: 8 (R2)
; pin end address is: 4 (R1)
; bus end address is: 0 (R0)
; bus start address is: 0 (R0)
; pin start address is: 36 (R9)
; direction start address is: 40 (R10)
;easymx_v7_STM32F107VC.c, 164 :: 		switch( bus )
0x0DF6	0xE00F    B	L_mikrobus_gpioInit78
; bus end address is: 0 (R0)
;easymx_v7_STM32F107VC.c, 167 :: 		case _MIKROBUS1 : return _gpioInit_1(pin, direction);
L_mikrobus_gpioInit80:
0x0DF8	0xFA5FF18A  UXTB	R1, R10
; direction end address is: 40 (R10)
0x0DFC	0xFA5FF089  UXTB	R0, R9
; pin end address is: 36 (R9)
0x0E00	0xF7FFFC38  BL	easymx_v7_STM32F107VC__gpioInit_1+0
0x0E04	0xE00D    B	L_end_mikrobus_gpioInit
;easymx_v7_STM32F107VC.c, 170 :: 		case _MIKROBUS2 : return _gpioInit_2(pin, direction);
L_mikrobus_gpioInit81:
; direction start address is: 40 (R10)
; pin start address is: 36 (R9)
0x0E06	0xFA5FF18A  UXTB	R1, R10
; direction end address is: 40 (R10)
0x0E0A	0xFA5FF089  UXTB	R0, R9
; pin end address is: 36 (R9)
0x0E0E	0xF7FFFD0D  BL	easymx_v7_STM32F107VC__gpioInit_2+0
0x0E12	0xE006    B	L_end_mikrobus_gpioInit
;easymx_v7_STM32F107VC.c, 184 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_gpioInit82:
0x0E14	0x2001    MOVS	R0, #1
0x0E16	0xE004    B	L_end_mikrobus_gpioInit
;easymx_v7_STM32F107VC.c, 185 :: 		}
L_mikrobus_gpioInit78:
; direction start address is: 40 (R10)
; pin start address is: 36 (R9)
; bus start address is: 0 (R0)
0x0E18	0x2800    CMP	R0, #0
0x0E1A	0xD0ED    BEQ	L_mikrobus_gpioInit80
0x0E1C	0x2801    CMP	R0, #1
0x0E1E	0xD0F2    BEQ	L_mikrobus_gpioInit81
; bus end address is: 0 (R0)
; pin end address is: 36 (R9)
; direction end address is: 40 (R10)
0x0E20	0xE7F8    B	L_mikrobus_gpioInit82
;easymx_v7_STM32F107VC.c, 187 :: 		}
L_end_mikrobus_gpioInit:
0x0E22	0xF8DDE000  LDR	LR, [SP, #0]
0x0E26	0xB001    ADD	SP, SP, #4
0x0E28	0x4770    BX	LR
; end of _mikrobus_gpioInit
easymx_v7_STM32F107VC__gpioInit_1:
;__em_f107vc_gpio.c, 81 :: 		static T_mikrobus_ret _gpioInit_1(T_mikrobus_pin pin, T_gpio_dir dir)
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x0674	0xB081    SUB	SP, SP, #4
0x0676	0xF8CDE000  STR	LR, [SP, #0]
; dir end address is: 4 (R1)
; pin end address is: 0 (R0)
; pin start address is: 0 (R0)
; dir start address is: 4 (R1)
;__em_f107vc_gpio.c, 83 :: 		switch( pin )
0x067A	0xE0A9    B	L_easymx_v7_STM32F107VC__gpioInit_10
; pin end address is: 0 (R0)
;__em_f107vc_gpio.c, 85 :: 		case _MIKROBUS_AN_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOA_BASE, _GPIO_PINMASK_4 ); else GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_4 ); break;
L_easymx_v7_STM32F107VC__gpioInit_12:
0x067C	0x2901    CMP	R1, #1
0x067E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_13
; dir end address is: 4 (R1)
0x0680	0xF2400110  MOVW	R1, #16
0x0684	0x4865    LDR	R0, [PC, #404]
0x0686	0xF7FFFEA3  BL	_GPIO_Digital_Input+0
0x068A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_14
L_easymx_v7_STM32F107VC__gpioInit_13:
0x068C	0xF2400110  MOVW	R1, #16
0x0690	0x4862    LDR	R0, [PC, #392]
0x0692	0xF7FFFEA9  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_14:
0x0696	0xE0BB    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 86 :: 		case _MIKROBUS_RST_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_2 ); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_2 ); break;
L_easymx_v7_STM32F107VC__gpioInit_15:
; dir start address is: 4 (R1)
0x0698	0x2901    CMP	R1, #1
0x069A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_16
; dir end address is: 4 (R1)
0x069C	0xF2400104  MOVW	R1, #4
0x06A0	0x485F    LDR	R0, [PC, #380]
0x06A2	0xF7FFFE95  BL	_GPIO_Digital_Input+0
0x06A6	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_17
L_easymx_v7_STM32F107VC__gpioInit_16:
0x06A8	0xF2400104  MOVW	R1, #4
0x06AC	0x485C    LDR	R0, [PC, #368]
0x06AE	0xF7FFFE9B  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_17:
0x06B2	0xE0AD    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 87 :: 		case _MIKROBUS_CS_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_13); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_13); break;
L_easymx_v7_STM32F107VC__gpioInit_18:
; dir start address is: 4 (R1)
0x06B4	0x2901    CMP	R1, #1
0x06B6	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_19
; dir end address is: 4 (R1)
0x06B8	0xF2420100  MOVW	R1, #8192
0x06BC	0x4859    LDR	R0, [PC, #356]
0x06BE	0xF7FFFE87  BL	_GPIO_Digital_Input+0
0x06C2	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_110
L_easymx_v7_STM32F107VC__gpioInit_19:
0x06C4	0xF2420100  MOVW	R1, #8192
0x06C8	0x4856    LDR	R0, [PC, #344]
0x06CA	0xF7FFFE8D  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_110:
0x06CE	0xE09F    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 88 :: 		case _MIKROBUS_SCK_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_10); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_10); break;
L_easymx_v7_STM32F107VC__gpioInit_111:
; dir start address is: 4 (R1)
0x06D0	0x2901    CMP	R1, #1
0x06D2	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_112
; dir end address is: 4 (R1)
0x06D4	0xF2404100  MOVW	R1, #1024
0x06D8	0x4851    LDR	R0, [PC, #324]
0x06DA	0xF7FFFE79  BL	_GPIO_Digital_Input+0
0x06DE	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_113
L_easymx_v7_STM32F107VC__gpioInit_112:
0x06E0	0xF2404100  MOVW	R1, #1024
0x06E4	0x484E    LDR	R0, [PC, #312]
0x06E6	0xF7FFFE7F  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_113:
0x06EA	0xE091    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 89 :: 		case _MIKROBUS_MISO_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_11); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_11); break;
L_easymx_v7_STM32F107VC__gpioInit_114:
; dir start address is: 4 (R1)
0x06EC	0x2901    CMP	R1, #1
0x06EE	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_115
; dir end address is: 4 (R1)
0x06F0	0xF6400100  MOVW	R1, #2048
0x06F4	0x484A    LDR	R0, [PC, #296]
0x06F6	0xF7FFFE6B  BL	_GPIO_Digital_Input+0
0x06FA	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_116
L_easymx_v7_STM32F107VC__gpioInit_115:
0x06FC	0xF6400100  MOVW	R1, #2048
0x0700	0x4847    LDR	R0, [PC, #284]
0x0702	0xF7FFFE71  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_116:
0x0706	0xE083    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 90 :: 		case _MIKROBUS_MOSI_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_12); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_12); break;
L_easymx_v7_STM32F107VC__gpioInit_117:
; dir start address is: 4 (R1)
0x0708	0x2901    CMP	R1, #1
0x070A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_118
; dir end address is: 4 (R1)
0x070C	0xF2410100  MOVW	R1, #4096
0x0710	0x4843    LDR	R0, [PC, #268]
0x0712	0xF7FFFE5D  BL	_GPIO_Digital_Input+0
0x0716	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_119
L_easymx_v7_STM32F107VC__gpioInit_118:
0x0718	0xF2410100  MOVW	R1, #4096
0x071C	0x4840    LDR	R0, [PC, #256]
0x071E	0xF7FFFE63  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_119:
0x0722	0xE075    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 91 :: 		case _MIKROBUS_PWM_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOA_BASE, _GPIO_PINMASK_0 ); else GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_0 ); break;
L_easymx_v7_STM32F107VC__gpioInit_120:
; dir start address is: 4 (R1)
0x0724	0x2901    CMP	R1, #1
0x0726	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_121
; dir end address is: 4 (R1)
0x0728	0xF2400101  MOVW	R1, #1
0x072C	0x483B    LDR	R0, [PC, #236]
0x072E	0xF7FFFE4F  BL	_GPIO_Digital_Input+0
0x0732	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_122
L_easymx_v7_STM32F107VC__gpioInit_121:
0x0734	0xF2400101  MOVW	R1, #1
0x0738	0x4838    LDR	R0, [PC, #224]
0x073A	0xF7FFFE55  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_122:
0x073E	0xE067    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 92 :: 		case _MIKROBUS_INT_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_10); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_10); break;
L_easymx_v7_STM32F107VC__gpioInit_123:
; dir start address is: 4 (R1)
0x0740	0x2901    CMP	R1, #1
0x0742	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_124
; dir end address is: 4 (R1)
0x0744	0xF2404100  MOVW	R1, #1024
0x0748	0x4836    LDR	R0, [PC, #216]
0x074A	0xF7FFFE41  BL	_GPIO_Digital_Input+0
0x074E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_125
L_easymx_v7_STM32F107VC__gpioInit_124:
0x0750	0xF2404100  MOVW	R1, #1024
0x0754	0x4833    LDR	R0, [PC, #204]
0x0756	0xF7FFFE47  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_125:
0x075A	0xE059    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 93 :: 		case _MIKROBUS_RX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_9 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_9 ); break;
L_easymx_v7_STM32F107VC__gpioInit_126:
; dir start address is: 4 (R1)
0x075C	0x2901    CMP	R1, #1
0x075E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_127
; dir end address is: 4 (R1)
0x0760	0xF2402100  MOVW	R1, #512
0x0764	0x482F    LDR	R0, [PC, #188]
0x0766	0xF7FFFE33  BL	_GPIO_Digital_Input+0
0x076A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_128
L_easymx_v7_STM32F107VC__gpioInit_127:
0x076C	0xF2402100  MOVW	R1, #512
0x0770	0x482C    LDR	R0, [PC, #176]
0x0772	0xF7FFFE39  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_128:
0x0776	0xE04B    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 94 :: 		case _MIKROBUS_TX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_8 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_8 ); break;
L_easymx_v7_STM32F107VC__gpioInit_129:
; dir start address is: 4 (R1)
0x0778	0x2901    CMP	R1, #1
0x077A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_130
; dir end address is: 4 (R1)
0x077C	0xF2401100  MOVW	R1, #256
0x0780	0x4828    LDR	R0, [PC, #160]
0x0782	0xF7FFFE25  BL	_GPIO_Digital_Input+0
0x0786	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_131
L_easymx_v7_STM32F107VC__gpioInit_130:
0x0788	0xF2401100  MOVW	R1, #256
0x078C	0x4825    LDR	R0, [PC, #148]
0x078E	0xF7FFFE2B  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_131:
0x0792	0xE03D    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 95 :: 		case _MIKROBUS_SCL_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_6 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_6 ); break;
L_easymx_v7_STM32F107VC__gpioInit_132:
; dir start address is: 4 (R1)
0x0794	0x2901    CMP	R1, #1
0x0796	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_133
; dir end address is: 4 (R1)
0x0798	0xF2400140  MOVW	R1, #64
0x079C	0x4822    LDR	R0, [PC, #136]
0x079E	0xF7FFFE17  BL	_GPIO_Digital_Input+0
0x07A2	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_134
L_easymx_v7_STM32F107VC__gpioInit_133:
0x07A4	0xF2400140  MOVW	R1, #64
0x07A8	0x481F    LDR	R0, [PC, #124]
0x07AA	0xF7FFFE1D  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_134:
0x07AE	0xE02F    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 96 :: 		case _MIKROBUS_SDA_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_7 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_7 ); break;
L_easymx_v7_STM32F107VC__gpioInit_135:
; dir start address is: 4 (R1)
0x07B0	0x2901    CMP	R1, #1
0x07B2	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_136
; dir end address is: 4 (R1)
0x07B4	0xF2400180  MOVW	R1, #128
0x07B8	0x481B    LDR	R0, [PC, #108]
0x07BA	0xF7FFFE09  BL	_GPIO_Digital_Input+0
0x07BE	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_137
L_easymx_v7_STM32F107VC__gpioInit_136:
0x07C0	0xF2400180  MOVW	R1, #128
0x07C4	0x4818    LDR	R0, [PC, #96]
0x07C6	0xF7FFFE0F  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_137:
0x07CA	0xE021    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 97 :: 		default                  : return _MIKROBUS_ERR_PIN;
L_easymx_v7_STM32F107VC__gpioInit_138:
0x07CC	0x2001    MOVS	R0, #1
0x07CE	0xE020    B	L_end__gpioInit_1
;__em_f107vc_gpio.c, 98 :: 		}
L_easymx_v7_STM32F107VC__gpioInit_10:
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x07D0	0x2800    CMP	R0, #0
0x07D2	0xF43FAF53  BEQ	L_easymx_v7_STM32F107VC__gpioInit_12
0x07D6	0x2801    CMP	R0, #1
0x07D8	0xF43FAF5E  BEQ	L_easymx_v7_STM32F107VC__gpioInit_15
0x07DC	0x2802    CMP	R0, #2
0x07DE	0xF43FAF69  BEQ	L_easymx_v7_STM32F107VC__gpioInit_18
0x07E2	0x2803    CMP	R0, #3
0x07E4	0xF43FAF74  BEQ	L_easymx_v7_STM32F107VC__gpioInit_111
0x07E8	0x2804    CMP	R0, #4
0x07EA	0xF43FAF7F  BEQ	L_easymx_v7_STM32F107VC__gpioInit_114
0x07EE	0x2805    CMP	R0, #5
0x07F0	0xF43FAF8A  BEQ	L_easymx_v7_STM32F107VC__gpioInit_117
0x07F4	0x2806    CMP	R0, #6
0x07F6	0xF43FAF95  BEQ	L_easymx_v7_STM32F107VC__gpioInit_120
0x07FA	0x2807    CMP	R0, #7
0x07FC	0xD0A0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_123
0x07FE	0x2808    CMP	R0, #8
0x0800	0xD0AC    BEQ	L_easymx_v7_STM32F107VC__gpioInit_126
0x0802	0x2809    CMP	R0, #9
0x0804	0xD0B8    BEQ	L_easymx_v7_STM32F107VC__gpioInit_129
0x0806	0x280A    CMP	R0, #10
0x0808	0xD0C4    BEQ	L_easymx_v7_STM32F107VC__gpioInit_132
0x080A	0x280B    CMP	R0, #11
0x080C	0xD0D0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_135
; pin end address is: 0 (R0)
; dir end address is: 4 (R1)
0x080E	0xE7DD    B	L_easymx_v7_STM32F107VC__gpioInit_138
L_easymx_v7_STM32F107VC__gpioInit_11:
;__em_f107vc_gpio.c, 99 :: 		return _MIKROBUS_OK;
0x0810	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_gpio.c, 100 :: 		}
L_end__gpioInit_1:
0x0812	0xF8DDE000  LDR	LR, [SP, #0]
0x0816	0xB001    ADD	SP, SP, #4
0x0818	0x4770    BX	LR
0x081A	0xBF00    NOP
0x081C	0x08004001  	GPIOA_BASE+0
0x0820	0x10004001  	GPIOC_BASE+0
0x0824	0x14004001  	GPIOD_BASE+0
0x0828	0x0C004001  	GPIOB_BASE+0
; end of easymx_v7_STM32F107VC__gpioInit_1
_GPIO_Digital_Input:
;__Lib_GPIO_32F10x.c, 369 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x03D0	0xB081    SUB	SP, SP, #4
0x03D2	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 370 :: 		
0x03D6	0xF04F0242  MOV	R2, #66
0x03DA	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x03DC	0xF7FFFEFE  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 371 :: 		
L_end_GPIO_Digital_Input:
0x03E0	0xF8DDE000  LDR	LR, [SP, #0]
0x03E4	0xB001    ADD	SP, SP, #4
0x03E6	0x4770    BX	LR
; end of _GPIO_Digital_Input
_GPIO_Config:
;__Lib_GPIO_32F10x.c, 124 :: 		
; config start address is: 8 (R2)
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x01DC	0xB081    SUB	SP, SP, #4
0x01DE	0xF8CDE000  STR	LR, [SP, #0]
0x01E2	0xB28C    UXTH	R4, R1
0x01E4	0x4615    MOV	R5, R2
; config end address is: 8 (R2)
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 16 (R4)
; config start address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 129 :: 		
0x01E6	0x4B77    LDR	R3, [PC, #476]
0x01E8	0xEA000303  AND	R3, R0, R3, LSL #0
; port end address is: 0 (R0)
; port start address is: 24 (R6)
0x01EC	0x461E    MOV	R6, R3
;__Lib_GPIO_32F10x.c, 131 :: 		
0x01EE	0x4618    MOV	R0, R3
0x01F0	0xF7FFFFAE  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_32F10x.c, 134 :: 		
0x01F4	0xF1B40FFF  CMP	R4, #255
0x01F8	0xD10C    BNE	L_GPIO_Config18
;__Lib_GPIO_32F10x.c, 135 :: 		
0x01FA	0x4B73    LDR	R3, [PC, #460]
0x01FC	0x429D    CMP	R5, R3
0x01FE	0xD103    BNE	L_GPIO_Config19
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 136 :: 		
0x0200	0xF04F3333  MOV	R3, #858993459
0x0204	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 137 :: 		
0x0206	0xE0D9    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 138 :: 		
L_GPIO_Config19:
;__Lib_GPIO_32F10x.c, 139 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x0208	0x2D42    CMP	R5, #66
0x020A	0xD103    BNE	L_GPIO_Config20
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 140 :: 		
0x020C	0xF04F3344  MOV	R3, #1145324612
0x0210	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 141 :: 		
0x0212	0xE0D3    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 142 :: 		
L_GPIO_Config20:
;__Lib_GPIO_32F10x.c, 143 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config18:
;__Lib_GPIO_32F10x.c, 145 :: 		
0x0214	0xF64F73FF  MOVW	R3, #65535
0x0218	0x429C    CMP	R4, R3
0x021A	0xD114    BNE	L_GPIO_Config21
;__Lib_GPIO_32F10x.c, 146 :: 		
0x021C	0x4B6A    LDR	R3, [PC, #424]
0x021E	0x429D    CMP	R5, R3
0x0220	0xD107    BNE	L_GPIO_Config22
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 147 :: 		
0x0222	0xF04F3333  MOV	R3, #858993459
0x0226	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 148 :: 		
0x0228	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x022A	0xF04F3333  MOV	R3, #858993459
0x022E	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 149 :: 		
0x0230	0xE0C4    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 150 :: 		
L_GPIO_Config22:
;__Lib_GPIO_32F10x.c, 151 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x0232	0x2D42    CMP	R5, #66
0x0234	0xD107    BNE	L_GPIO_Config23
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 152 :: 		
0x0236	0xF04F3344  MOV	R3, #1145324612
0x023A	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 153 :: 		
0x023C	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x023E	0xF04F3344  MOV	R3, #1145324612
0x0242	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 154 :: 		
0x0244	0xE0BA    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 155 :: 		
L_GPIO_Config23:
;__Lib_GPIO_32F10x.c, 156 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config21:
;__Lib_GPIO_32F10x.c, 158 :: 		
; currentmode start address is: 4 (R1)
0x0246	0x2100    MOVS	R1, #0
;__Lib_GPIO_32F10x.c, 159 :: 		
; speed start address is: 0 (R0)
0x0248	0x2000    MOVS	R0, #0
;__Lib_GPIO_32F10x.c, 161 :: 		
0x024A	0xF0050301  AND	R3, R5, #1
0x024E	0xB10B    CBZ	R3, L_GPIO_Config24
;__Lib_GPIO_32F10x.c, 162 :: 		
0x0250	0x2100    MOVS	R1, #0
0x0252	0xE01D    B	L_GPIO_Config25
L_GPIO_Config24:
;__Lib_GPIO_32F10x.c, 163 :: 		
0x0254	0xF0050302  AND	R3, R5, #2
0x0258	0xB133    CBZ	R3, L_GPIO_Config26
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 164 :: 		
0x025A	0xF40573C0  AND	R3, R5, #384
0x025E	0xB10B    CBZ	R3, L_GPIO_Config27
;__Lib_GPIO_32F10x.c, 165 :: 		
; currentmode start address is: 4 (R1)
0x0260	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
0x0262	0xE000    B	L_GPIO_Config28
L_GPIO_Config27:
;__Lib_GPIO_32F10x.c, 167 :: 		
; currentmode start address is: 4 (R1)
0x0264	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
L_GPIO_Config28:
;__Lib_GPIO_32F10x.c, 168 :: 		
; currentmode start address is: 4 (R1)
0x0266	0xE013    B	L_GPIO_Config29
L_GPIO_Config26:
;__Lib_GPIO_32F10x.c, 169 :: 		
0x0268	0xF0050304  AND	R3, R5, #4
0x026C	0xB133    CBZ	R3, L_GPIO_Config30
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 170 :: 		
0x026E	0xF0050320  AND	R3, R5, #32
0x0272	0xB10B    CBZ	R3, L_GPIO_Config31
;__Lib_GPIO_32F10x.c, 171 :: 		
; currentmode start address is: 4 (R1)
0x0274	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
0x0276	0xE000    B	L_GPIO_Config32
L_GPIO_Config31:
;__Lib_GPIO_32F10x.c, 173 :: 		
; currentmode start address is: 4 (R1)
0x0278	0x2100    MOVS	R1, #0
; currentmode end address is: 4 (R1)
L_GPIO_Config32:
;__Lib_GPIO_32F10x.c, 174 :: 		
; currentmode start address is: 4 (R1)
0x027A	0xE009    B	L_GPIO_Config33
L_GPIO_Config30:
;__Lib_GPIO_32F10x.c, 175 :: 		
0x027C	0xF0050308  AND	R3, R5, #8
0x0280	0xB133    CBZ	R3, L__GPIO_Config100
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 176 :: 		
0x0282	0xF0050320  AND	R3, R5, #32
0x0286	0xB10B    CBZ	R3, L_GPIO_Config35
;__Lib_GPIO_32F10x.c, 177 :: 		
; currentmode start address is: 4 (R1)
0x0288	0x210C    MOVS	R1, #12
; currentmode end address is: 4 (R1)
0x028A	0xE000    B	L_GPIO_Config36
L_GPIO_Config35:
;__Lib_GPIO_32F10x.c, 179 :: 		
; currentmode start address is: 4 (R1)
0x028C	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
L_GPIO_Config36:
;__Lib_GPIO_32F10x.c, 180 :: 		
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
0x028E	0xE7FF    B	L_GPIO_Config34
L__GPIO_Config100:
;__Lib_GPIO_32F10x.c, 175 :: 		
;__Lib_GPIO_32F10x.c, 180 :: 		
L_GPIO_Config34:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config33:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config29:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config25:
;__Lib_GPIO_32F10x.c, 182 :: 		
; currentmode start address is: 4 (R1)
0x0290	0x4B4E    LDR	R3, [PC, #312]
0x0292	0xEA050303  AND	R3, R5, R3, LSL #0
0x0296	0xB10B    CBZ	R3, L_GPIO_Config37
;__Lib_GPIO_32F10x.c, 183 :: 		
0x0298	0x2003    MOVS	R0, #3
0x029A	0xE009    B	L_GPIO_Config38
L_GPIO_Config37:
;__Lib_GPIO_32F10x.c, 184 :: 		
0x029C	0xF4057300  AND	R3, R5, #512
0x02A0	0xB10B    CBZ	R3, L_GPIO_Config39
;__Lib_GPIO_32F10x.c, 185 :: 		
0x02A2	0x2002    MOVS	R0, #2
0x02A4	0xE004    B	L_GPIO_Config40
L_GPIO_Config39:
;__Lib_GPIO_32F10x.c, 186 :: 		
0x02A6	0xF4056380  AND	R3, R5, #1024
0x02AA	0xB10B    CBZ	R3, L__GPIO_Config101
;__Lib_GPIO_32F10x.c, 187 :: 		
0x02AC	0x2001    MOVS	R0, #1
; speed end address is: 0 (R0)
0x02AE	0xE7FF    B	L_GPIO_Config41
L__GPIO_Config101:
;__Lib_GPIO_32F10x.c, 186 :: 		
;__Lib_GPIO_32F10x.c, 187 :: 		
L_GPIO_Config41:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config40:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config38:
;__Lib_GPIO_32F10x.c, 189 :: 		
; speed start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 195 :: 		
0x02B0	0xF005030C  AND	R3, R5, #12
0x02B4	0xB10B    CBZ	R3, L__GPIO_Config102
;__Lib_GPIO_32F10x.c, 198 :: 		
0x02B6	0x4301    ORRS	R1, R0
; speed end address is: 0 (R0)
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 199 :: 		
0x02B8	0xE7FF    B	L_GPIO_Config42
L__GPIO_Config102:
;__Lib_GPIO_32F10x.c, 195 :: 		
;__Lib_GPIO_32F10x.c, 199 :: 		
L_GPIO_Config42:
;__Lib_GPIO_32F10x.c, 201 :: 		
; currentmode start address is: 4 (R1)
0x02BA	0xF00403FF  AND	R3, R4, #255
0x02BE	0xB29B    UXTH	R3, R3
0x02C0	0x2B00    CMP	R3, #0
0x02C2	0xD03B    BEQ	L__GPIO_Config104
;__Lib_GPIO_32F10x.c, 202 :: 		
0x02C4	0x6837    LDR	R7, [R6, #0]
; tmpreg start address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 204 :: 		
; pinpos start address is: 0 (R0)
0x02C6	0x2000    MOVS	R0, #0
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
; currentmode end address is: 4 (R1)
; tmpreg end address is: 28 (R7)
; pinpos end address is: 0 (R0)
; port end address is: 24 (R6)
0x02C8	0xFA1FF884  UXTH	R8, R4
0x02CC	0x4632    MOV	R2, R6
0x02CE	0x462E    MOV	R6, R5
L_GPIO_Config44:
; pinpos start address is: 0 (R0)
; tmpreg start address is: 28 (R7)
; currentmode start address is: 4 (R1)
; port start address is: 8 (R2)
; config start address is: 24 (R6)
; pin_mask start address is: 32 (R8)
0x02D0	0x2808    CMP	R0, #8
0x02D2	0xD22C    BCS	L_GPIO_Config45
;__Lib_GPIO_32F10x.c, 206 :: 		
0x02D4	0xF04F0301  MOV	R3, #1
0x02D8	0xFA03F400  LSL	R4, R3, R0
;__Lib_GPIO_32F10x.c, 208 :: 		
0x02DC	0xEA080304  AND	R3, R8, R4, LSL #0
;__Lib_GPIO_32F10x.c, 210 :: 		
0x02E0	0x42A3    CMP	R3, R4
0x02E2	0xD122    BNE	L__GPIO_Config103
;__Lib_GPIO_32F10x.c, 212 :: 		
0x02E4	0x0085    LSLS	R5, R0, #2
;__Lib_GPIO_32F10x.c, 214 :: 		
0x02E6	0xF04F030F  MOV	R3, #15
0x02EA	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 215 :: 		
0x02EC	0x43DB    MVN	R3, R3
0x02EE	0xEA070403  AND	R4, R7, R3, LSL #0
; tmpreg end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 218 :: 		
0x02F2	0xFA01F305  LSL	R3, R1, R5
0x02F6	0xEA440303  ORR	R3, R4, R3, LSL #0
; tmpreg start address is: 20 (R5)
0x02FA	0x461D    MOV	R5, R3
;__Lib_GPIO_32F10x.c, 221 :: 		
0x02FC	0xF4067381  AND	R3, R6, #258
0x0300	0xF5B37F81  CMP	R3, #258
0x0304	0xD105    BNE	L_GPIO_Config48
;__Lib_GPIO_32F10x.c, 223 :: 		
0x0306	0xF2020414  ADDW	R4, R2, #20
0x030A	0xF04F0301  MOV	R3, #1
0x030E	0x4083    LSLS	R3, R0
0x0310	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 224 :: 		
L_GPIO_Config48:
;__Lib_GPIO_32F10x.c, 226 :: 		
0x0312	0xF0060382  AND	R3, R6, #130
0x0316	0x2B82    CMP	R3, #130
0x0318	0xD105    BNE	L_GPIO_Config49
;__Lib_GPIO_32F10x.c, 228 :: 		
0x031A	0xF2020410  ADDW	R4, R2, #16
0x031E	0xF04F0301  MOV	R3, #1
0x0322	0x4083    LSLS	R3, R0
0x0324	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 229 :: 		
L_GPIO_Config49:
;__Lib_GPIO_32F10x.c, 230 :: 		
0x0326	0x462F    MOV	R7, R5
0x0328	0xE7FF    B	L_GPIO_Config47
; tmpreg end address is: 20 (R5)
L__GPIO_Config103:
;__Lib_GPIO_32F10x.c, 210 :: 		
;__Lib_GPIO_32F10x.c, 230 :: 		
L_GPIO_Config47:
;__Lib_GPIO_32F10x.c, 204 :: 		
; tmpreg start address is: 28 (R7)
0x032A	0x1C40    ADDS	R0, R0, #1
;__Lib_GPIO_32F10x.c, 231 :: 		
; pinpos end address is: 0 (R0)
0x032C	0xE7D0    B	L_GPIO_Config44
L_GPIO_Config45:
;__Lib_GPIO_32F10x.c, 232 :: 		
0x032E	0x6017    STR	R7, [R2, #0]
; currentmode end address is: 4 (R1)
; port end address is: 8 (R2)
; config end address is: 24 (R6)
; pin_mask end address is: 32 (R8)
; tmpreg end address is: 28 (R7)
0x0330	0xFA1FF088  UXTH	R0, R8
0x0334	0x460F    MOV	R7, R1
0x0336	0x4631    MOV	R1, R6
0x0338	0x4616    MOV	R6, R2
;__Lib_GPIO_32F10x.c, 234 :: 		
0x033A	0xE002    B	L_GPIO_Config43
L__GPIO_Config104:
;__Lib_GPIO_32F10x.c, 201 :: 		
0x033C	0x460F    MOV	R7, R1
0x033E	0x4629    MOV	R1, R5
0x0340	0xB2A0    UXTH	R0, R4
;__Lib_GPIO_32F10x.c, 234 :: 		
L_GPIO_Config43:
;__Lib_GPIO_32F10x.c, 238 :: 		
; currentmode start address is: 28 (R7)
; port start address is: 24 (R6)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x0342	0xF1B00FFF  CMP	R0, #255
0x0346	0xD939    BLS	L_GPIO_Config50
;__Lib_GPIO_32F10x.c, 240 :: 		
0x0348	0x1D33    ADDS	R3, R6, #4
0x034A	0xF8D38000  LDR	R8, [R3, #0]
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 241 :: 		
; pinpos start address is: 8 (R2)
0x034E	0x2200    MOVS	R2, #0
; port end address is: 24 (R6)
; tmpreg end address is: 32 (R8)
; pinpos end address is: 8 (R2)
L_GPIO_Config51:
; pinpos start address is: 8 (R2)
; tmpreg start address is: 32 (R8)
; pin_mask start address is: 0 (R0)
; pin_mask end address is: 0 (R0)
; config start address is: 4 (R1)
; config end address is: 4 (R1)
; port start address is: 24 (R6)
; currentmode start address is: 28 (R7)
; currentmode end address is: 28 (R7)
0x0350	0x2A08    CMP	R2, #8
0x0352	0xD230    BCS	L_GPIO_Config52
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 243 :: 		
; currentmode start address is: 28 (R7)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x0354	0xF2020408  ADDW	R4, R2, #8
0x0358	0xF04F0301  MOV	R3, #1
0x035C	0xFA03F404  LSL	R4, R3, R4
;__Lib_GPIO_32F10x.c, 245 :: 		
0x0360	0xEA000304  AND	R3, R0, R4, LSL #0
;__Lib_GPIO_32F10x.c, 246 :: 		
0x0364	0x42A3    CMP	R3, R4
0x0366	0xD124    BNE	L__GPIO_Config105
;__Lib_GPIO_32F10x.c, 248 :: 		
0x0368	0x0095    LSLS	R5, R2, #2
;__Lib_GPIO_32F10x.c, 250 :: 		
0x036A	0xF04F030F  MOV	R3, #15
0x036E	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 251 :: 		
0x0370	0x43DB    MVN	R3, R3
0x0372	0xEA080803  AND	R8, R8, R3, LSL #0
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 254 :: 		
0x0376	0xFA07F305  LSL	R3, R7, R5
0x037A	0xEA480803  ORR	R8, R8, R3, LSL #0
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 257 :: 		
0x037E	0xF4017381  AND	R3, R1, #258
0x0382	0xF5B37F81  CMP	R3, #258
0x0386	0xD107    BNE	L_GPIO_Config55
;__Lib_GPIO_32F10x.c, 259 :: 		
0x0388	0xF2060514  ADDW	R5, R6, #20
0x038C	0xF2020408  ADDW	R4, R2, #8
0x0390	0xF04F0301  MOV	R3, #1
0x0394	0x40A3    LSLS	R3, R4
0x0396	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 260 :: 		
L_GPIO_Config55:
;__Lib_GPIO_32F10x.c, 262 :: 		
0x0398	0xF0010382  AND	R3, R1, #130
0x039C	0x2B82    CMP	R3, #130
0x039E	0xD107    BNE	L_GPIO_Config56
;__Lib_GPIO_32F10x.c, 264 :: 		
0x03A0	0xF2060510  ADDW	R5, R6, #16
0x03A4	0xF2020408  ADDW	R4, R2, #8
0x03A8	0xF04F0301  MOV	R3, #1
0x03AC	0x40A3    LSLS	R3, R4
0x03AE	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 265 :: 		
L_GPIO_Config56:
;__Lib_GPIO_32F10x.c, 266 :: 		
0x03B0	0xE7FF    B	L_GPIO_Config54
; tmpreg end address is: 32 (R8)
L__GPIO_Config105:
;__Lib_GPIO_32F10x.c, 246 :: 		
;__Lib_GPIO_32F10x.c, 266 :: 		
L_GPIO_Config54:
;__Lib_GPIO_32F10x.c, 241 :: 		
; tmpreg start address is: 32 (R8)
0x03B2	0x1C52    ADDS	R2, R2, #1
;__Lib_GPIO_32F10x.c, 267 :: 		
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
; pinpos end address is: 8 (R2)
0x03B4	0xE7CC    B	L_GPIO_Config51
L_GPIO_Config52:
;__Lib_GPIO_32F10x.c, 268 :: 		
0x03B6	0x1D33    ADDS	R3, R6, #4
; port end address is: 24 (R6)
0x03B8	0xF8C38000  STR	R8, [R3, #0]
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 269 :: 		
L_GPIO_Config50:
;__Lib_GPIO_32F10x.c, 270 :: 		
L_end_GPIO_Config:
0x03BC	0xF8DDE000  LDR	LR, [SP, #0]
0x03C0	0xB001    ADD	SP, SP, #4
0x03C2	0x4770    BX	LR
0x03C4	0xFC00FFFF  	#-1024
0x03C8	0x00140008  	#524308
0x03CC	0x08000008  	#526336
; end of _GPIO_Config
_GPIO_Clk_Enable:
;__Lib_GPIO_32F10x.c, 83 :: 		
; gpio_port start address is: 0 (R0)
0x0150	0xB081    SUB	SP, SP, #4
; gpio_port end address is: 0 (R0)
; gpio_port start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 85 :: 		
0x0152	0x4919    LDR	R1, [PC, #100]
0x0154	0xEA000101  AND	R1, R0, R1, LSL #0
; gpio_port end address is: 0 (R0)
; prt start address is: 0 (R0)
0x0158	0x4608    MOV	R0, R1
;__Lib_GPIO_32F10x.c, 86 :: 		
; pos start address is: 8 (R2)
0x015A	0x2200    MOVS	R2, #0
;__Lib_GPIO_32F10x.c, 87 :: 		
0x015C	0xE00E    B	L_GPIO_Clk_Enable0
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 88 :: 		
L_GPIO_Clk_Enable2:
; pos start address is: 0 (R0)
0x015E	0x2004    MOVS	R0, #4
; pos end address is: 0 (R0)
0x0160	0xE022    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 89 :: 		
L_GPIO_Clk_Enable3:
; pos start address is: 0 (R0)
0x0162	0x2008    MOVS	R0, #8
; pos end address is: 0 (R0)
0x0164	0xE020    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 90 :: 		
L_GPIO_Clk_Enable4:
; pos start address is: 0 (R0)
0x0166	0x2010    MOVS	R0, #16
; pos end address is: 0 (R0)
0x0168	0xE01E    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 91 :: 		
L_GPIO_Clk_Enable5:
; pos start address is: 0 (R0)
0x016A	0x2020    MOVS	R0, #32
; pos end address is: 0 (R0)
0x016C	0xE01C    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 92 :: 		
L_GPIO_Clk_Enable6:
; pos start address is: 0 (R0)
0x016E	0x2040    MOVS	R0, #64
; pos end address is: 0 (R0)
0x0170	0xE01A    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 93 :: 		
L_GPIO_Clk_Enable7:
; pos start address is: 0 (R0)
0x0172	0x2080    MOVS	R0, #128
; pos end address is: 0 (R0)
0x0174	0xE018    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 94 :: 		
L_GPIO_Clk_Enable8:
; pos start address is: 0 (R0)
0x0176	0xF2401000  MOVW	R0, #256
; pos end address is: 0 (R0)
0x017A	0xE015    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 95 :: 		
L_GPIO_Clk_Enable0:
; pos start address is: 8 (R2)
; prt start address is: 0 (R0)
0x017C	0x490F    LDR	R1, [PC, #60]
0x017E	0x4288    CMP	R0, R1
0x0180	0xD0ED    BEQ	L_GPIO_Clk_Enable2
0x0182	0x490F    LDR	R1, [PC, #60]
0x0184	0x4288    CMP	R0, R1
0x0186	0xD0EC    BEQ	L_GPIO_Clk_Enable3
0x0188	0x490E    LDR	R1, [PC, #56]
0x018A	0x4288    CMP	R0, R1
0x018C	0xD0EB    BEQ	L_GPIO_Clk_Enable4
0x018E	0x490E    LDR	R1, [PC, #56]
0x0190	0x4288    CMP	R0, R1
0x0192	0xD0EA    BEQ	L_GPIO_Clk_Enable5
0x0194	0x490D    LDR	R1, [PC, #52]
0x0196	0x4288    CMP	R0, R1
0x0198	0xD0E9    BEQ	L_GPIO_Clk_Enable6
0x019A	0x490D    LDR	R1, [PC, #52]
0x019C	0x4288    CMP	R0, R1
0x019E	0xD0E8    BEQ	L_GPIO_Clk_Enable7
0x01A0	0x490C    LDR	R1, [PC, #48]
0x01A2	0x4288    CMP	R0, R1
0x01A4	0xD0E7    BEQ	L_GPIO_Clk_Enable8
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
0x01A6	0x4610    MOV	R0, R2
L_GPIO_Clk_Enable1:
;__Lib_GPIO_32F10x.c, 97 :: 		
; pos start address is: 0 (R0)
0x01A8	0x490B    LDR	R1, [PC, #44]
0x01AA	0x6809    LDR	R1, [R1, #0]
0x01AC	0xEA410200  ORR	R2, R1, R0, LSL #0
; pos end address is: 0 (R0)
0x01B0	0x4909    LDR	R1, [PC, #36]
0x01B2	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 98 :: 		
L_end_GPIO_Clk_Enable:
0x01B4	0xB001    ADD	SP, SP, #4
0x01B6	0x4770    BX	LR
0x01B8	0xFC00FFFF  	#-1024
0x01BC	0x08004001  	#1073809408
0x01C0	0x0C004001  	#1073810432
0x01C4	0x10004001  	#1073811456
0x01C8	0x14004001  	#1073812480
0x01CC	0x18004001  	#1073813504
0x01D0	0x1C004001  	#1073814528
0x01D4	0x20004001  	#1073815552
0x01D8	0x10184002  	RCC_APB2ENR+0
; end of _GPIO_Clk_Enable
_GPIO_Digital_Output:
;__Lib_GPIO_32F10x.c, 365 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x03E8	0xB081    SUB	SP, SP, #4
0x03EA	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 366 :: 		
0x03EE	0x4A04    LDR	R2, [PC, #16]
0x03F0	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x03F2	0xF7FFFEF3  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 367 :: 		
L_end_GPIO_Digital_Output:
0x03F6	0xF8DDE000  LDR	LR, [SP, #0]
0x03FA	0xB001    ADD	SP, SP, #4
0x03FC	0x4770    BX	LR
0x03FE	0xBF00    NOP
0x0400	0x00140008  	#524308
; end of _GPIO_Digital_Output
easymx_v7_STM32F107VC__gpioInit_2:
;__em_f107vc_gpio.c, 102 :: 		static T_mikrobus_ret _gpioInit_2(T_mikrobus_pin pin, T_gpio_dir dir)
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x082C	0xB081    SUB	SP, SP, #4
0x082E	0xF8CDE000  STR	LR, [SP, #0]
; dir end address is: 4 (R1)
; pin end address is: 0 (R0)
; pin start address is: 0 (R0)
; dir start address is: 4 (R1)
;__em_f107vc_gpio.c, 104 :: 		switch( pin )
0x0832	0xE0A9    B	L_easymx_v7_STM32F107VC__gpioInit_239
; pin end address is: 0 (R0)
;__em_f107vc_gpio.c, 106 :: 		case _MIKROBUS_AN_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOA_BASE, _GPIO_PINMASK_5 ); else GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_5 ); break;
L_easymx_v7_STM32F107VC__gpioInit_241:
0x0834	0x2901    CMP	R1, #1
0x0836	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_242
; dir end address is: 4 (R1)
0x0838	0xF2400120  MOVW	R1, #32
0x083C	0x4865    LDR	R0, [PC, #404]
0x083E	0xF7FFFDC7  BL	_GPIO_Digital_Input+0
0x0842	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_243
L_easymx_v7_STM32F107VC__gpioInit_242:
0x0844	0xF2400120  MOVW	R1, #32
0x0848	0x4862    LDR	R0, [PC, #392]
0x084A	0xF7FFFDCD  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_243:
0x084E	0xE0BB    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 107 :: 		case _MIKROBUS_RST_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_3 ); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_3 ); break;
L_easymx_v7_STM32F107VC__gpioInit_244:
; dir start address is: 4 (R1)
0x0850	0x2901    CMP	R1, #1
0x0852	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_245
; dir end address is: 4 (R1)
0x0854	0xF2400108  MOVW	R1, #8
0x0858	0x485F    LDR	R0, [PC, #380]
0x085A	0xF7FFFDB9  BL	_GPIO_Digital_Input+0
0x085E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_246
L_easymx_v7_STM32F107VC__gpioInit_245:
0x0860	0xF2400108  MOVW	R1, #8
0x0864	0x485C    LDR	R0, [PC, #368]
0x0866	0xF7FFFDBF  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_246:
0x086A	0xE0AD    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 108 :: 		case _MIKROBUS_CS_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_14); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_14); break;
L_easymx_v7_STM32F107VC__gpioInit_247:
; dir start address is: 4 (R1)
0x086C	0x2901    CMP	R1, #1
0x086E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_248
; dir end address is: 4 (R1)
0x0870	0xF2440100  MOVW	R1, #16384
0x0874	0x4859    LDR	R0, [PC, #356]
0x0876	0xF7FFFDAB  BL	_GPIO_Digital_Input+0
0x087A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_249
L_easymx_v7_STM32F107VC__gpioInit_248:
0x087C	0xF2440100  MOVW	R1, #16384
0x0880	0x4856    LDR	R0, [PC, #344]
0x0882	0xF7FFFDB1  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_249:
0x0886	0xE09F    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 109 :: 		case _MIKROBUS_SCK_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_10); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_10); break;
L_easymx_v7_STM32F107VC__gpioInit_250:
; dir start address is: 4 (R1)
0x0888	0x2901    CMP	R1, #1
0x088A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_251
; dir end address is: 4 (R1)
0x088C	0xF2404100  MOVW	R1, #1024
0x0890	0x4851    LDR	R0, [PC, #324]
0x0892	0xF7FFFD9D  BL	_GPIO_Digital_Input+0
0x0896	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_252
L_easymx_v7_STM32F107VC__gpioInit_251:
0x0898	0xF2404100  MOVW	R1, #1024
0x089C	0x484E    LDR	R0, [PC, #312]
0x089E	0xF7FFFDA3  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_252:
0x08A2	0xE091    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 110 :: 		case _MIKROBUS_MISO_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_11); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_11); break;
L_easymx_v7_STM32F107VC__gpioInit_253:
; dir start address is: 4 (R1)
0x08A4	0x2901    CMP	R1, #1
0x08A6	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_254
; dir end address is: 4 (R1)
0x08A8	0xF6400100  MOVW	R1, #2048
0x08AC	0x484A    LDR	R0, [PC, #296]
0x08AE	0xF7FFFD8F  BL	_GPIO_Digital_Input+0
0x08B2	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_255
L_easymx_v7_STM32F107VC__gpioInit_254:
0x08B4	0xF6400100  MOVW	R1, #2048
0x08B8	0x4847    LDR	R0, [PC, #284]
0x08BA	0xF7FFFD95  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_255:
0x08BE	0xE083    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 111 :: 		case _MIKROBUS_MOSI_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_12); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_12); break;
L_easymx_v7_STM32F107VC__gpioInit_256:
; dir start address is: 4 (R1)
0x08C0	0x2901    CMP	R1, #1
0x08C2	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_257
; dir end address is: 4 (R1)
0x08C4	0xF2410100  MOVW	R1, #4096
0x08C8	0x4843    LDR	R0, [PC, #268]
0x08CA	0xF7FFFD81  BL	_GPIO_Digital_Input+0
0x08CE	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_258
L_easymx_v7_STM32F107VC__gpioInit_257:
0x08D0	0xF2410100  MOVW	R1, #4096
0x08D4	0x4840    LDR	R0, [PC, #256]
0x08D6	0xF7FFFD87  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_258:
0x08DA	0xE075    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 112 :: 		case _MIKROBUS_PWM_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_12); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_12); break;
L_easymx_v7_STM32F107VC__gpioInit_259:
; dir start address is: 4 (R1)
0x08DC	0x2901    CMP	R1, #1
0x08DE	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_260
; dir end address is: 4 (R1)
0x08E0	0xF2410100  MOVW	R1, #4096
0x08E4	0x483D    LDR	R0, [PC, #244]
0x08E6	0xF7FFFD73  BL	_GPIO_Digital_Input+0
0x08EA	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_261
L_easymx_v7_STM32F107VC__gpioInit_260:
0x08EC	0xF2410100  MOVW	R1, #4096
0x08F0	0x483A    LDR	R0, [PC, #232]
0x08F2	0xF7FFFD79  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_261:
0x08F6	0xE067    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 113 :: 		case _MIKROBUS_INT_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_11); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_11); break;
L_easymx_v7_STM32F107VC__gpioInit_262:
; dir start address is: 4 (R1)
0x08F8	0x2901    CMP	R1, #1
0x08FA	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_263
; dir end address is: 4 (R1)
0x08FC	0xF6400100  MOVW	R1, #2048
0x0900	0x4836    LDR	R0, [PC, #216]
0x0902	0xF7FFFD65  BL	_GPIO_Digital_Input+0
0x0906	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_264
L_easymx_v7_STM32F107VC__gpioInit_263:
0x0908	0xF6400100  MOVW	R1, #2048
0x090C	0x4833    LDR	R0, [PC, #204]
0x090E	0xF7FFFD6B  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_264:
0x0912	0xE059    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 114 :: 		case _MIKROBUS_RX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_6 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_6 ); break;
L_easymx_v7_STM32F107VC__gpioInit_265:
; dir start address is: 4 (R1)
0x0914	0x2901    CMP	R1, #1
0x0916	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_266
; dir end address is: 4 (R1)
0x0918	0xF2400140  MOVW	R1, #64
0x091C	0x482F    LDR	R0, [PC, #188]
0x091E	0xF7FFFD57  BL	_GPIO_Digital_Input+0
0x0922	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_267
L_easymx_v7_STM32F107VC__gpioInit_266:
0x0924	0xF2400140  MOVW	R1, #64
0x0928	0x482C    LDR	R0, [PC, #176]
0x092A	0xF7FFFD5D  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_267:
0x092E	0xE04B    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 115 :: 		case _MIKROBUS_TX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_5 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_5 ); break;
L_easymx_v7_STM32F107VC__gpioInit_268:
; dir start address is: 4 (R1)
0x0930	0x2901    CMP	R1, #1
0x0932	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_269
; dir end address is: 4 (R1)
0x0934	0xF2400120  MOVW	R1, #32
0x0938	0x4828    LDR	R0, [PC, #160]
0x093A	0xF7FFFD49  BL	_GPIO_Digital_Input+0
0x093E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_270
L_easymx_v7_STM32F107VC__gpioInit_269:
0x0940	0xF2400120  MOVW	R1, #32
0x0944	0x4825    LDR	R0, [PC, #148]
0x0946	0xF7FFFD4F  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_270:
0x094A	0xE03D    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 116 :: 		case _MIKROBUS_SCL_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_6 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_6 ); break;
L_easymx_v7_STM32F107VC__gpioInit_271:
; dir start address is: 4 (R1)
0x094C	0x2901    CMP	R1, #1
0x094E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_272
; dir end address is: 4 (R1)
0x0950	0xF2400140  MOVW	R1, #64
0x0954	0x4822    LDR	R0, [PC, #136]
0x0956	0xF7FFFD3B  BL	_GPIO_Digital_Input+0
0x095A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_273
L_easymx_v7_STM32F107VC__gpioInit_272:
0x095C	0xF2400140  MOVW	R1, #64
0x0960	0x481F    LDR	R0, [PC, #124]
0x0962	0xF7FFFD41  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_273:
0x0966	0xE02F    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 117 :: 		case _MIKROBUS_SDA_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_7 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_7 ); break;
L_easymx_v7_STM32F107VC__gpioInit_274:
; dir start address is: 4 (R1)
0x0968	0x2901    CMP	R1, #1
0x096A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_275
; dir end address is: 4 (R1)
0x096C	0xF2400180  MOVW	R1, #128
0x0970	0x481B    LDR	R0, [PC, #108]
0x0972	0xF7FFFD2D  BL	_GPIO_Digital_Input+0
0x0976	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_276
L_easymx_v7_STM32F107VC__gpioInit_275:
0x0978	0xF2400180  MOVW	R1, #128
0x097C	0x4818    LDR	R0, [PC, #96]
0x097E	0xF7FFFD33  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_276:
0x0982	0xE021    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 118 :: 		default                  : return _MIKROBUS_ERR_PIN;
L_easymx_v7_STM32F107VC__gpioInit_277:
0x0984	0x2001    MOVS	R0, #1
0x0986	0xE020    B	L_end__gpioInit_2
;__em_f107vc_gpio.c, 119 :: 		}
L_easymx_v7_STM32F107VC__gpioInit_239:
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x0988	0x2800    CMP	R0, #0
0x098A	0xF43FAF53  BEQ	L_easymx_v7_STM32F107VC__gpioInit_241
0x098E	0x2801    CMP	R0, #1
0x0990	0xF43FAF5E  BEQ	L_easymx_v7_STM32F107VC__gpioInit_244
0x0994	0x2802    CMP	R0, #2
0x0996	0xF43FAF69  BEQ	L_easymx_v7_STM32F107VC__gpioInit_247
0x099A	0x2803    CMP	R0, #3
0x099C	0xF43FAF74  BEQ	L_easymx_v7_STM32F107VC__gpioInit_250
0x09A0	0x2804    CMP	R0, #4
0x09A2	0xF43FAF7F  BEQ	L_easymx_v7_STM32F107VC__gpioInit_253
0x09A6	0x2805    CMP	R0, #5
0x09A8	0xF43FAF8A  BEQ	L_easymx_v7_STM32F107VC__gpioInit_256
0x09AC	0x2806    CMP	R0, #6
0x09AE	0xF43FAF95  BEQ	L_easymx_v7_STM32F107VC__gpioInit_259
0x09B2	0x2807    CMP	R0, #7
0x09B4	0xD0A0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_262
0x09B6	0x2808    CMP	R0, #8
0x09B8	0xD0AC    BEQ	L_easymx_v7_STM32F107VC__gpioInit_265
0x09BA	0x2809    CMP	R0, #9
0x09BC	0xD0B8    BEQ	L_easymx_v7_STM32F107VC__gpioInit_268
0x09BE	0x280A    CMP	R0, #10
0x09C0	0xD0C4    BEQ	L_easymx_v7_STM32F107VC__gpioInit_271
0x09C2	0x280B    CMP	R0, #11
0x09C4	0xD0D0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_274
; pin end address is: 0 (R0)
; dir end address is: 4 (R1)
0x09C6	0xE7DD    B	L_easymx_v7_STM32F107VC__gpioInit_277
L_easymx_v7_STM32F107VC__gpioInit_240:
;__em_f107vc_gpio.c, 120 :: 		return _MIKROBUS_OK;
0x09C8	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_gpio.c, 121 :: 		}
L_end__gpioInit_2:
0x09CA	0xF8DDE000  LDR	LR, [SP, #0]
0x09CE	0xB001    ADD	SP, SP, #4
0x09D0	0x4770    BX	LR
0x09D2	0xBF00    NOP
0x09D4	0x08004001  	GPIOA_BASE+0
0x09D8	0x10004001  	GPIOC_BASE+0
0x09DC	0x14004001  	GPIOD_BASE+0
0x09E0	0x0C004001  	GPIOB_BASE+0
; end of easymx_v7_STM32F107VC__gpioInit_2
_applicationInit:
;Click_DALI_2_STM.c, 41 :: 		void applicationInit()
0x1358	0xB081    SUB	SP, SP, #4
0x135A	0xF8CDE000  STR	LR, [SP, #0]
;Click_DALI_2_STM.c, 43 :: 		dali2_gpioDriverInit( (T_DALI2_P)&_MIKROBUS1_GPIO );
0x135E	0x4805    LDR	R0, [PC, #20]
0x1360	0xF7FFFE40  BL	_dali2_gpioDriverInit+0
;Click_DALI_2_STM.c, 44 :: 		dali2_masterInit();
0x1364	0xF7FFFDEA  BL	_dali2_masterInit+0
;Click_DALI_2_STM.c, 45 :: 		dali2_configTimer();
0x1368	0xF7FFFE46  BL	Click_DALI_2_STM_dali2_configTimer+0
;Click_DALI_2_STM.c, 46 :: 		}
L_end_applicationInit:
0x136C	0xF8DDE000  LDR	LR, [SP, #0]
0x1370	0xB001    ADD	SP, SP, #4
0x1372	0x4770    BX	LR
0x1374	0x15180000  	__MIKROBUS1_GPIO+0
; end of _applicationInit
_dali2_gpioDriverInit:
;__dali2_driver.c, 707 :: 		void dali2_gpioDriverInit(T_DALI2_P gpioObj)
; gpioObj start address is: 0 (R0)
0x0FE4	0xB081    SUB	SP, SP, #4
0x0FE6	0xF8CDE000  STR	LR, [SP, #0]
; gpioObj end address is: 0 (R0)
; gpioObj start address is: 0 (R0)
;__dali2_driver.c, 709 :: 		hal_gpioMap( (T_HAL_P)gpioObj );
; gpioObj end address is: 0 (R0)
0x0FEA	0xF7FFFCFB  BL	__dali2_driver_hal_gpioMap+0
;__dali2_driver.c, 710 :: 		}
L_end_dali2_gpioDriverInit:
0x0FEE	0xF8DDE000  LDR	LR, [SP, #0]
0x0FF2	0xB001    ADD	SP, SP, #4
0x0FF4	0x4770    BX	LR
; end of _dali2_gpioDriverInit
__dali2_driver_hal_gpioMap:
;__dali2_hal.c, 321 :: 		static void hal_gpioMap(T_HAL_P gpioObj)
; gpioObj start address is: 0 (R0)
; gpioObj end address is: 0 (R0)
; gpioObj start address is: 0 (R0)
;__dali2_hal.c, 347 :: 		hal_gpio_intGet = tmp->gpioGet[ __INT_PIN_INPUT__ ];
0x09E4	0xF2000130  ADDW	R1, R0, #48
0x09E8	0x311C    ADDS	R1, #28
0x09EA	0x680A    LDR	R2, [R1, #0]
0x09EC	0x4905    LDR	R1, [PC, #20]
0x09EE	0x600A    STR	R2, [R1, #0]
;__dali2_hal.c, 368 :: 		hal_gpio_rstSet = tmp->gpioSet[ __RST_PIN_OUTPUT__ ];
0x09F0	0x1D01    ADDS	R1, R0, #4
0x09F2	0x680A    LDR	R2, [R1, #0]
0x09F4	0x4904    LDR	R1, [PC, #16]
0x09F6	0x600A    STR	R2, [R1, #0]
;__dali2_hal.c, 383 :: 		hal_gpio_intSet = tmp->gpioSet[ __INT_PIN_OUTPUT__ ];
0x09F8	0xF200011C  ADDW	R1, R0, #28
; gpioObj end address is: 0 (R0)
0x09FC	0x680A    LDR	R2, [R1, #0]
0x09FE	0x4903    LDR	R1, [PC, #12]
0x0A00	0x600A    STR	R2, [R1, #0]
;__dali2_hal.c, 397 :: 		}
L_end_hal_gpioMap:
0x0A02	0x4770    BX	LR
0x0A04	0x00002000  	__dali2_driver_hal_gpio_intGet+0
0x0A08	0x00042000  	__dali2_driver_hal_gpio_rstSet+0
0x0A0C	0x00082000  	__dali2_driver_hal_gpio_intSet+0
; end of __dali2_driver_hal_gpioMap
_dali2_masterInit:
;__dali2_driver.c, 714 :: 		void dali2_masterInit()
0x0F3C	0xB081    SUB	SP, SP, #4
0x0F3E	0xF8CDE000  STR	LR, [SP, #0]
;__dali2_driver.c, 719 :: 		_daliState = _DALI2_NO_ACTION;
0x0F42	0x2100    MOVS	R1, #0
0x0F44	0x4822    LDR	R0, [PC, #136]
0x0F46	0x7001    STRB	R1, [R0, #0]
;__dali2_driver.c, 721 :: 		_tickCounter = 0;
0x0F48	0x2100    MOVS	R1, #0
0x0F4A	0x4822    LDR	R0, [PC, #136]
0x0F4C	0x8001    STRH	R1, [R0, #0]
;__dali2_driver.c, 722 :: 		_bitCounter = 0;
0x0F4E	0x2100    MOVS	R1, #0
0x0F50	0x4821    LDR	R0, [PC, #132]
0x0F52	0x7001    STRB	R1, [R0, #0]
;__dali2_driver.c, 724 :: 		hal_gpio_rstSet( 1 );
0x0F54	0x2001    MOVS	R0, #1
0x0F56	0x4C21    LDR	R4, [PC, #132]
0x0F58	0x6824    LDR	R4, [R4, #0]
0x0F5A	0x47A0    BLX	R4
;__dali2_driver.c, 726 :: 		for (i = 1; i < 65; i++)
; i start address is: 12 (R3)
0x0F5C	0x2301    MOVS	R3, #1
; i end address is: 12 (R3)
L_dali2_masterInit45:
; i start address is: 12 (R3)
0x0F5E	0x2B41    CMP	R3, #65
0x0F60	0xD213    BCS	L_dali2_masterInit46
;__dali2_driver.c, 729 :: 		tmp = i << 1;
0x0F62	0x005A    LSLS	R2, R3, #1
;__dali2_driver.c, 731 :: 		_ballast[ (i * 2) - 2 ] = tmp;
0x0F64	0x0058    LSLS	R0, R3, #1
0x0F66	0xB200    SXTH	R0, R0
0x0F68	0x1E81    SUBS	R1, R0, #2
0x0F6A	0xB209    SXTH	R1, R1
0x0F6C	0x481C    LDR	R0, [PC, #112]
0x0F6E	0x1841    ADDS	R1, R0, R1
0x0F70	0xB2D0    UXTB	R0, R2
0x0F72	0x7008    STRB	R0, [R1, #0]
;__dali2_driver.c, 732 :: 		_ballast[ (i * 2) - 1 ] = 0;
0x0F74	0x0058    LSLS	R0, R3, #1
0x0F76	0xB200    SXTH	R0, R0
0x0F78	0x1E41    SUBS	R1, R0, #1
0x0F7A	0xB209    SXTH	R1, R1
0x0F7C	0x4818    LDR	R0, [PC, #96]
0x0F7E	0x1841    ADDS	R1, R0, R1
0x0F80	0x2000    MOVS	R0, #0
0x0F82	0x7008    STRB	R0, [R1, #0]
;__dali2_driver.c, 726 :: 		for (i = 1; i < 65; i++)
0x0F84	0x1C5B    ADDS	R3, R3, #1
0x0F86	0xB2DB    UXTB	R3, R3
;__dali2_driver.c, 733 :: 		}
; i end address is: 12 (R3)
0x0F88	0xE7E9    B	L_dali2_masterInit45
L_dali2_masterInit46:
;__dali2_driver.c, 735 :: 		for (i = 1; i < 17; i++)
; i start address is: 12 (R3)
0x0F8A	0x2301    MOVS	R3, #1
; i end address is: 12 (R3)
L_dali2_masterInit48:
; i start address is: 12 (R3)
0x0F8C	0x2B11    CMP	R3, #17
0x0F8E	0xD21A    BCS	L_dali2_masterInit49
;__dali2_driver.c, 739 :: 		tmp = i << 1;
0x0F90	0x0058    LSLS	R0, R3, #1
;__dali2_driver.c, 740 :: 		tmp = _DALI2_GROUP_ADDRESS + tmp;
0x0F92	0xB2C0    UXTB	R0, R0
0x0F94	0xF2000280  ADDW	R2, R0, #128
;__dali2_driver.c, 742 :: 		_ballast[ _DALI2_GROUP_ADDRESS + ( i * 2 ) - 2 ] = tmp;
0x0F98	0x0058    LSLS	R0, R3, #1
0x0F9A	0xB200    SXTH	R0, R0
0x0F9C	0x3080    ADDS	R0, #128
0x0F9E	0xB200    SXTH	R0, R0
0x0FA0	0x1E81    SUBS	R1, R0, #2
0x0FA2	0xB209    SXTH	R1, R1
0x0FA4	0x480E    LDR	R0, [PC, #56]
0x0FA6	0x1841    ADDS	R1, R0, R1
0x0FA8	0xB2D0    UXTB	R0, R2
0x0FAA	0x7008    STRB	R0, [R1, #0]
;__dali2_driver.c, 743 :: 		_ballast[ _DALI2_GROUP_ADDRESS + ( i * 2 ) - 1 ] = 0;
0x0FAC	0x0058    LSLS	R0, R3, #1
0x0FAE	0xB200    SXTH	R0, R0
0x0FB0	0x3080    ADDS	R0, #128
0x0FB2	0xB200    SXTH	R0, R0
0x0FB4	0x1E41    SUBS	R1, R0, #1
0x0FB6	0xB209    SXTH	R1, R1
0x0FB8	0x4809    LDR	R0, [PC, #36]
0x0FBA	0x1841    ADDS	R1, R0, R1
0x0FBC	0x2000    MOVS	R0, #0
0x0FBE	0x7008    STRB	R0, [R1, #0]
;__dali2_driver.c, 735 :: 		for (i = 1; i < 17; i++)
0x0FC0	0x1C5B    ADDS	R3, R3, #1
0x0FC2	0xB2DB    UXTB	R3, R3
;__dali2_driver.c, 744 :: 		}
; i end address is: 12 (R3)
0x0FC4	0xE7E2    B	L_dali2_masterInit48
L_dali2_masterInit49:
;__dali2_driver.c, 745 :: 		}
L_end_dali2_masterInit:
0x0FC6	0xF8DDE000  LDR	LR, [SP, #0]
0x0FCA	0xB001    ADD	SP, SP, #4
0x0FCC	0x4770    BX	LR
0x0FCE	0xBF00    NOP
0x0FD0	0x000C2000  	__dali2_driver__daliState+0
0x0FD4	0x000E2000  	__dali2_driver__tickCounter+0
0x0FD8	0x000D2000  	__dali2_driver__bitCounter+0
0x0FDC	0x00042000  	__dali2_driver_hal_gpio_rstSet+0
0x0FE0	0x00102000  	__dali2_driver__ballast+0
; end of _dali2_masterInit
easymx_v7_STM32F107VC__setAN_1:
;__em_f107vc_gpio.c, 43 :: 		static void _setAN_1  (uint8_t value) 	{ GPIOA_ODR.B4  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0650	0x4901    LDR	R1, [PC, #4]
0x0652	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setAN_1:
0x0654	0x4770    BX	LR
0x0656	0xBF00    NOP
0x0658	0x01904221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setAN_1
easymx_v7_STM32F107VC__setRST_1:
;__em_f107vc_gpio.c, 44 :: 		static void _setRST_1 (uint8_t value) 	{ GPIOC_ODR.B2  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x065C	0x4901    LDR	R1, [PC, #4]
0x065E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRST_1:
0x0660	0x4770    BX	LR
0x0662	0xBF00    NOP
0x0664	0x01884222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setRST_1
easymx_v7_STM32F107VC__setCS_1:
;__em_f107vc_gpio.c, 45 :: 		static void _setCS_1  (uint8_t value) 	{ GPIOD_ODR.B13 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0668	0x4901    LDR	R1, [PC, #4]
0x066A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setCS_1:
0x066C	0x4770    BX	LR
0x066E	0xBF00    NOP
0x0670	0x81B44222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setCS_1
easymx_v7_STM32F107VC__setSCK_1:
;__em_f107vc_gpio.c, 46 :: 		static void _setSCK_1 (uint8_t value) 	{ GPIOC_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0A10	0x4901    LDR	R1, [PC, #4]
0x0A12	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCK_1:
0x0A14	0x4770    BX	LR
0x0A16	0xBF00    NOP
0x0A18	0x01A84222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setSCK_1
easymx_v7_STM32F107VC__setMISO_1:
;__em_f107vc_gpio.c, 47 :: 		static void _setMISO_1(uint8_t value) 	{ GPIOC_ODR.B11 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0A58	0x4901    LDR	R1, [PC, #4]
0x0A5A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMISO_1:
0x0A5C	0x4770    BX	LR
0x0A5E	0xBF00    NOP
0x0A60	0x01AC4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMISO_1
easymx_v7_STM32F107VC__setMOSI_1:
;__em_f107vc_gpio.c, 48 :: 		static void _setMOSI_1(uint8_t value) 	{ GPIOC_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0A40	0x4901    LDR	R1, [PC, #4]
0x0A42	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMOSI_1:
0x0A44	0x4770    BX	LR
0x0A46	0xBF00    NOP
0x0A48	0x01B04222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMOSI_1
easymx_v7_STM32F107VC__setPWM_1:
;__em_f107vc_gpio.c, 49 :: 		static void _setPWM_1 (uint8_t value) 	{ GPIOA_ODR.B0  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0A4C	0x4901    LDR	R1, [PC, #4]
0x0A4E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setPWM_1:
0x0A50	0x4770    BX	LR
0x0A52	0xBF00    NOP
0x0A54	0x01804221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setPWM_1
easymx_v7_STM32F107VC__setINT_1:
;__em_f107vc_gpio.c, 50 :: 		static void _setINT_1 (uint8_t value) 	{ GPIOD_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0A1C	0x4901    LDR	R1, [PC, #4]
0x0A1E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setINT_1:
0x0A20	0x4770    BX	LR
0x0A22	0xBF00    NOP
0x0A24	0x81A84222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setINT_1
easymx_v7_STM32F107VC__setRX_1:
;__em_f107vc_gpio.c, 51 :: 		static void _setRX_1  (uint8_t value) 	{ GPIOD_ODR.B9  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0A28	0x4901    LDR	R1, [PC, #4]
0x0A2A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRX_1:
0x0A2C	0x4770    BX	LR
0x0A2E	0xBF00    NOP
0x0A30	0x81A44222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setRX_1
easymx_v7_STM32F107VC__setTX_1:
;__em_f107vc_gpio.c, 52 :: 		static void _setTX_1  (uint8_t value) 	{ GPIOD_ODR.B8  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0A34	0x4901    LDR	R1, [PC, #4]
0x0A36	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setTX_1:
0x0A38	0x4770    BX	LR
0x0A3A	0xBF00    NOP
0x0A3C	0x81A04222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setTX_1
easymx_v7_STM32F107VC__setSCL_1:
;__em_f107vc_gpio.c, 53 :: 		static void _setSCL_1 (uint8_t value) 	{ GPIOB_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0464	0x4901    LDR	R1, [PC, #4]
0x0466	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCL_1:
0x0468	0x4770    BX	LR
0x046A	0xBF00    NOP
0x046C	0x81984221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSCL_1
easymx_v7_STM32F107VC__setSDA_1:
;__em_f107vc_gpio.c, 54 :: 		static void _setSDA_1 (uint8_t value) 	{ GPIOB_ODR.B7  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0470	0x4901    LDR	R1, [PC, #4]
0x0472	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSDA_1:
0x0474	0x4770    BX	LR
0x0476	0xBF00    NOP
0x0478	0x819C4221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSDA_1
easymx_v7_STM32F107VC__setAN_2:
;__em_f107vc_gpio.c, 68 :: 		static void _setAN_2  (uint8_t value)   { GPIOA_ODR.B5  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x044C	0x4901    LDR	R1, [PC, #4]
0x044E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setAN_2:
0x0450	0x4770    BX	LR
0x0452	0xBF00    NOP
0x0454	0x01944221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setAN_2
easymx_v7_STM32F107VC__setRST_2:
;__em_f107vc_gpio.c, 69 :: 		static void _setRST_2 (uint8_t value)   { GPIOC_ODR.B3  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0440	0x4901    LDR	R1, [PC, #4]
0x0442	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRST_2:
0x0444	0x4770    BX	LR
0x0446	0xBF00    NOP
0x0448	0x018C4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setRST_2
easymx_v7_STM32F107VC__setCS_2:
;__em_f107vc_gpio.c, 70 :: 		static void _setCS_2  (uint8_t value)   { GPIOD_ODR.B14 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0458	0x4901    LDR	R1, [PC, #4]
0x045A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setCS_2:
0x045C	0x4770    BX	LR
0x045E	0xBF00    NOP
0x0460	0x81B84222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setCS_2
easymx_v7_STM32F107VC__setSCK_2:
;__em_f107vc_gpio.c, 71 :: 		static void _setSCK_2 (uint8_t value)   { GPIOC_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0404	0x4901    LDR	R1, [PC, #4]
0x0406	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCK_2:
0x0408	0x4770    BX	LR
0x040A	0xBF00    NOP
0x040C	0x01A84222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setSCK_2
easymx_v7_STM32F107VC__setMISO_2:
;__em_f107vc_gpio.c, 72 :: 		static void _setMISO_2(uint8_t value)   { GPIOC_ODR.B11 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x041C	0x4901    LDR	R1, [PC, #4]
0x041E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMISO_2:
0x0420	0x4770    BX	LR
0x0422	0xBF00    NOP
0x0424	0x01AC4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMISO_2
easymx_v7_STM32F107VC__setMOSI_2:
;__em_f107vc_gpio.c, 73 :: 		static void _setMOSI_2(uint8_t value)   { GPIOC_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0428	0x4901    LDR	R1, [PC, #4]
0x042A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMOSI_2:
0x042C	0x4770    BX	LR
0x042E	0xBF00    NOP
0x0430	0x01B04222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMOSI_2
easymx_v7_STM32F107VC__setPWM_2:
;__em_f107vc_gpio.c, 74 :: 		static void _setPWM_2 (uint8_t value)   { GPIOD_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0434	0x4901    LDR	R1, [PC, #4]
0x0436	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setPWM_2:
0x0438	0x4770    BX	LR
0x043A	0xBF00    NOP
0x043C	0x81B04222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setPWM_2
easymx_v7_STM32F107VC__setINT_2:
;__em_f107vc_gpio.c, 75 :: 		static void _setINT_2 (uint8_t value)   { GPIOD_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0410	0x4901    LDR	R1, [PC, #4]
0x0412	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setINT_2:
0x0414	0x4770    BX	LR
0x0416	0xBF00    NOP
0x0418	0x81B04222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setINT_2
easymx_v7_STM32F107VC__setRX_2:
;__em_f107vc_gpio.c, 76 :: 		static void _setRX_2  (uint8_t value)   { GPIOD_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x05B4	0x4901    LDR	R1, [PC, #4]
0x05B6	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRX_2:
0x05B8	0x4770    BX	LR
0x05BA	0xBF00    NOP
0x05BC	0x81984222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setRX_2
easymx_v7_STM32F107VC__setTX_2:
;__em_f107vc_gpio.c, 77 :: 		static void _setTX_2  (uint8_t value)   { GPIOD_ODR.B5  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x05A8	0x4901    LDR	R1, [PC, #4]
0x05AA	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setTX_2:
0x05AC	0x4770    BX	LR
0x05AE	0xBF00    NOP
0x05B0	0x81944222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setTX_2
easymx_v7_STM32F107VC__setSCL_2:
;__em_f107vc_gpio.c, 78 :: 		static void _setSCL_2 (uint8_t value)   { GPIOB_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x05C0	0x4901    LDR	R1, [PC, #4]
0x05C2	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCL_2:
0x05C4	0x4770    BX	LR
0x05C6	0xBF00    NOP
0x05C8	0x81984221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSCL_2
easymx_v7_STM32F107VC__setSDA_2:
;__em_f107vc_gpio.c, 79 :: 		static void _setSDA_2 (uint8_t value)   { GPIOB_ODR.B7  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0644	0x4901    LDR	R1, [PC, #4]
0x0646	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSDA_2:
0x0648	0x4770    BX	LR
0x064A	0xBF00    NOP
0x064C	0x819C4221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSDA_2
Click_DALI_2_STM_dali2_configTimer:
;click_dali_2_timer.h, 15 :: 		static void dali2_configTimer()
0x0FF8	0xB081    SUB	SP, SP, #4
0x0FFA	0xF8CDE000  STR	LR, [SP, #0]
;click_dali_2_timer.h, 17 :: 		RCC_APB1ENR.TIM2EN = 1;
0x0FFE	0x2101    MOVS	R1, #1
0x1000	0xB249    SXTB	R1, R1
0x1002	0x480E    LDR	R0, [PC, #56]
0x1004	0x6001    STR	R1, [R0, #0]
;click_dali_2_timer.h, 18 :: 		TIM2_CR1.CEN = 0;
0x1006	0x2100    MOVS	R1, #0
0x1008	0xB249    SXTB	R1, R1
0x100A	0x480D    LDR	R0, [PC, #52]
0x100C	0x6001    STR	R1, [R0, #0]
;click_dali_2_timer.h, 19 :: 		TIM2_PSC = 0;
0x100E	0x2100    MOVS	R1, #0
0x1010	0x480C    LDR	R0, [PC, #48]
0x1012	0x6001    STR	R1, [R0, #0]
;click_dali_2_timer.h, 20 :: 		TIM2_ARR = 7487;
0x1014	0xF641513F  MOVW	R1, #7487
0x1018	0x480B    LDR	R0, [PC, #44]
0x101A	0x6001    STR	R1, [R0, #0]
;click_dali_2_timer.h, 21 :: 		NVIC_IntEnable(IVT_INT_TIM2);
0x101C	0xF240002C  MOVW	R0, #44
0x1020	0xF7FFFAD4  BL	_NVIC_IntEnable+0
;click_dali_2_timer.h, 22 :: 		TIM2_DIER.UIE = 1;
0x1024	0x2101    MOVS	R1, #1
0x1026	0xB249    SXTB	R1, R1
0x1028	0x4808    LDR	R0, [PC, #32]
0x102A	0x6001    STR	R1, [R0, #0]
;click_dali_2_timer.h, 23 :: 		TIM2_CR1.CEN = 1;
0x102C	0x4804    LDR	R0, [PC, #16]
0x102E	0x6001    STR	R1, [R0, #0]
;click_dali_2_timer.h, 24 :: 		EnableInterrupts();
0x1030	0xF7FFFA44  BL	_EnableInterrupts+0
;click_dali_2_timer.h, 25 :: 		}
L_end_dali2_configTimer:
0x1034	0xF8DDE000  LDR	LR, [SP, #0]
0x1038	0xB001    ADD	SP, SP, #4
0x103A	0x4770    BX	LR
0x103C	0x03804242  	RCC_APB1ENR+0
0x1040	0x00004200  	TIM2_CR1+0
0x1044	0x00284000  	TIM2_PSC+0
0x1048	0x002C4000  	TIM2_ARR+0
0x104C	0x01804200  	TIM2_DIER+0
; end of Click_DALI_2_STM_dali2_configTimer
_NVIC_IntEnable:
;__Lib_System_105_107.c, 156 :: 		
; ivt start address is: 0 (R0)
0x05CC	0xB081    SUB	SP, SP, #4
; ivt end address is: 0 (R0)
; ivt start address is: 0 (R0)
;__Lib_System_105_107.c, 168 :: 		
0x05CE	0x2804    CMP	R0, #4
0x05D0	0xD106    BNE	L_NVIC_IntEnable6
; ivt end address is: 0 (R0)
;__Lib_System_105_107.c, 173 :: 		
0x05D2	0x4919    LDR	R1, [PC, #100]
0x05D4	0x6809    LDR	R1, [R1, #0]
0x05D6	0xF4413280  ORR	R2, R1, #65536
0x05DA	0x4917    LDR	R1, [PC, #92]
0x05DC	0x600A    STR	R2, [R1, #0]
;__Lib_System_105_107.c, 174 :: 		
0x05DE	0xE028    B	L_NVIC_IntEnable7
L_NVIC_IntEnable6:
;__Lib_System_105_107.c, 175 :: 		
; ivt start address is: 0 (R0)
0x05E0	0x2805    CMP	R0, #5
0x05E2	0xD106    BNE	L_NVIC_IntEnable8
; ivt end address is: 0 (R0)
;__Lib_System_105_107.c, 180 :: 		
0x05E4	0x4914    LDR	R1, [PC, #80]
0x05E6	0x6809    LDR	R1, [R1, #0]
0x05E8	0xF4413200  ORR	R2, R1, #131072
0x05EC	0x4912    LDR	R1, [PC, #72]
0x05EE	0x600A    STR	R2, [R1, #0]
;__Lib_System_105_107.c, 181 :: 		
0x05F0	0xE01F    B	L_NVIC_IntEnable9
L_NVIC_IntEnable8:
;__Lib_System_105_107.c, 182 :: 		
; ivt start address is: 0 (R0)
0x05F2	0x2806    CMP	R0, #6
0x05F4	0xD106    BNE	L_NVIC_IntEnable10
; ivt end address is: 0 (R0)
;__Lib_System_105_107.c, 187 :: 		
0x05F6	0x4910    LDR	R1, [PC, #64]
0x05F8	0x6809    LDR	R1, [R1, #0]
0x05FA	0xF4412280  ORR	R2, R1, #262144
0x05FE	0x490E    LDR	R1, [PC, #56]
0x0600	0x600A    STR	R2, [R1, #0]
;__Lib_System_105_107.c, 188 :: 		
0x0602	0xE016    B	L_NVIC_IntEnable11
L_NVIC_IntEnable10:
;__Lib_System_105_107.c, 189 :: 		
; ivt start address is: 0 (R0)
0x0604	0x280F    CMP	R0, #15
0x0606	0xD106    BNE	L_NVIC_IntEnable12
; ivt end address is: 0 (R0)
;__Lib_System_105_107.c, 194 :: 		
0x0608	0x490C    LDR	R1, [PC, #48]
0x060A	0x6809    LDR	R1, [R1, #0]
0x060C	0xF0410202  ORR	R2, R1, #2
0x0610	0x490A    LDR	R1, [PC, #40]
0x0612	0x600A    STR	R2, [R1, #0]
;__Lib_System_105_107.c, 195 :: 		
0x0614	0xE00D    B	L_NVIC_IntEnable13
L_NVIC_IntEnable12:
;__Lib_System_105_107.c, 196 :: 		
; ivt start address is: 0 (R0)
0x0616	0x2810    CMP	R0, #16
0x0618	0xD30B    BCC	L_NVIC_IntEnable14
;__Lib_System_105_107.c, 201 :: 		
0x061A	0xF2A00410  SUBW	R4, R0, #16
; ivt end address is: 0 (R0)
0x061E	0x0961    LSRS	R1, R4, #5
0x0620	0x008A    LSLS	R2, R1, #2
0x0622	0x4907    LDR	R1, [PC, #28]
0x0624	0x188B    ADDS	R3, R1, R2
;__Lib_System_105_107.c, 202 :: 		
0x0626	0xF004021F  AND	R2, R4, #31
0x062A	0xF04F0101  MOV	R1, #1
0x062E	0x4091    LSLS	R1, R2
0x0630	0x6019    STR	R1, [R3, #0]
;__Lib_System_105_107.c, 203 :: 		
L_NVIC_IntEnable14:
L_NVIC_IntEnable13:
L_NVIC_IntEnable11:
L_NVIC_IntEnable9:
L_NVIC_IntEnable7:
;__Lib_System_105_107.c, 204 :: 		
L_end_NVIC_IntEnable:
0x0632	0xB001    ADD	SP, SP, #4
0x0634	0x4770    BX	LR
0x0636	0xBF00    NOP
0x0638	0xED24E000  	SCB_SHCRS+0
0x063C	0xE010E000  	STK_CTRL+0
0x0640	0xE100E000  	NVIC_ISER0+0
; end of _NVIC_IntEnable
_EnableInterrupts:
;__Lib_System_105_107.c, 107 :: 		
0x04BC	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 110 :: 		
0x04BE	0xF3EF8C10  MRS	R12, #16
0x04C2	0x4660    MOV	R0, R12
; result start address is: 0 (R0)
;__Lib_System_105_107.c, 111 :: 		
0x04C4	0xB662    CPSIE	i
;__Lib_System_105_107.c, 113 :: 		
; result end address is: 0 (R0)
;__Lib_System_105_107.c, 114 :: 		
L_end_EnableInterrupts:
0x04C6	0xB001    ADD	SP, SP, #4
0x04C8	0x4770    BX	LR
; end of _EnableInterrupts
_applicationTask:
;Click_DALI_2_STM.c, 48 :: 		void applicationTask()
0x1280	0xB082    SUB	SP, SP, #8
0x1282	0xF8CDE000  STR	LR, [SP, #0]
;Click_DALI_2_STM.c, 53 :: 		for (counter = 0; counter < 2; counter++)
; counter start address is: 4 (R1)
0x1286	0x2100    MOVS	R1, #0
; counter end address is: 4 (R1)
L_applicationTask0:
; counter start address is: 4 (R1)
0x1288	0x2902    CMP	R1, #2
0x128A	0xD228    BCS	L_applicationTask1
;Click_DALI_2_STM.c, 55 :: 		dali2_sendCmd(_DALI2_ADDRESS01, _DALI2_OFF, _DALI2_BROADCAST_CMD, _DALI2_FOLLOWING_COMMAND);
0x128C	0xF88D1004  STRB	R1, [SP, #4]
0x1290	0x2301    MOVS	R3, __DALI2_FOLLOWING_COMMAND
0x1292	0x22FF    MOVS	R2, __DALI2_BROADCAST_CMD
0x1294	0x2100    MOVS	R1, __DALI2_OFF
0x1296	0x2000    MOVS	R0, __DALI2_ADDRESS01
0x1298	0xF7FFFD00  BL	_dali2_sendCmd+0
;Click_DALI_2_STM.c, 56 :: 		Delay_ms( 1000 );
0x129C	0xF64127FF  MOVW	R7, #6911
0x12A0	0xF2C007B7  MOVT	R7, #183
0x12A4	0xBF00    NOP
0x12A6	0xBF00    NOP
L_applicationTask3:
0x12A8	0x1E7F    SUBS	R7, R7, #1
0x12AA	0xD1FD    BNE	L_applicationTask3
0x12AC	0xBF00    NOP
0x12AE	0xBF00    NOP
0x12B0	0xBF00    NOP
;Click_DALI_2_STM.c, 57 :: 		dali2_sendCmd(_DALI2_ADDRESS01, _DALI2_RECALL_MAX_LEVEL, _DALI2_BROADCAST_CMD, _DALI2_FOLLOWING_COMMAND);
0x12B2	0x2301    MOVS	R3, __DALI2_FOLLOWING_COMMAND
0x12B4	0x22FF    MOVS	R2, __DALI2_BROADCAST_CMD
0x12B6	0x2105    MOVS	R1, __DALI2_RECALL_MAX_LEVEL
0x12B8	0x2000    MOVS	R0, __DALI2_ADDRESS01
0x12BA	0xF7FFFCEF  BL	_dali2_sendCmd+0
0x12BE	0xF89D1004  LDRB	R1, [SP, #4]
;Click_DALI_2_STM.c, 58 :: 		Delay_ms( 1000 );
0x12C2	0xF64127FF  MOVW	R7, #6911
0x12C6	0xF2C007B7  MOVT	R7, #183
L_applicationTask5:
0x12CA	0x1E7F    SUBS	R7, R7, #1
0x12CC	0xD1FD    BNE	L_applicationTask5
0x12CE	0xBF00    NOP
0x12D0	0xBF00    NOP
0x12D2	0xBF00    NOP
0x12D4	0xBF00    NOP
0x12D6	0xBF00    NOP
;Click_DALI_2_STM.c, 53 :: 		for (counter = 0; counter < 2; counter++)
0x12D8	0x1C49    ADDS	R1, R1, #1
0x12DA	0xB2C9    UXTB	R1, R1
;Click_DALI_2_STM.c, 59 :: 		}
; counter end address is: 4 (R1)
0x12DC	0xE7D4    B	L_applicationTask0
L_applicationTask1:
;Click_DALI_2_STM.c, 61 :: 		for (counter = 0; counter < 8; counter++)
; counter start address is: 4 (R1)
0x12DE	0x2100    MOVS	R1, #0
; counter end address is: 4 (R1)
L_applicationTask7:
; counter start address is: 4 (R1)
0x12E0	0x2908    CMP	R1, #8
0x12E2	0xD217    BCS	L_applicationTask8
;Click_DALI_2_STM.c, 63 :: 		dali2_sendCmd(_DALI2_ADDRESS01, _DALI2_DOWN, _DALI2_BROADCAST_CMD, _DALI2_FOLLOWING_COMMAND);
0x12E4	0xF88D1004  STRB	R1, [SP, #4]
0x12E8	0x2301    MOVS	R3, __DALI2_FOLLOWING_COMMAND
0x12EA	0x22FF    MOVS	R2, __DALI2_BROADCAST_CMD
0x12EC	0x2102    MOVS	R1, __DALI2_DOWN
0x12EE	0x2000    MOVS	R0, __DALI2_ADDRESS01
0x12F0	0xF7FFFCD4  BL	_dali2_sendCmd+0
0x12F4	0xF89D1004  LDRB	R1, [SP, #4]
;Click_DALI_2_STM.c, 64 :: 		Delay_ms( 500 );
0x12F8	0xF648577F  MOVW	R7, #36223
0x12FC	0xF2C0075B  MOVT	R7, #91
L_applicationTask10:
0x1300	0x1E7F    SUBS	R7, R7, #1
0x1302	0xD1FD    BNE	L_applicationTask10
0x1304	0xBF00    NOP
0x1306	0xBF00    NOP
0x1308	0xBF00    NOP
0x130A	0xBF00    NOP
0x130C	0xBF00    NOP
;Click_DALI_2_STM.c, 61 :: 		for (counter = 0; counter < 8; counter++)
0x130E	0x1C49    ADDS	R1, R1, #1
0x1310	0xB2C9    UXTB	R1, R1
;Click_DALI_2_STM.c, 65 :: 		}
; counter end address is: 4 (R1)
0x1312	0xE7E5    B	L_applicationTask7
L_applicationTask8:
;Click_DALI_2_STM.c, 67 :: 		for (counter = 0; counter < 8; counter++)
; counter start address is: 4 (R1)
0x1314	0x2100    MOVS	R1, #0
; counter end address is: 4 (R1)
L_applicationTask12:
; counter start address is: 4 (R1)
0x1316	0x2908    CMP	R1, #8
0x1318	0xD217    BCS	L_applicationTask13
;Click_DALI_2_STM.c, 69 :: 		dali2_sendCmd(_DALI2_ADDRESS01, _DALI2_UP, _DALI2_BROADCAST_CMD, _DALI2_FOLLOWING_COMMAND);
0x131A	0xF88D1004  STRB	R1, [SP, #4]
0x131E	0x2301    MOVS	R3, __DALI2_FOLLOWING_COMMAND
0x1320	0x22FF    MOVS	R2, __DALI2_BROADCAST_CMD
0x1322	0x2101    MOVS	R1, __DALI2_UP
0x1324	0x2000    MOVS	R0, __DALI2_ADDRESS01
0x1326	0xF7FFFCB9  BL	_dali2_sendCmd+0
0x132A	0xF89D1004  LDRB	R1, [SP, #4]
;Click_DALI_2_STM.c, 70 :: 		Delay_ms( 500 );
0x132E	0xF648577F  MOVW	R7, #36223
0x1332	0xF2C0075B  MOVT	R7, #91
0x1336	0xBF00    NOP
0x1338	0xBF00    NOP
L_applicationTask15:
0x133A	0x1E7F    SUBS	R7, R7, #1
0x133C	0xD1FD    BNE	L_applicationTask15
0x133E	0xBF00    NOP
0x1340	0xBF00    NOP
0x1342	0xBF00    NOP
;Click_DALI_2_STM.c, 67 :: 		for (counter = 0; counter < 8; counter++)
0x1344	0x1C49    ADDS	R1, R1, #1
0x1346	0xB2C9    UXTB	R1, R1
;Click_DALI_2_STM.c, 71 :: 		}
; counter end address is: 4 (R1)
0x1348	0xE7E5    B	L_applicationTask12
L_applicationTask13:
;Click_DALI_2_STM.c, 73 :: 		current_state = dali2_masterStatus();
0x134A	0xF7FFFD6F  BL	_dali2_masterStatus+0
;Click_DALI_2_STM.c, 74 :: 		}
L_end_applicationTask:
0x134E	0xF8DDE000  LDR	LR, [SP, #0]
0x1352	0xB002    ADD	SP, SP, #8
0x1354	0x4770    BX	LR
; end of _applicationTask
_dali2_sendCmd:
;__dali2_driver.c, 747 :: 		void dali2_sendCmd(const uint8_t balAddress, const uint8_t cmd, const uint8_t cmdType, const uint8_t folType)
; folType start address is: 12 (R3)
; cmdType start address is: 8 (R2)
; cmd start address is: 4 (R1)
; balAddress start address is: 0 (R0)
0x0C9C	0xB086    SUB	SP, SP, #24
0x0C9E	0xF8CDE000  STR	LR, [SP, #0]
0x0CA2	0xF88D2004  STRB	R2, [SP, #4]
0x0CA6	0xB2C2    UXTB	R2, R0
0x0CA8	0xF89D0004  LDRB	R0, [SP, #4]
0x0CAC	0xB2CE    UXTB	R6, R1
0x0CAE	0xB2D9    UXTB	R1, R3
; folType end address is: 12 (R3)
; cmdType end address is: 8 (R2)
; cmd end address is: 4 (R1)
; balAddress end address is: 0 (R0)
; balAddress start address is: 8 (R2)
; cmd start address is: 24 (R6)
; cmdType start address is: 0 (R0)
; folType start address is: 4 (R1)
;__dali2_driver.c, 752 :: 		hal_gpio_rstSet( 0 );
0x0CB0	0xF88D1004  STRB	R1, [SP, #4]
0x0CB4	0xF88D0008  STRB	R0, [SP, #8]
0x0CB8	0xF88D600C  STRB	R6, [SP, #12]
0x0CBC	0xF88D2010  STRB	R2, [SP, #16]
0x0CC0	0x2000    MOVS	R0, #0
0x0CC2	0x4C43    LDR	R4, [PC, #268]
0x0CC4	0x6824    LDR	R4, [R4, #0]
0x0CC6	0x47A0    BLX	R4
0x0CC8	0xF89D2010  LDRB	R2, [SP, #16]
0x0CCC	0xF89D600C  LDRB	R6, [SP, #12]
0x0CD0	0xF89D0008  LDRB	R0, [SP, #8]
0x0CD4	0xF89D1004  LDRB	R1, [SP, #4]
;__dali2_driver.c, 754 :: 		_tickCounter = 0;
0x0CD8	0x2500    MOVS	R5, #0
0x0CDA	0x4C3E    LDR	R4, [PC, #248]
0x0CDC	0x8025    STRH	R5, [R4, #0]
;__dali2_driver.c, 755 :: 		_bitCounter  = 0;
0x0CDE	0x2500    MOVS	R5, #0
0x0CE0	0x4C3D    LDR	R4, [PC, #244]
0x0CE2	0x7025    STRB	R5, [R4, #0]
;__dali2_driver.c, 757 :: 		_daliState = _DALI2_SENDING_DATA;
0x0CE4	0x2501    MOVS	R5, #1
0x0CE6	0x4C3D    LDR	R4, [PC, #244]
0x0CE8	0x7025    STRB	R5, [R4, #0]
;__dali2_driver.c, 759 :: 		tmp[0] = balAddress;
0x0CEA	0xAC05    ADD	R4, SP, #20
0x0CEC	0x7022    STRB	R2, [R4, #0]
;__dali2_driver.c, 760 :: 		tmp[1] = cmd;
0x0CEE	0x1C64    ADDS	R4, R4, #1
0x0CF0	0x7026    STRB	R6, [R4, #0]
;__dali2_driver.c, 762 :: 		for (i = 0; i < 17; i++)
; i start address is: 12 (R3)
0x0CF2	0x2300    MOVS	R3, #0
; balAddress end address is: 8 (R2)
; cmd end address is: 24 (R6)
; cmdType end address is: 0 (R0)
; folType end address is: 4 (R1)
; i end address is: 12 (R3)
0x0CF4	0xF88D1004  STRB	R1, [SP, #4]
0x0CF8	0xFA5FFB82  UXTB	R11, R2
0x0CFC	0xFA5FFA86  UXTB	R10, R6
0x0D00	0xB2C1    UXTB	R1, R0
0x0D02	0xF89D0004  LDRB	R0, [SP, #4]
L_dali2_sendCmd51:
; i start address is: 12 (R3)
; folType start address is: 0 (R0)
; cmdType start address is: 4 (R1)
; cmd start address is: 40 (R10)
; balAddress start address is: 44 (R11)
0x0D06	0x2B11    CMP	R3, #17
0x0D08	0xD206    BCS	L_dali2_sendCmd52
;__dali2_driver.c, 764 :: 		_txBuffer[i] = 0;
0x0D0A	0x4C35    LDR	R4, [PC, #212]
0x0D0C	0x18E5    ADDS	R5, R4, R3
0x0D0E	0x2400    MOVS	R4, #0
0x0D10	0x702C    STRB	R4, [R5, #0]
;__dali2_driver.c, 762 :: 		for (i = 0; i < 17; i++)
0x0D12	0x1C5B    ADDS	R3, R3, #1
0x0D14	0xB2DB    UXTB	R3, R3
;__dali2_driver.c, 765 :: 		}
; i end address is: 12 (R3)
0x0D16	0xE7F6    B	L_dali2_sendCmd51
L_dali2_sendCmd52:
;__dali2_driver.c, 767 :: 		_prepareAddress(tmp, cmdType, 0, folType);
0x0D18	0xAC05    ADD	R4, SP, #20
0x0D1A	0xB2C3    UXTB	R3, R0
; folType end address is: 0 (R0)
0x0D1C	0x2200    MOVS	R2, #0
; cmdType end address is: 4 (R1)
0x0D1E	0x4620    MOV	R0, R4
0x0D20	0xF7FFFBAC  BL	__dali2_driver__prepareAddress+0
;__dali2_driver.c, 768 :: 		_prepareData(tmp, _txBuffer, 2);
0x0D24	0xAC05    ADD	R4, SP, #20
0x0D26	0x2202    MOVS	R2, #2
0x0D28	0x492D    LDR	R1, [PC, #180]
0x0D2A	0x4620    MOV	R0, R4
0x0D2C	0xF7FFFBCE  BL	__dali2_driver__prepareData+0
;__dali2_driver.c, 770 :: 		_writeData(balAddress, tmp[1]);
0x0D30	0xAC05    ADD	R4, SP, #20
0x0D32	0x1C64    ADDS	R4, R4, #1
0x0D34	0x7824    LDRB	R4, [R4, #0]
0x0D36	0xB2E1    UXTB	R1, R4
0x0D38	0xFA5FF08B  UXTB	R0, R11
; balAddress end address is: 44 (R11)
0x0D3C	0xF7FFFC28  BL	__dali2_driver__writeData+0
;__dali2_driver.c, 772 :: 		if ((cmd >= 0x00) && (cmd <= 0x1F))
0x0D40	0xF1BA0F00  CMP	R10, #0
0x0D44	0xD305    BCC	L__dali2_sendCmd114
0x0D46	0xF1BA0F1F  CMP	R10, #31
0x0D4A	0xD802    BHI	L__dali2_sendCmd113
L__dali2_sendCmd112:
;__dali2_driver.c, 774 :: 		_expectBackCh   = FALSE;
0x0D4C	0x2500    MOVS	R5, #0
0x0D4E	0x4C25    LDR	R4, [PC, #148]
0x0D50	0x7025    STRB	R5, [R4, #0]
;__dali2_driver.c, 772 :: 		if ((cmd >= 0x00) && (cmd <= 0x1F))
L__dali2_sendCmd114:
L__dali2_sendCmd113:
;__dali2_driver.c, 777 :: 		if ((cmd >= 20) && (cmd <= 0x80))
0x0D52	0xF1BA0F14  CMP	R10, #20
0x0D56	0xD305    BCC	L__dali2_sendCmd116
0x0D58	0xF1BA0F80  CMP	R10, #128
0x0D5C	0xD802    BHI	L__dali2_sendCmd115
L__dali2_sendCmd111:
;__dali2_driver.c, 779 :: 		_expectBackCh = FALSE;
0x0D5E	0x2500    MOVS	R5, #0
0x0D60	0x4C20    LDR	R4, [PC, #128]
0x0D62	0x7025    STRB	R5, [R4, #0]
;__dali2_driver.c, 777 :: 		if ((cmd >= 20) && (cmd <= 0x80))
L__dali2_sendCmd116:
L__dali2_sendCmd115:
;__dali2_driver.c, 782 :: 		if (cmd >= 0x90)
0x0D64	0xF1BA0F90  CMP	R10, #144
0x0D68	0xD302    BCC	L_dali2_sendCmd60
; cmd end address is: 40 (R10)
;__dali2_driver.c, 784 :: 		_expectBackCh = TRUE;
0x0D6A	0x2501    MOVS	R5, #1
0x0D6C	0x4C1D    LDR	R4, [PC, #116]
0x0D6E	0x7025    STRB	R5, [R4, #0]
;__dali2_driver.c, 785 :: 		}
L_dali2_sendCmd60:
;__dali2_driver.c, 787 :: 		if (_checkSpecCmd(tmp[0]))
0x0D70	0xAC05    ADD	R4, SP, #20
0x0D72	0x7824    LDRB	R4, [R4, #0]
0x0D74	0xB2E0    UXTB	R0, R4
0x0D76	0xF7FFFBF9  BL	__dali2_driver__checkSpecCmd+0
0x0D7A	0xB1F8    CBZ	R0, L_dali2_sendCmd61
;__dali2_driver.c, 789 :: 		_expectBackCh = TRUE;
0x0D7C	0x2501    MOVS	R5, #1
0x0D7E	0x4C19    LDR	R4, [PC, #100]
0x0D80	0x7025    STRB	R5, [R4, #0]
;__dali2_driver.c, 791 :: 		if ((tmp[0] == _DALI2_TERMINATE_H_BITS) || (tmp[0] == _DALI2_DTR))
0x0D82	0xAC05    ADD	R4, SP, #20
0x0D84	0x7824    LDRB	R4, [R4, #0]
0x0D86	0x2CA1    CMP	R4, #161
0x0D88	0xD004    BEQ	L__dali2_sendCmd118
0x0D8A	0xAC05    ADD	R4, SP, #20
0x0D8C	0x7824    LDRB	R4, [R4, #0]
0x0D8E	0x2CA3    CMP	R4, #163
0x0D90	0xD000    BEQ	L__dali2_sendCmd117
0x0D92	0xE003    B	L_dali2_sendCmd64
L__dali2_sendCmd118:
L__dali2_sendCmd117:
;__dali2_driver.c, 793 :: 		_expectBackCh = FALSE;
0x0D94	0x2500    MOVS	R5, #0
0x0D96	0x4C13    LDR	R4, [PC, #76]
0x0D98	0x7025    STRB	R5, [R4, #0]
;__dali2_driver.c, 794 :: 		}
0x0D9A	0xE00F    B	L_dali2_sendCmd65
L_dali2_sendCmd64:
;__dali2_driver.c, 795 :: 		else if ((tmp[0] == _DALI2_VERIFY_SHORT_ADDRESS) || (tmp[0] == _DALI2_QUERY_SHORT_ADDRESS_H))
0x0D9C	0xAC05    ADD	R4, SP, #20
0x0D9E	0x7824    LDRB	R4, [R4, #0]
0x0DA0	0x2CB9    CMP	R4, #185
0x0DA2	0xD004    BEQ	L__dali2_sendCmd120
0x0DA4	0xAC05    ADD	R4, SP, #20
0x0DA6	0x7824    LDRB	R4, [R4, #0]
0x0DA8	0x2CBB    CMP	R4, #187
0x0DAA	0xD000    BEQ	L__dali2_sendCmd119
0x0DAC	0xE003    B	L_dali2_sendCmd68
L__dali2_sendCmd120:
L__dali2_sendCmd119:
;__dali2_driver.c, 797 :: 		_expectBackCh = TRUE;
0x0DAE	0x2501    MOVS	R5, #1
0x0DB0	0x4C0C    LDR	R4, [PC, #48]
0x0DB2	0x7025    STRB	R5, [R4, #0]
;__dali2_driver.c, 798 :: 		}
0x0DB4	0xE002    B	L_dali2_sendCmd69
L_dali2_sendCmd68:
;__dali2_driver.c, 801 :: 		_expectBackCh = FALSE;
0x0DB6	0x2500    MOVS	R5, #0
0x0DB8	0x4C0A    LDR	R4, [PC, #40]
0x0DBA	0x7025    STRB	R5, [R4, #0]
;__dali2_driver.c, 802 :: 		}
L_dali2_sendCmd69:
L_dali2_sendCmd65:
;__dali2_driver.c, 803 :: 		}
L_dali2_sendCmd61:
;__dali2_driver.c, 805 :: 		_tickCounter = 0;
0x0DBC	0x2500    MOVS	R5, #0
0x0DBE	0x4C05    LDR	R4, [PC, #20]
0x0DC0	0x8025    STRH	R5, [R4, #0]
;__dali2_driver.c, 806 :: 		_bitCounter = 0;
0x0DC2	0x2500    MOVS	R5, #0
0x0DC4	0x4C04    LDR	R4, [PC, #16]
0x0DC6	0x7025    STRB	R5, [R4, #0]
;__dali2_driver.c, 807 :: 		}
L_end_dali2_sendCmd:
0x0DC8	0xF8DDE000  LDR	LR, [SP, #0]
0x0DCC	0xB006    ADD	SP, SP, #24
0x0DCE	0x4770    BX	LR
0x0DD0	0x00042000  	__dali2_driver_hal_gpio_rstSet+0
0x0DD4	0x000E2000  	__dali2_driver__tickCounter+0
0x0DD8	0x000D2000  	__dali2_driver__bitCounter+0
0x0DDC	0x000C2000  	__dali2_driver__daliState+0
0x0DE0	0x00B32000  	__dali2_driver__txBuffer+0
0x0DE4	0x00B02000  	__dali2_driver__expectBackCh+0
; end of _dali2_sendCmd
__dali2_driver__prepareAddress:
;__dali2_driver.c, 633 :: 		static void _prepareAddress(uint8_t *commandArray, uint8_t addressType, uint8_t byteAddressPosition, uint8_t followingType)
; followingType start address is: 12 (R3)
; byteAddressPosition start address is: 8 (R2)
; addressType start address is: 4 (R1)
; commandArray start address is: 0 (R0)
; followingType end address is: 12 (R3)
; byteAddressPosition end address is: 8 (R2)
; addressType end address is: 4 (R1)
; commandArray end address is: 0 (R0)
; commandArray start address is: 0 (R0)
; addressType start address is: 4 (R1)
; byteAddressPosition start address is: 8 (R2)
; followingType start address is: 12 (R3)
;__dali2_driver.c, 637 :: 		if (addressType == _DALI2_BROADCAST_CMD)
0x047C	0xF1B10FFF  CMP	R1, #255
0x0480	0xD103    BNE	L___dali2_driver__prepareAddress39
; addressType end address is: 4 (R1)
; followingType end address is: 12 (R3)
;__dali2_driver.c, 639 :: 		commandArray[byteAddressPosition] = _DALI2_BROADCAST_CMD;
0x0482	0x1885    ADDS	R5, R0, R2
; commandArray end address is: 0 (R0)
; byteAddressPosition end address is: 8 (R2)
0x0484	0x24FF    MOVS	R4, #255
0x0486	0x702C    STRB	R4, [R5, #0]
;__dali2_driver.c, 640 :: 		}
0x0488	0xE016    B	L___dali2_driver__prepareAddress40
L___dali2_driver__prepareAddress39:
;__dali2_driver.c, 643 :: 		addr_tmp = commandArray[byteAddressPosition];
; followingType start address is: 12 (R3)
; byteAddressPosition start address is: 8 (R2)
; addressType start address is: 4 (R1)
; commandArray start address is: 0 (R0)
0x048A	0x1884    ADDS	R4, R0, R2
0x048C	0x7825    LDRB	R5, [R4, #0]
; addr_tmp start address is: 20 (R5)
;__dali2_driver.c, 645 :: 		if (addressType == _DALI2_BROADCAST_DIRECT)
0x048E	0x29FE    CMP	R1, #254
0x0490	0xD103    BNE	L___dali2_driver__prepareAddress41
; addressType end address is: 4 (R1)
; followingType end address is: 12 (R3)
; addr_tmp end address is: 20 (R5)
;__dali2_driver.c, 647 :: 		commandArray[byteAddressPosition] = _DALI2_BROADCAST_DIRECT;
0x0492	0x1885    ADDS	R5, R0, R2
; commandArray end address is: 0 (R0)
; byteAddressPosition end address is: 8 (R2)
0x0494	0x24FE    MOVS	R4, #254
0x0496	0x702C    STRB	R4, [R5, #0]
;__dali2_driver.c, 648 :: 		}
0x0498	0xE00E    B	L___dali2_driver__prepareAddress42
L___dali2_driver__prepareAddress41:
;__dali2_driver.c, 651 :: 		addr_tmp <<= 1;
; addr_tmp start address is: 20 (R5)
; followingType start address is: 12 (R3)
; byteAddressPosition start address is: 8 (R2)
; addressType start address is: 4 (R1)
; commandArray start address is: 0 (R0)
0x049A	0x006C    LSLS	R4, R5, #1
0x049C	0xB2E5    UXTB	R5, R4
;__dali2_driver.c, 653 :: 		if (followingType == _DALI2_FOLLOWING_COMMAND)
0x049E	0x2B01    CMP	R3, #1
0x04A0	0xD103    BNE	L___dali2_driver__prepareAddress108
; followingType end address is: 12 (R3)
;__dali2_driver.c, 655 :: 		addr_tmp |= 0x01;
0x04A2	0xF0450301  ORR	R3, R5, #1
0x04A6	0xB2DB    UXTB	R3, R3
; addr_tmp end address is: 20 (R5)
; addr_tmp start address is: 12 (R3)
; addr_tmp end address is: 12 (R3)
;__dali2_driver.c, 656 :: 		}
0x04A8	0xE000    B	L___dali2_driver__prepareAddress43
L___dali2_driver__prepareAddress108:
;__dali2_driver.c, 653 :: 		if (followingType == _DALI2_FOLLOWING_COMMAND)
0x04AA	0xB2EB    UXTB	R3, R5
;__dali2_driver.c, 656 :: 		}
L___dali2_driver__prepareAddress43:
;__dali2_driver.c, 658 :: 		if (addressType == _DALI2_GROUP_ADDRESS)
; addr_tmp start address is: 12 (R3)
0x04AC	0x2980    CMP	R1, #128
0x04AE	0xD103    BNE	L___dali2_driver__prepareAddress44
; addressType end address is: 4 (R1)
;__dali2_driver.c, 660 :: 		addr_tmp |= _DALI2_GROUP_ADDRESS;
0x04B0	0xF0430580  ORR	R5, R3, #128
; addr_tmp end address is: 12 (R3)
;__dali2_driver.c, 661 :: 		commandArray[byteAddressPosition] = addr_tmp;
0x04B4	0x1884    ADDS	R4, R0, R2
; commandArray end address is: 0 (R0)
; byteAddressPosition end address is: 8 (R2)
0x04B6	0x7025    STRB	R5, [R4, #0]
;__dali2_driver.c, 662 :: 		}
L___dali2_driver__prepareAddress44:
;__dali2_driver.c, 663 :: 		}
L___dali2_driver__prepareAddress42:
;__dali2_driver.c, 664 :: 		}
L___dali2_driver__prepareAddress40:
;__dali2_driver.c, 665 :: 		}
L_end__prepareAddress:
0x04B8	0x4770    BX	LR
; end of __dali2_driver__prepareAddress
__dali2_driver__prepareData:
;__dali2_driver.c, 583 :: 		static void _prepareData(uint8_t *commandArray, uint8_t *tx_array, uint8_t bytesInCmd)
; bytesInCmd start address is: 8 (R2)
; tx_array start address is: 4 (R1)
; commandArray start address is: 0 (R0)
0x04CC	0xB081    SUB	SP, SP, #4
; bytesInCmd end address is: 8 (R2)
; tx_array end address is: 4 (R1)
; commandArray end address is: 0 (R0)
; commandArray start address is: 0 (R0)
; tx_array start address is: 4 (R1)
; bytesInCmd start address is: 8 (R2)
;__dali2_driver.c, 585 :: 		uint8_t mask = 0x80;
;__dali2_driver.c, 592 :: 		bitCounter = 0;
; bitCounter start address is: 12 (R3)
0x04CE	0x2300    MOVS	R3, #0
;__dali2_driver.c, 594 :: 		for (i = 0; i < 9; i++)
; i start address is: 16 (R4)
0x04D0	0x2400    MOVS	R4, #0
; commandArray end address is: 0 (R0)
; tx_array end address is: 4 (R1)
; bytesInCmd end address is: 8 (R2)
; bitCounter end address is: 12 (R3)
; i end address is: 16 (R4)
0x04D2	0xF88D2000  STRB	R2, [SP, #0]
0x04D6	0x4605    MOV	R5, R0
0x04D8	0xB2D8    UXTB	R0, R3
0x04DA	0x460A    MOV	R2, R1
0x04DC	0xF89D1000  LDRB	R1, [SP, #0]
L___dali2_driver__prepareData25:
; i start address is: 16 (R4)
; bitCounter start address is: 0 (R0)
; bytesInCmd start address is: 4 (R1)
; tx_array start address is: 8 (R2)
; commandArray start address is: 20 (R5)
0x04E0	0x2C09    CMP	R4, #9
0x04E2	0xD204    BCS	L___dali2_driver__prepareData26
;__dali2_driver.c, 596 :: 		tx_array[0] = 0;
0x04E4	0x2300    MOVS	R3, #0
0x04E6	0x7013    STRB	R3, [R2, #0]
;__dali2_driver.c, 594 :: 		for (i = 0; i < 9; i++)
0x04E8	0x1C64    ADDS	R4, R4, #1
0x04EA	0xB2E4    UXTB	R4, R4
;__dali2_driver.c, 597 :: 		}
; i end address is: 16 (R4)
0x04EC	0xE7F8    B	L___dali2_driver__prepareData25
L___dali2_driver__prepareData26:
;__dali2_driver.c, 599 :: 		for (bytes_counter = 0; bytes_counter < bytesInCmd; bytes_counter++)
; bytes_counter start address is: 28 (R7)
0x04EE	0x2700    MOVS	R7, #0
; bitCounter end address is: 0 (R0)
; bytesInCmd end address is: 4 (R1)
; tx_array end address is: 8 (R2)
; commandArray end address is: 20 (R5)
; bytes_counter end address is: 28 (R7)
L___dali2_driver__prepareData28:
; bytes_counter start address is: 28 (R7)
; commandArray start address is: 20 (R5)
; tx_array start address is: 8 (R2)
; bytesInCmd start address is: 4 (R1)
; bitCounter start address is: 0 (R0)
0x04F0	0x428F    CMP	R7, R1
0x04F2	0xD238    BCS	L___dali2_driver__prepareData29
;__dali2_driver.c, 601 :: 		dummy = commandArray[bytes_counter];
0x04F4	0x19EB    ADDS	R3, R5, R7
0x04F6	0x781E    LDRB	R6, [R3, #0]
; dummy start address is: 24 (R6)
;__dali2_driver.c, 602 :: 		mask = 0x80;
; mask start address is: 36 (R9)
0x04F8	0xF2400980  MOVW	R9, #128
;__dali2_driver.c, 603 :: 		bitCounter++;
0x04FC	0x1C43    ADDS	R3, R0, #1
0x04FE	0xB2DB    UXTB	R3, R3
0x0500	0xB2D8    UXTB	R0, R3
;__dali2_driver.c, 605 :: 		if (bitCounter == 1)
0x0502	0x2B01    CMP	R3, #1
0x0504	0xD101    BNE	L___dali2_driver__prepareData31
;__dali2_driver.c, 607 :: 		tx_array[0] = DALI_END_BIT_PULSE;
0x0506	0x2301    MOVS	R3, #1
0x0508	0x7013    STRB	R3, [R2, #0]
;__dali2_driver.c, 608 :: 		}
L___dali2_driver__prepareData31:
;__dali2_driver.c, 610 :: 		for (i = 1; i < 9; i++)
; i start address is: 32 (R8)
0x050A	0xF2400801  MOVW	R8, #1
; bitCounter end address is: 0 (R0)
; bytesInCmd end address is: 4 (R1)
; tx_array end address is: 8 (R2)
; commandArray end address is: 20 (R5)
; mask end address is: 36 (R9)
; i end address is: 32 (R8)
; bytes_counter end address is: 28 (R7)
L___dali2_driver__prepareData32:
; i start address is: 32 (R8)
; bitCounter start address is: 0 (R0)
; mask start address is: 36 (R9)
; dummy start address is: 24 (R6)
; dummy end address is: 24 (R6)
; bytesInCmd start address is: 4 (R1)
; tx_array start address is: 8 (R2)
; commandArray start address is: 20 (R5)
; bytes_counter start address is: 28 (R7)
0x050E	0xF1B80F09  CMP	R8, #9
0x0512	0xD225    BCS	L___dali2_driver__prepareData33
; dummy end address is: 24 (R6)
;__dali2_driver.c, 612 :: 		if (dummy & mask)
; dummy start address is: 24 (R6)
0x0514	0xEA060309  AND	R3, R6, R9, LSL #0
0x0518	0xB2DB    UXTB	R3, R3
0x051A	0xB143    CBZ	R3, L___dali2_driver__prepareData35
;__dali2_driver.c, 614 :: 		tx_array[i + (8 * bytes_counter)] = DALI_END_BIT_PULSE;
0x051C	0x00FB    LSLS	R3, R7, #3
0x051E	0xB21B    SXTH	R3, R3
0x0520	0xEB080303  ADD	R3, R8, R3, LSL #0
0x0524	0xB21B    SXTH	R3, R3
0x0526	0x18D4    ADDS	R4, R2, R3
0x0528	0x2301    MOVS	R3, #1
0x052A	0x7023    STRB	R3, [R4, #0]
;__dali2_driver.c, 615 :: 		}
0x052C	0xE007    B	L___dali2_driver__prepareData36
L___dali2_driver__prepareData35:
;__dali2_driver.c, 618 :: 		tx_array[i + (8 * bytes_counter)] = DALI_START_BIT_PULSE;
0x052E	0x00FB    LSLS	R3, R7, #3
0x0530	0xB21B    SXTH	R3, R3
0x0532	0xEB080303  ADD	R3, R8, R3, LSL #0
0x0536	0xB21B    SXTH	R3, R3
0x0538	0x18D4    ADDS	R4, R2, R3
0x053A	0x2300    MOVS	R3, #0
0x053C	0x7023    STRB	R3, [R4, #0]
;__dali2_driver.c, 619 :: 		}
L___dali2_driver__prepareData36:
;__dali2_driver.c, 621 :: 		if (mask == 0x01)
0x053E	0xF1B90F01  CMP	R9, #1
0x0542	0xD104    BNE	L___dali2_driver__prepareData37
;__dali2_driver.c, 623 :: 		mask <<= 7;
0x0544	0xEA4F13C9  LSL	R3, R9, #7
0x0548	0xFA5FF983  UXTB	R9, R3
;__dali2_driver.c, 624 :: 		}
0x054C	0xE003    B	L___dali2_driver__prepareData38
L___dali2_driver__prepareData37:
;__dali2_driver.c, 627 :: 		mask >>= 1;
0x054E	0xEA4F0959  LSR	R9, R9, #1
0x0552	0xFA5FF989  UXTB	R9, R9
; mask end address is: 36 (R9)
;__dali2_driver.c, 628 :: 		}
L___dali2_driver__prepareData38:
;__dali2_driver.c, 610 :: 		for (i = 1; i < 9; i++)
; mask start address is: 36 (R9)
0x0556	0xF1080801  ADD	R8, R8, #1
0x055A	0xFA5FF888  UXTB	R8, R8
;__dali2_driver.c, 629 :: 		}
; dummy end address is: 24 (R6)
; mask end address is: 36 (R9)
; i end address is: 32 (R8)
0x055E	0xE7D6    B	L___dali2_driver__prepareData32
L___dali2_driver__prepareData33:
;__dali2_driver.c, 599 :: 		for (bytes_counter = 0; bytes_counter < bytesInCmd; bytes_counter++)
0x0560	0x1C7F    ADDS	R7, R7, #1
0x0562	0xB2FF    UXTB	R7, R7
;__dali2_driver.c, 630 :: 		}
; bitCounter end address is: 0 (R0)
; bytesInCmd end address is: 4 (R1)
; tx_array end address is: 8 (R2)
; commandArray end address is: 20 (R5)
; bytes_counter end address is: 28 (R7)
0x0564	0xE7C4    B	L___dali2_driver__prepareData28
L___dali2_driver__prepareData29:
;__dali2_driver.c, 631 :: 		}
L_end__prepareData:
0x0566	0xB001    ADD	SP, SP, #4
0x0568	0x4770    BX	LR
; end of __dali2_driver__prepareData
__dali2_driver__writeData:
;__dali2_driver.c, 556 :: 		static void _writeData(uint8_t addrToWrite, uint8_t dataToWrite)
; dataToWrite start address is: 4 (R1)
; addrToWrite start address is: 0 (R0)
; dataToWrite end address is: 4 (R1)
; addrToWrite end address is: 0 (R0)
; addrToWrite start address is: 0 (R0)
; dataToWrite start address is: 4 (R1)
;__dali2_driver.c, 560 :: 		loc = addrToWrite * 2 + 1;
0x0590	0x0042    LSLS	R2, R0, #1
0x0592	0xB212    SXTH	R2, R2
; addrToWrite end address is: 0 (R0)
0x0594	0x1C52    ADDS	R2, R2, #1
0x0596	0xB212    SXTH	R2, R2
;__dali2_driver.c, 561 :: 		_ballast[ loc ] = dataToWrite;
0x0598	0xB2D3    UXTB	R3, R2
0x059A	0x4A02    LDR	R2, [PC, #8]
0x059C	0x18D2    ADDS	R2, R2, R3
0x059E	0x7011    STRB	R1, [R2, #0]
; dataToWrite end address is: 4 (R1)
;__dali2_driver.c, 562 :: 		}
L_end__writeData:
0x05A0	0x4770    BX	LR
0x05A2	0xBF00    NOP
0x05A4	0x00102000  	__dali2_driver__ballast+0
; end of __dali2_driver__writeData
__dali2_driver__checkSpecCmd:
;__dali2_driver.c, 564 :: 		static uint8_t _checkSpecCmd(uint8_t addrByte)
; addrByte start address is: 0 (R0)
0x056C	0xB2C1    UXTB	R1, R0
; addrByte end address is: 0 (R0)
; addrByte start address is: 4 (R1)
;__dali2_driver.c, 568 :: 		addrToCheck = addrByte;
; addrToCheck start address is: 0 (R0)
0x056E	0xB2C8    UXTB	R0, R1
;__dali2_driver.c, 570 :: 		if ((addrToCheck == 0x90) || (addrToCheck == 0xA0))
0x0570	0x2990    CMP	R1, #144
0x0572	0xD002    BEQ	L___dali2_driver__checkSpecCmd107
; addrByte end address is: 4 (R1)
0x0574	0x28A0    CMP	R0, #160
0x0576	0xD000    BEQ	L___dali2_driver__checkSpecCmd106
; addrToCheck end address is: 0 (R0)
0x0578	0xE007    B	L___dali2_driver__checkSpecCmd21
L___dali2_driver__checkSpecCmd107:
; addrToCheck start address is: 0 (R0)
L___dali2_driver__checkSpecCmd106:
;__dali2_driver.c, 572 :: 		if (addrToCheck & 0x01)
0x057A	0xF0000101  AND	R1, R0, #1
0x057E	0xB2C9    UXTB	R1, R1
; addrToCheck end address is: 0 (R0)
0x0580	0xB109    CBZ	R1, L___dali2_driver__checkSpecCmd22
;__dali2_driver.c, 573 :: 		return TRUE;
0x0582	0x2001    MOVS	R0, #1
0x0584	0xE002    B	L_end__checkSpecCmd
L___dali2_driver__checkSpecCmd22:
;__dali2_driver.c, 575 :: 		return FALSE;
0x0586	0x2000    MOVS	R0, #0
0x0588	0xE000    B	L_end__checkSpecCmd
;__dali2_driver.c, 576 :: 		}
L___dali2_driver__checkSpecCmd21:
;__dali2_driver.c, 579 :: 		return FALSE;
0x058A	0x2000    MOVS	R0, #0
;__dali2_driver.c, 581 :: 		}
L_end__checkSpecCmd:
0x058C	0x4770    BX	LR
; end of __dali2_driver__checkSpecCmd
_dali2_masterStatus:
;__dali2_driver.c, 809 :: 		uint8_t dali2_masterStatus()
0x0E2C	0xB081    SUB	SP, SP, #4
0x0E2E	0xF8CDE000  STR	LR, [SP, #0]
;__dali2_driver.c, 813 :: 		if (_daliState == _DALI2_NO_ACTION)
0x0E32	0x483A    LDR	R0, [PC, #232]
0x0E34	0x7800    LDRB	R0, [R0, #0]
0x0E36	0xB928    CBNZ	R0, L_dali2_masterStatus70
;__dali2_driver.c, 815 :: 		_tickCounter = 0;
0x0E38	0x2100    MOVS	R1, #0
0x0E3A	0x4839    LDR	R0, [PC, #228]
0x0E3C	0x8001    STRH	R1, [R0, #0]
;__dali2_driver.c, 816 :: 		_bitCounter  = 0;
0x0E3E	0x2100    MOVS	R1, #0
0x0E40	0x4838    LDR	R0, [PC, #224]
0x0E42	0x7001    STRB	R1, [R0, #0]
;__dali2_driver.c, 817 :: 		}
L_dali2_masterStatus70:
;__dali2_driver.c, 819 :: 		if (_daliState == _DALI2_SENDING_DATA)
0x0E44	0x4835    LDR	R0, [PC, #212]
0x0E46	0x7800    LDRB	R0, [R0, #0]
0x0E48	0x2801    CMP	R0, #1
0x0E4A	0xD1FF    BNE	L_dali2_masterStatus71
;__dali2_driver.c, 823 :: 		}
L_dali2_masterStatus71:
;__dali2_driver.c, 825 :: 		if (_daliState == _DALI2_RECEIVING_DATA)
0x0E4C	0x4833    LDR	R0, [PC, #204]
0x0E4E	0x7800    LDRB	R0, [R0, #0]
0x0E50	0x2802    CMP	R0, #2
0x0E52	0xD1FF    BNE	L_dali2_masterStatus72
;__dali2_driver.c, 830 :: 		}
L_dali2_masterStatus72:
;__dali2_driver.c, 832 :: 		if (_daliState == _DALI2_FORWARD_FRAME_SENT)
0x0E54	0x4831    LDR	R0, [PC, #196]
0x0E56	0x7800    LDRB	R0, [R0, #0]
0x0E58	0x2807    CMP	R0, #7
0x0E5A	0xD113    BNE	L_dali2_masterStatus73
;__dali2_driver.c, 834 :: 		_tickCounter = 0;
0x0E5C	0x2100    MOVS	R1, #0
0x0E5E	0x4830    LDR	R0, [PC, #192]
0x0E60	0x8001    STRH	R1, [R0, #0]
;__dali2_driver.c, 835 :: 		_bitCounter  = 0;
0x0E62	0x2100    MOVS	R1, #0
0x0E64	0x482F    LDR	R0, [PC, #188]
0x0E66	0x7001    STRB	R1, [R0, #0]
;__dali2_driver.c, 837 :: 		hal_gpio_rstSet( 0 );
0x0E68	0x2000    MOVS	R0, #0
0x0E6A	0x4C2F    LDR	R4, [PC, #188]
0x0E6C	0x6824    LDR	R4, [R4, #0]
0x0E6E	0x47A0    BLX	R4
;__dali2_driver.c, 839 :: 		if (_expectBackCh)
0x0E70	0x482E    LDR	R0, [PC, #184]
0x0E72	0x7800    LDRB	R0, [R0, #0]
0x0E74	0xB118    CBZ	R0, L_dali2_masterStatus74
;__dali2_driver.c, 841 :: 		_daliState = _DALI2_SETTLING_FF_TO_BF;
0x0E76	0x2104    MOVS	R1, #4
0x0E78	0x4828    LDR	R0, [PC, #160]
0x0E7A	0x7001    STRB	R1, [R0, #0]
;__dali2_driver.c, 842 :: 		}
0x0E7C	0xE002    B	L_dali2_masterStatus75
L_dali2_masterStatus74:
;__dali2_driver.c, 845 :: 		_daliState = _DALI2_SETTLING_FF_TO_FF;
0x0E7E	0x2105    MOVS	R1, #5
0x0E80	0x4826    LDR	R0, [PC, #152]
0x0E82	0x7001    STRB	R1, [R0, #0]
;__dali2_driver.c, 846 :: 		}
L_dali2_masterStatus75:
;__dali2_driver.c, 847 :: 		}
L_dali2_masterStatus73:
;__dali2_driver.c, 849 :: 		if (_daliState == _DALI2_BACKWARD_FRAME_RECEIVED)
0x0E84	0x4825    LDR	R0, [PC, #148]
0x0E86	0x7800    LDRB	R0, [R0, #0]
0x0E88	0x2806    CMP	R0, #6
0x0E8A	0xD105    BNE	L_dali2_masterStatus76
;__dali2_driver.c, 851 :: 		_daliState = _DALI2_NO_ACTION;
0x0E8C	0x2100    MOVS	R1, #0
0x0E8E	0x4823    LDR	R0, [PC, #140]
0x0E90	0x7001    STRB	R1, [R0, #0]
;__dali2_driver.c, 852 :: 		_expectBackCh = 0;
0x0E92	0x2100    MOVS	R1, #0
0x0E94	0x4825    LDR	R0, [PC, #148]
0x0E96	0x7001    STRB	R1, [R0, #0]
;__dali2_driver.c, 853 :: 		}
L_dali2_masterStatus76:
;__dali2_driver.c, 855 :: 		if ((_daliState == _DALI2_SETTLING_FF_TO_FF_FINISHED) || (_daliState == _DALI2_SETTLING_FF_TO_BF_FINISHED))
0x0E98	0x4820    LDR	R0, [PC, #128]
0x0E9A	0x7800    LDRB	R0, [R0, #0]
0x0E9C	0x2809    CMP	R0, #9
0x0E9E	0xD004    BEQ	L__dali2_masterStatus123
0x0EA0	0x481E    LDR	R0, [PC, #120]
0x0EA2	0x7800    LDRB	R0, [R0, #0]
0x0EA4	0x2808    CMP	R0, #8
0x0EA6	0xD000    BEQ	L__dali2_masterStatus122
0x0EA8	0xE00E    B	L_dali2_masterStatus79
L__dali2_masterStatus123:
L__dali2_masterStatus122:
;__dali2_driver.c, 857 :: 		_daliState = _DALI2_NO_ACTION;
0x0EAA	0x2100    MOVS	R1, #0
0x0EAC	0x481B    LDR	R0, [PC, #108]
0x0EAE	0x7001    STRB	R1, [R0, #0]
;__dali2_driver.c, 859 :: 		if (_expectBackCh)
0x0EB0	0x481E    LDR	R0, [PC, #120]
0x0EB2	0x7800    LDRB	R0, [R0, #0]
0x0EB4	0xB140    CBZ	R0, L_dali2_masterStatus80
;__dali2_driver.c, 861 :: 		_daliState = _DALI2_WAIT_FOR_BACKCHANNEL_TO_RECEIVE;
0x0EB6	0x210A    MOVS	R1, #10
0x0EB8	0x4818    LDR	R0, [PC, #96]
0x0EBA	0x7001    STRB	R1, [R0, #0]
;__dali2_driver.c, 863 :: 		_formerVal = 1;
0x0EBC	0x2101    MOVS	R1, #1
0x0EBE	0x481C    LDR	R0, [PC, #112]
0x0EC0	0x7001    STRB	R1, [R0, #0]
;__dali2_driver.c, 864 :: 		_currentVal = 1;
0x0EC2	0x2101    MOVS	R1, #1
0x0EC4	0x481B    LDR	R0, [PC, #108]
0x0EC6	0x7001    STRB	R1, [R0, #0]
;__dali2_driver.c, 865 :: 		}
L_dali2_masterStatus80:
;__dali2_driver.c, 866 :: 		}
L_dali2_masterStatus79:
;__dali2_driver.c, 868 :: 		if (_daliState == _DALI2_WAIT_FOR_BACKCHANNEL_TO_RECEIVE)
0x0EC8	0x4C14    LDR	R4, [PC, #80]
0x0ECA	0x7824    LDRB	R4, [R4, #0]
0x0ECC	0x2C0A    CMP	R4, #10
0x0ECE	0xD117    BNE	L_dali2_masterStatus81
;__dali2_driver.c, 870 :: 		_formerVal = _currentVal;
0x0ED0	0x4C18    LDR	R4, [PC, #96]
0x0ED2	0x7824    LDRB	R4, [R4, #0]
0x0ED4	0x4816    LDR	R0, [PC, #88]
0x0ED6	0x7004    STRB	R4, [R0, #0]
;__dali2_driver.c, 871 :: 		_currentVal = hal_gpio_intGet();
0x0ED8	0x4C17    LDR	R4, [PC, #92]
0x0EDA	0x6824    LDR	R4, [R4, #0]
0x0EDC	0x47A0    BLX	R4
0x0EDE	0x4915    LDR	R1, [PC, #84]
0x0EE0	0x7008    STRB	R0, [R1, #0]
;__dali2_driver.c, 873 :: 		if (_formerVal != _currentVal)
0x0EE2	0x4814    LDR	R0, [PC, #80]
0x0EE4	0x7801    LDRB	R1, [R0, #0]
0x0EE6	0x4812    LDR	R0, [PC, #72]
0x0EE8	0x7800    LDRB	R0, [R0, #0]
0x0EEA	0x4288    CMP	R0, R1
0x0EEC	0xD008    BEQ	L_dali2_masterStatus82
;__dali2_driver.c, 875 :: 		_tickCounter = 0;
0x0EEE	0x2100    MOVS	R1, #0
0x0EF0	0x480B    LDR	R0, [PC, #44]
0x0EF2	0x8001    STRH	R1, [R0, #0]
;__dali2_driver.c, 876 :: 		_bitCounter  = 0;
0x0EF4	0x2100    MOVS	R1, #0
0x0EF6	0x480B    LDR	R0, [PC, #44]
0x0EF8	0x7001    STRB	R1, [R0, #0]
;__dali2_driver.c, 877 :: 		_daliState = _DALI2_RECEIVING_DATA;
0x0EFA	0x2102    MOVS	R1, #2
0x0EFC	0x4807    LDR	R0, [PC, #28]
0x0EFE	0x7001    STRB	R1, [R0, #0]
;__dali2_driver.c, 878 :: 		}
L_dali2_masterStatus82:
;__dali2_driver.c, 879 :: 		}
L_dali2_masterStatus81:
;__dali2_driver.c, 881 :: 		if (_daliState == _DALI2_ERR)
0x0F00	0x4806    LDR	R0, [PC, #24]
0x0F02	0x7800    LDRB	R0, [R0, #0]
0x0F04	0x2803    CMP	R0, #3
0x0F06	0xD103    BNE	L_dali2_masterStatus83
;__dali2_driver.c, 883 :: 		hal_gpio_rstSet( 0 );
0x0F08	0x2000    MOVS	R0, #0
0x0F0A	0x4C07    LDR	R4, [PC, #28]
0x0F0C	0x6824    LDR	R4, [R4, #0]
0x0F0E	0x47A0    BLX	R4
;__dali2_driver.c, 884 :: 		}
L_dali2_masterStatus83:
;__dali2_driver.c, 886 :: 		return _daliState;
0x0F10	0x4802    LDR	R0, [PC, #8]
0x0F12	0x7800    LDRB	R0, [R0, #0]
;__dali2_driver.c, 887 :: 		}
L_end_dali2_masterStatus:
0x0F14	0xF8DDE000  LDR	LR, [SP, #0]
0x0F18	0xB001    ADD	SP, SP, #4
0x0F1A	0x4770    BX	LR
0x0F1C	0x000C2000  	__dali2_driver__daliState+0
0x0F20	0x000E2000  	__dali2_driver__tickCounter+0
0x0F24	0x000D2000  	__dali2_driver__bitCounter+0
0x0F28	0x00042000  	__dali2_driver_hal_gpio_rstSet+0
0x0F2C	0x00B02000  	__dali2_driver__expectBackCh+0
0x0F30	0x00B12000  	__dali2_driver__formerVal+0
0x0F34	0x00B22000  	__dali2_driver__currentVal+0
0x0F38	0x00002000  	__dali2_driver_hal_gpio_intGet+0
; end of _dali2_masterStatus
easymx_v7_STM32F107VC__getAN_1:
;__em_f107vc_gpio.c, 31 :: 		static uint8_t _getAN_1  () 			{ return GPIOA_IDR.B4 ;  }
0x1050	0x4801    LDR	R0, [PC, #4]
0x1052	0x6800    LDR	R0, [R0, #0]
L_end__getAN_1:
0x1054	0x4770    BX	LR
0x1056	0xBF00    NOP
0x1058	0x01104221  	GPIOA_IDR+0
; end of easymx_v7_STM32F107VC__getAN_1
easymx_v7_STM32F107VC__getRST_1:
;__em_f107vc_gpio.c, 32 :: 		static uint8_t _getRST_1 () 			{ return GPIOC_IDR.B2 ;  }
0x108C	0x4801    LDR	R0, [PC, #4]
0x108E	0x6800    LDR	R0, [R0, #0]
L_end__getRST_1:
0x1090	0x4770    BX	LR
0x1092	0xBF00    NOP
0x1094	0x01084222  	GPIOC_IDR+0
; end of easymx_v7_STM32F107VC__getRST_1
easymx_v7_STM32F107VC__getCS_1:
;__em_f107vc_gpio.c, 33 :: 		static uint8_t _getCS_1  () 			{ return GPIOD_IDR.B13;  }
0x105C	0x4801    LDR	R0, [PC, #4]
0x105E	0x6800    LDR	R0, [R0, #0]
L_end__getCS_1:
0x1060	0x4770    BX	LR
0x1062	0xBF00    NOP
0x1064	0x81344222  	GPIOD_IDR+0
; end of easymx_v7_STM32F107VC__getCS_1
easymx_v7_STM32F107VC__getSCK_1:
;__em_f107vc_gpio.c, 34 :: 		static uint8_t _getSCK_1 () 			{ return GPIOC_IDR.B10;  }
0x1068	0x4801    LDR	R0, [PC, #4]
0x106A	0x6800    LDR	R0, [R0, #0]
L_end__getSCK_1:
0x106C	0x4770    BX	LR
0x106E	0xBF00    NOP
0x1070	0x01284222  	GPIOC_IDR+0
; end of easymx_v7_STM32F107VC__getSCK_1
easymx_v7_STM32F107VC__getMISO_1:
;__em_f107vc_gpio.c, 35 :: 		static uint8_t _getMISO_1() 			{ return GPIOC_IDR.B11;  }
0x1074	0x4801    LDR	R0, [PC, #4]
0x1076	0x6800    LDR	R0, [R0, #0]
L_end__getMISO_1:
0x1078	0x4770    BX	LR
0x107A	0xBF00    NOP
0x107C	0x012C4222  	GPIOC_IDR+0
; end of easymx_v7_STM32F107VC__getMISO_1
easymx_v7_STM32F107VC__getMOSI_1:
;__em_f107vc_gpio.c, 36 :: 		static uint8_t _getMOSI_1() 			{ return GPIOC_IDR.B12;  }
0x1098	0x4801    LDR	R0, [PC, #4]
0x109A	0x6800    LDR	R0, [R0, #0]
L_end__getMOSI_1:
0x109C	0x4770    BX	LR
0x109E	0xBF00    NOP
0x10A0	0x01304222  	GPIOC_IDR+0
; end of easymx_v7_STM32F107VC__getMOSI_1
easymx_v7_STM32F107VC__getPWM_1:
;__em_f107vc_gpio.c, 37 :: 		static uint8_t _getPWM_1 () 			{ return GPIOA_IDR.B0 ;  }
0x1080	0x4801    LDR	R0, [PC, #4]
0x1082	0x6800    LDR	R0, [R0, #0]
L_end__getPWM_1:
0x1084	0x4770    BX	LR
0x1086	0xBF00    NOP
0x1088	0x01004221  	GPIOA_IDR+0
; end of easymx_v7_STM32F107VC__getPWM_1
easymx_v7_STM32F107VC__getINT_1:
;__em_f107vc_gpio.c, 38 :: 		static uint8_t _getINT_1 () 			{ return GPIOD_IDR.B10;  }
0x0C90	0x4801    LDR	R0, [PC, #4]
0x0C92	0x6800    LDR	R0, [R0, #0]
L_end__getINT_1:
0x0C94	0x4770    BX	LR
0x0C96	0xBF00    NOP
0x0C98	0x81284222  	GPIOD_IDR+0
; end of easymx_v7_STM32F107VC__getINT_1
easymx_v7_STM32F107VC__getRX_1:
;__em_f107vc_gpio.c, 39 :: 		static uint8_t _getRX_1  () 			{ return GPIOD_IDR.B9 ;  }
0x0AAC	0x4801    LDR	R0, [PC, #4]
0x0AAE	0x6800    LDR	R0, [R0, #0]
L_end__getRX_1:
0x0AB0	0x4770    BX	LR
0x0AB2	0xBF00    NOP
0x0AB4	0x81244222  	GPIOD_IDR+0
; end of easymx_v7_STM32F107VC__getRX_1
easymx_v7_STM32F107VC__getTX_1:
;__em_f107vc_gpio.c, 40 :: 		static uint8_t _getTX_1  () 			{ return GPIOD_IDR.B8 ;  }
0x0AA0	0x4801    LDR	R0, [PC, #4]
0x0AA2	0x6800    LDR	R0, [R0, #0]
L_end__getTX_1:
0x0AA4	0x4770    BX	LR
0x0AA6	0xBF00    NOP
0x0AA8	0x81204222  	GPIOD_IDR+0
; end of easymx_v7_STM32F107VC__getTX_1
easymx_v7_STM32F107VC__getSCL_1:
;__em_f107vc_gpio.c, 41 :: 		static uint8_t _getSCL_1 () 			{ return GPIOB_IDR.B6 ;  }
0x0AC4	0x4801    LDR	R0, [PC, #4]
0x0AC6	0x6800    LDR	R0, [R0, #0]
L_end__getSCL_1:
0x0AC8	0x4770    BX	LR
0x0ACA	0xBF00    NOP
0x0ACC	0x81184221  	GPIOB_IDR+0
; end of easymx_v7_STM32F107VC__getSCL_1
easymx_v7_STM32F107VC__getSDA_1:
;__em_f107vc_gpio.c, 42 :: 		static uint8_t _getSDA_1 () 			{ return GPIOB_IDR.B7 ;  }
0x0AB8	0x4801    LDR	R0, [PC, #4]
0x0ABA	0x6800    LDR	R0, [R0, #0]
L_end__getSDA_1:
0x0ABC	0x4770    BX	LR
0x0ABE	0xBF00    NOP
0x0AC0	0x811C4221  	GPIOB_IDR+0
; end of easymx_v7_STM32F107VC__getSDA_1
easymx_v7_STM32F107VC__getAN_2:
;__em_f107vc_gpio.c, 56 :: 		static uint8_t _getAN_2  ()             { return GPIOA_IDR.B5 ;  }
0x0A94	0x4801    LDR	R0, [PC, #4]
0x0A96	0x6800    LDR	R0, [R0, #0]
L_end__getAN_2:
0x0A98	0x4770    BX	LR
0x0A9A	0xBF00    NOP
0x0A9C	0x01144221  	GPIOA_IDR+0
; end of easymx_v7_STM32F107VC__getAN_2
easymx_v7_STM32F107VC__getRST_2:
;__em_f107vc_gpio.c, 57 :: 		static uint8_t _getRST_2 ()             { return GPIOC_IDR.B3 ;  }
0x0A64	0x4801    LDR	R0, [PC, #4]
0x0A66	0x6800    LDR	R0, [R0, #0]
L_end__getRST_2:
0x0A68	0x4770    BX	LR
0x0A6A	0xBF00    NOP
0x0A6C	0x010C4222  	GPIOC_IDR+0
; end of easymx_v7_STM32F107VC__getRST_2
easymx_v7_STM32F107VC__getCS_2:
;__em_f107vc_gpio.c, 58 :: 		static uint8_t _getCS_2  ()             { return GPIOD_IDR.B14;  }
0x0A88	0x4801    LDR	R0, [PC, #4]
0x0A8A	0x6800    LDR	R0, [R0, #0]
L_end__getCS_2:
0x0A8C	0x4770    BX	LR
0x0A8E	0xBF00    NOP
0x0A90	0x81384222  	GPIOD_IDR+0
; end of easymx_v7_STM32F107VC__getCS_2
easymx_v7_STM32F107VC__getSCK_2:
;__em_f107vc_gpio.c, 59 :: 		static uint8_t _getSCK_2 ()             { return GPIOC_IDR.B10;  }
0x0A7C	0x4801    LDR	R0, [PC, #4]
0x0A7E	0x6800    LDR	R0, [R0, #0]
L_end__getSCK_2:
0x0A80	0x4770    BX	LR
0x0A82	0xBF00    NOP
0x0A84	0x01284222  	GPIOC_IDR+0
; end of easymx_v7_STM32F107VC__getSCK_2
easymx_v7_STM32F107VC__getMISO_2:
;__em_f107vc_gpio.c, 60 :: 		static uint8_t _getMISO_2()             { return GPIOC_IDR.B11;  }
0x0A70	0x4801    LDR	R0, [PC, #4]
0x0A72	0x6800    LDR	R0, [R0, #0]
L_end__getMISO_2:
0x0A74	0x4770    BX	LR
0x0A76	0xBF00    NOP
0x0A78	0x012C4222  	GPIOC_IDR+0
; end of easymx_v7_STM32F107VC__getMISO_2
easymx_v7_STM32F107VC__getMOSI_2:
;__em_f107vc_gpio.c, 61 :: 		static uint8_t _getMOSI_2()             { return GPIOC_IDR.B12;  }
0x0C6C	0x4801    LDR	R0, [PC, #4]
0x0C6E	0x6800    LDR	R0, [R0, #0]
L_end__getMOSI_2:
0x0C70	0x4770    BX	LR
0x0C72	0xBF00    NOP
0x0C74	0x01304222  	GPIOC_IDR+0
; end of easymx_v7_STM32F107VC__getMOSI_2
easymx_v7_STM32F107VC__getPWM_2:
;__em_f107vc_gpio.c, 62 :: 		static uint8_t _getPWM_2 ()             { return GPIOD_IDR.B12;  }
0x0C60	0x4801    LDR	R0, [PC, #4]
0x0C62	0x6800    LDR	R0, [R0, #0]
L_end__getPWM_2:
0x0C64	0x4770    BX	LR
0x0C66	0xBF00    NOP
0x0C68	0x81304222  	GPIOD_IDR+0
; end of easymx_v7_STM32F107VC__getPWM_2
easymx_v7_STM32F107VC__getINT_2:
;__em_f107vc_gpio.c, 63 :: 		static uint8_t _getINT_2 ()             { return GPIOD_IDR.B12;  }
0x0C84	0x4801    LDR	R0, [PC, #4]
0x0C86	0x6800    LDR	R0, [R0, #0]
L_end__getINT_2:
0x0C88	0x4770    BX	LR
0x0C8A	0xBF00    NOP
0x0C8C	0x81304222  	GPIOD_IDR+0
; end of easymx_v7_STM32F107VC__getINT_2
easymx_v7_STM32F107VC__getRX_2:
;__em_f107vc_gpio.c, 64 :: 		static uint8_t _getRX_2  ()             { return GPIOD_IDR.B6 ;  }
0x0C78	0x4801    LDR	R0, [PC, #4]
0x0C7A	0x6800    LDR	R0, [R0, #0]
L_end__getRX_2:
0x0C7C	0x4770    BX	LR
0x0C7E	0xBF00    NOP
0x0C80	0x81184222  	GPIOD_IDR+0
; end of easymx_v7_STM32F107VC__getRX_2
easymx_v7_STM32F107VC__getTX_2:
;__em_f107vc_gpio.c, 65 :: 		static uint8_t _getTX_2  ()             { return GPIOD_IDR.B5 ;  }
0x0C54	0x4801    LDR	R0, [PC, #4]
0x0C56	0x6800    LDR	R0, [R0, #0]
L_end__getTX_2:
0x0C58	0x4770    BX	LR
0x0C5A	0xBF00    NOP
0x0C5C	0x81144222  	GPIOD_IDR+0
; end of easymx_v7_STM32F107VC__getTX_2
easymx_v7_STM32F107VC__getSCL_2:
;__em_f107vc_gpio.c, 66 :: 		static uint8_t _getSCL_2 ()             { return GPIOB_IDR.B6 ;  }
0x0ADC	0x4801    LDR	R0, [PC, #4]
0x0ADE	0x6800    LDR	R0, [R0, #0]
L_end__getSCL_2:
0x0AE0	0x4770    BX	LR
0x0AE2	0xBF00    NOP
0x0AE4	0x81184221  	GPIOB_IDR+0
; end of easymx_v7_STM32F107VC__getSCL_2
easymx_v7_STM32F107VC__getSDA_2:
;__em_f107vc_gpio.c, 67 :: 		static uint8_t _getSDA_2 ()             { return GPIOB_IDR.B7 ;  }
0x0AD0	0x4801    LDR	R0, [PC, #4]
0x0AD2	0x6800    LDR	R0, [R0, #0]
L_end__getSDA_2:
0x0AD4	0x4770    BX	LR
0x0AD6	0xBF00    NOP
0x0AD8	0x811C4221  	GPIOB_IDR+0
; end of easymx_v7_STM32F107VC__getSDA_2
___CC2DW:
;__Lib_System_105_107.c, 28 :: 		
0x10A4	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 30 :: 		
L_loopDW:
;__Lib_System_105_107.c, 31 :: 		
0x10A6	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_105_107.c, 32 :: 		
0x10AA	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_105_107.c, 33 :: 		
0x10AE	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 34 :: 		
0x10B2	0xD1F8    BNE	L_loopDW
;__Lib_System_105_107.c, 36 :: 		
L_end___CC2DW:
0x10B4	0xB001    ADD	SP, SP, #4
0x10B6	0x4770    BX	LR
; end of ___CC2DW
__Lib_System_105_107_InitialSetUpRCCRCC2:
;__Lib_System_105_107.c, 383 :: 		
0x13B8	0xB081    SUB	SP, SP, #4
0x13BA	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_105_107.c, 386 :: 		
; ulRCC_CR start address is: 8 (R2)
0x13BE	0x4A46    LDR	R2, [PC, #280]
;__Lib_System_105_107.c, 387 :: 		
; ulRCC_CFGR start address is: 12 (R3)
0x13C0	0x4B46    LDR	R3, [PC, #280]
;__Lib_System_105_107.c, 388 :: 		
; ulRCC_CFGR2 start address is: 16 (R4)
0x13C2	0x4C47    LDR	R4, [PC, #284]
;__Lib_System_105_107.c, 389 :: 		
; Fosc_kHz start address is: 4 (R1)
0x13C4	0x4947    LDR	R1, [PC, #284]
;__Lib_System_105_107.c, 396 :: 		
0x13C6	0xF64B3080  MOVW	R0, #48000
0x13CA	0x4281    CMP	R1, R0
0x13CC	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC232
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_105_107.c, 397 :: 		
0x13CE	0x4846    LDR	R0, [PC, #280]
0x13D0	0x6800    LDR	R0, [R0, #0]
0x13D2	0xF0400102  ORR	R1, R0, #2
0x13D6	0x4844    LDR	R0, [PC, #272]
0x13D8	0x6001    STR	R1, [R0, #0]
0x13DA	0xE011    B	L___Lib_System_105_107_InitialSetUpRCCRCC233
L___Lib_System_105_107_InitialSetUpRCCRCC232:
;__Lib_System_105_107.c, 398 :: 		
; Fosc_kHz start address is: 4 (R1)
0x13DC	0xF64550C0  MOVW	R0, #24000
0x13E0	0x4281    CMP	R1, R0
0x13E2	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC234
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_105_107.c, 399 :: 		
0x13E4	0x4840    LDR	R0, [PC, #256]
0x13E6	0x6800    LDR	R0, [R0, #0]
0x13E8	0xF0400101  ORR	R1, R0, #1
0x13EC	0x483E    LDR	R0, [PC, #248]
0x13EE	0x6001    STR	R1, [R0, #0]
0x13F0	0xE006    B	L___Lib_System_105_107_InitialSetUpRCCRCC235
L___Lib_System_105_107_InitialSetUpRCCRCC234:
;__Lib_System_105_107.c, 401 :: 		
0x13F2	0x483D    LDR	R0, [PC, #244]
0x13F4	0x6801    LDR	R1, [R0, #0]
0x13F6	0xF06F0007  MVN	R0, #7
0x13FA	0x4001    ANDS	R1, R0
0x13FC	0x483A    LDR	R0, [PC, #232]
0x13FE	0x6001    STR	R1, [R0, #0]
L___Lib_System_105_107_InitialSetUpRCCRCC235:
L___Lib_System_105_107_InitialSetUpRCCRCC233:
;__Lib_System_105_107.c, 403 :: 		
0x1400	0xF7FFFED6  BL	__Lib_System_105_107_SystemClockSetDefault+0
;__Lib_System_105_107.c, 405 :: 		
0x1404	0x4839    LDR	R0, [PC, #228]
0x1406	0x6003    STR	R3, [R0, #0]
;__Lib_System_105_107.c, 406 :: 		
0x1408	0x4839    LDR	R0, [PC, #228]
0x140A	0x6004    STR	R4, [R0, #0]
; ulRCC_CFGR2 end address is: 16 (R4)
;__Lib_System_105_107.c, 407 :: 		
0x140C	0x4839    LDR	R0, [PC, #228]
0x140E	0xEA020100  AND	R1, R2, R0, LSL #0
0x1412	0x4839    LDR	R0, [PC, #228]
0x1414	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 409 :: 		
0x1416	0xF0020001  AND	R0, R2, #1
0x141A	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC253
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x141C	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 410 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC237:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x141E	0x4836    LDR	R0, [PC, #216]
0x1420	0x6800    LDR	R0, [R0, #0]
0x1422	0xF0000002  AND	R0, R0, #2
0x1426	0x2800    CMP	R0, #0
0x1428	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC238
;__Lib_System_105_107.c, 411 :: 		
0x142A	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC237
L___Lib_System_105_107_InitialSetUpRCCRCC238:
;__Lib_System_105_107.c, 412 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x142C	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC236
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC253:
;__Lib_System_105_107.c, 409 :: 		
0x142E	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 412 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC236:
;__Lib_System_105_107.c, 414 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x1430	0xF4023080  AND	R0, R2, #65536
0x1434	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC254
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
0x1436	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 415 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC240:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x1438	0x482F    LDR	R0, [PC, #188]
0x143A	0x6800    LDR	R0, [R0, #0]
0x143C	0xF4003000  AND	R0, R0, #131072
0x1440	0x2800    CMP	R0, #0
0x1442	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC241
;__Lib_System_105_107.c, 416 :: 		
0x1444	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC240
L___Lib_System_105_107_InitialSetUpRCCRCC241:
;__Lib_System_105_107.c, 417 :: 		
; ulRCC_CR end address is: 8 (R2)
0x1446	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC239
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC254:
;__Lib_System_105_107.c, 414 :: 		
0x1448	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 417 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC239:
;__Lib_System_105_107.c, 419 :: 		
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x144A	0xF0025080  AND	R0, R2, #268435456
0x144E	0xB168    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC255
;__Lib_System_105_107.c, 420 :: 		
0x1450	0x4829    LDR	R0, [PC, #164]
0x1452	0x6800    LDR	R0, [R0, #0]
0x1454	0xF0405180  ORR	R1, R0, #268435456
0x1458	0x4827    LDR	R0, [PC, #156]
0x145A	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
;__Lib_System_105_107.c, 421 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC243:
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x145C	0x4826    LDR	R0, [PC, #152]
0x145E	0x6800    LDR	R0, [R0, #0]
0x1460	0xF0005000  AND	R0, R0, #536870912
0x1464	0x2800    CMP	R0, #0
0x1466	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC244
;__Lib_System_105_107.c, 422 :: 		
0x1468	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC243
L___Lib_System_105_107_InitialSetUpRCCRCC244:
;__Lib_System_105_107.c, 423 :: 		
; ulRCC_CR end address is: 8 (R2)
0x146A	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC242
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC255:
;__Lib_System_105_107.c, 419 :: 		
;__Lib_System_105_107.c, 423 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC242:
;__Lib_System_105_107.c, 425 :: 		
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x146C	0xF0026080  AND	R0, R2, #67108864
0x1470	0xB178    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC256
;__Lib_System_105_107.c, 426 :: 		
0x1472	0x4821    LDR	R0, [PC, #132]
0x1474	0x6800    LDR	R0, [R0, #0]
0x1476	0xF0406180  ORR	R1, R0, #67108864
0x147A	0x481F    LDR	R0, [PC, #124]
0x147C	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x147E	0x4611    MOV	R1, R2
0x1480	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 427 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC246:
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x1482	0x481D    LDR	R0, [PC, #116]
0x1484	0x6800    LDR	R0, [R0, #0]
0x1486	0xF0006000  AND	R0, R0, #134217728
0x148A	0x2800    CMP	R0, #0
0x148C	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC247
;__Lib_System_105_107.c, 428 :: 		
0x148E	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC246
L___Lib_System_105_107_InitialSetUpRCCRCC247:
;__Lib_System_105_107.c, 429 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x1490	0xE001    B	L___Lib_System_105_107_InitialSetUpRCCRCC245
; ulRCC_CR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC256:
;__Lib_System_105_107.c, 425 :: 		
0x1492	0x4611    MOV	R1, R2
0x1494	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 429 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC245:
;__Lib_System_105_107.c, 431 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x1496	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x149A	0xB170    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC257
;__Lib_System_105_107.c, 432 :: 		
0x149C	0x4816    LDR	R0, [PC, #88]
0x149E	0x6800    LDR	R0, [R0, #0]
0x14A0	0xF0407180  ORR	R1, R0, #16777216
0x14A4	0x4814    LDR	R0, [PC, #80]
0x14A6	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x14A8	0x4611    MOV	R1, R2
;__Lib_System_105_107.c, 433 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC249:
; ulRCC_CFGR start address is: 4 (R1)
0x14AA	0x4813    LDR	R0, [PC, #76]
0x14AC	0x6800    LDR	R0, [R0, #0]
0x14AE	0xF0007000  AND	R0, R0, #33554432
0x14B2	0xB900    CBNZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC250
;__Lib_System_105_107.c, 434 :: 		
0x14B4	0xE7F9    B	L___Lib_System_105_107_InitialSetUpRCCRCC249
L___Lib_System_105_107_InitialSetUpRCCRCC250:
;__Lib_System_105_107.c, 435 :: 		
0x14B6	0x460A    MOV	R2, R1
0x14B8	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC248
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC257:
;__Lib_System_105_107.c, 431 :: 		
;__Lib_System_105_107.c, 435 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC248:
;__Lib_System_105_107.c, 439 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC251:
; ulRCC_CFGR start address is: 8 (R2)
0x14BA	0x480C    LDR	R0, [PC, #48]
0x14BC	0x6800    LDR	R0, [R0, #0]
0x14BE	0xF000010C  AND	R1, R0, #12
0x14C2	0x0090    LSLS	R0, R2, #2
0x14C4	0xF000000C  AND	R0, R0, #12
0x14C8	0x4281    CMP	R1, R0
0x14CA	0xD000    BEQ	L___Lib_System_105_107_InitialSetUpRCCRCC252
;__Lib_System_105_107.c, 440 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x14CC	0xE7F5    B	L___Lib_System_105_107_InitialSetUpRCCRCC251
L___Lib_System_105_107_InitialSetUpRCCRCC252:
;__Lib_System_105_107.c, 441 :: 		
L_end_InitialSetUpRCCRCC2:
0x14CE	0xF8DDE000  LDR	LR, [SP, #0]
0x14D2	0xB001    ADD	SP, SP, #4
0x14D4	0x4770    BX	LR
0x14D6	0xBF00    NOP
0x14D8	0x00810501  	#83951745
0x14DC	0x8402001D  	#1934338
0x14E0	0x06440001  	#67140
0x14E4	0x19400001  	#72000
0x14E8	0x20004002  	FLASH_ACR+0
0x14EC	0x10044002  	RCC_CFGR+0
0x14F0	0x102C4002  	RCC_CFGR2+0
0x14F4	0xFFFF000F  	#1048575
0x14F8	0x10004002  	RCC_CR+0
; end of __Lib_System_105_107_InitialSetUpRCCRCC2
__Lib_System_105_107_SystemClockSetDefault:
;__Lib_System_105_107.c, 356 :: 		
0x11B0	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 359 :: 		
0x11B2	0x4815    LDR	R0, [PC, #84]
0x11B4	0x6800    LDR	R0, [R0, #0]
0x11B6	0xF0400101  ORR	R1, R0, #1
0x11BA	0x4813    LDR	R0, [PC, #76]
0x11BC	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 362 :: 		
0x11BE	0x4913    LDR	R1, [PC, #76]
0x11C0	0x4813    LDR	R0, [PC, #76]
0x11C2	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 365 :: 		
0x11C4	0x4810    LDR	R0, [PC, #64]
0x11C6	0x6801    LDR	R1, [R0, #0]
0x11C8	0x4812    LDR	R0, [PC, #72]
0x11CA	0x4001    ANDS	R1, R0
0x11CC	0x480E    LDR	R0, [PC, #56]
0x11CE	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 368 :: 		
0x11D0	0x480D    LDR	R0, [PC, #52]
0x11D2	0x6801    LDR	R1, [R0, #0]
0x11D4	0xF46F2080  MVN	R0, #262144
0x11D8	0x4001    ANDS	R1, R0
0x11DA	0x480B    LDR	R0, [PC, #44]
0x11DC	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 371 :: 		
0x11DE	0x480C    LDR	R0, [PC, #48]
0x11E0	0x6801    LDR	R1, [R0, #0]
0x11E2	0xF46F00FE  MVN	R0, #8323072
0x11E6	0x4001    ANDS	R1, R0
0x11E8	0x4809    LDR	R0, [PC, #36]
0x11EA	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 374 :: 		
0x11EC	0x4806    LDR	R0, [PC, #24]
0x11EE	0x6801    LDR	R1, [R0, #0]
0x11F0	0xF06F50A0  MVN	R0, #335544320
0x11F4	0x4001    ANDS	R1, R0
0x11F6	0x4804    LDR	R0, [PC, #16]
0x11F8	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 377 :: 		
0x11FA	0xF04F0100  MOV	R1, #0
0x11FE	0x4806    LDR	R0, [PC, #24]
0x1200	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 381 :: 		
L_end_SystemClockSetDefault:
0x1202	0xB001    ADD	SP, SP, #4
0x1204	0x4770    BX	LR
0x1206	0xBF00    NOP
0x1208	0x10004002  	RCC_CR+0
0x120C	0x0000F0FF  	#-251723776
0x1210	0x10044002  	RCC_CFGR+0
0x1214	0xFFFFFEF6  	#-17367041
0x1218	0x102C4002  	RCC_CFGR2+0
; end of __Lib_System_105_107_SystemClockSetDefault
__Lib_System_105_107_InitialSetUpFosc:
;__Lib_System_105_107.c, 443 :: 		
0x14FC	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 444 :: 		
0x14FE	0x4902    LDR	R1, [PC, #8]
0x1500	0x4802    LDR	R0, [PC, #8]
0x1502	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 445 :: 		
L_end_InitialSetUpFosc:
0x1504	0xB001    ADD	SP, SP, #4
0x1506	0x4770    BX	LR
0x1508	0x19400001  	#72000
0x150C	0x00C42000  	___System_CLOCK_IN_KHZ+0
; end of __Lib_System_105_107_InitialSetUpFosc
___GenExcept:
;__Lib_System_105_107.c, 307 :: 		
0x1510	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 308 :: 		
L___GenExcept28:
0x1512	0xE7FE    B	L___GenExcept28
;__Lib_System_105_107.c, 309 :: 		
L_end___GenExcept:
0x1514	0xB001    ADD	SP, SP, #4
0x1516	0x4770    BX	LR
; end of ___GenExcept
0x1578	0xB500    PUSH	(R14)
0x157A	0xF8DFB010  LDR	R11, [PC, #16]
0x157E	0xF8DFA010  LDR	R10, [PC, #16]
0x1582	0xF7FFFE4B  BL	4636
0x1586	0xBD00    POP	(R15)
0x1588	0x4770    BX	LR
0x158A	0xBF00    NOP
0x158C	0x00002000  	#536870912
0x1590	0x00D42000  	#536871124
_Timer_interrupt:
;click_dali_2_timer.h, 27 :: 		void Timer_interrupt() iv IVT_INT_TIM2
0x1394	0xB430    PUSH	(R4, R5)
0x1396	0xB081    SUB	SP, SP, #4
0x1398	0xF8CDE000  STR	LR, [SP, #0]
;click_dali_2_timer.h, 29 :: 		dali2_isr();
0x139C	0xF7FFFE8C  BL	_dali2_isr+0
;click_dali_2_timer.h, 30 :: 		TIM2_SR.UIF = 0;
0x13A0	0x2100    MOVS	R1, #0
0x13A2	0xB249    SXTB	R1, R1
0x13A4	0x4803    LDR	R0, [PC, #12]
0x13A6	0x6001    STR	R1, [R0, #0]
;click_dali_2_timer.h, 31 :: 		}
L_end_Timer_interrupt:
0x13A8	0xF8DDE000  LDR	LR, [SP, #0]
0x13AC	0xB001    ADD	SP, SP, #4
0x13AE	0xBC30    POP	(R4, R5)
0x13B0	0x4770    BX	LR
0x13B2	0xBF00    NOP
0x13B4	0x02004200  	TIM2_SR+0
; end of _Timer_interrupt
_dali2_isr:
;__dali2_driver.c, 889 :: 		void dali2_isr()
0x10B8	0xB081    SUB	SP, SP, #4
0x10BA	0xF8CDE000  STR	LR, [SP, #0]
;__dali2_driver.c, 895 :: 		if (_daliState != _DALI2_NO_ACTION)
0x10BE	0x4835    LDR	R0, [PC, #212]
0x10C0	0x7800    LDRB	R0, [R0, #0]
0x10C2	0xB160    CBZ	R0, L_dali2_isr84
;__dali2_driver.c, 897 :: 		if (_daliState == _DALI2_SENDING_DATA)
0x10C4	0x4833    LDR	R0, [PC, #204]
0x10C6	0x7800    LDRB	R0, [R0, #0]
0x10C8	0x2801    CMP	R0, #1
0x10CA	0xD101    BNE	L_dali2_isr85
;__dali2_driver.c, 899 :: 		_sendingData();
0x10CC	0xF7FFFD52  BL	__dali2_driver__sendingData+0
;__dali2_driver.c, 900 :: 		}
L_dali2_isr85:
;__dali2_driver.c, 902 :: 		if (_daliState == _DALI2_RECEIVING_DATA)
0x10D0	0x4830    LDR	R0, [PC, #192]
0x10D2	0x7800    LDRB	R0, [R0, #0]
0x10D4	0x2802    CMP	R0, #2
0x10D6	0xD101    BNE	L_dali2_isr86
;__dali2_driver.c, 904 :: 		_receivingData();
0x10D8	0xF7FFFD06  BL	__dali2_driver__receivingData+0
;__dali2_driver.c, 905 :: 		}
L_dali2_isr86:
;__dali2_driver.c, 906 :: 		}
0x10DC	0xE7FF    B	L_dali2_isr87
L_dali2_isr84:
;__dali2_driver.c, 910 :: 		}
L_dali2_isr87:
;__dali2_driver.c, 912 :: 		if (_daliState == _DALI2_WAIT_FOR_BACKCHANNEL_TO_RECEIVE)
0x10DE	0x4C2D    LDR	R4, [PC, #180]
0x10E0	0x7824    LDRB	R4, [R4, #0]
0x10E2	0x2C0A    CMP	R4, #10
0x10E4	0xD12E    BNE	L_dali2_isr88
;__dali2_driver.c, 914 :: 		_formerVal = _currentVal;
0x10E6	0x4C2C    LDR	R4, [PC, #176]
0x10E8	0x7824    LDRB	R4, [R4, #0]
0x10EA	0x482C    LDR	R0, [PC, #176]
0x10EC	0x7004    STRB	R4, [R0, #0]
;__dali2_driver.c, 915 :: 		_currentVal = hal_gpio_intGet();
0x10EE	0x4C2C    LDR	R4, [PC, #176]
0x10F0	0x6824    LDR	R4, [R4, #0]
0x10F2	0x47A0    BLX	R4
0x10F4	0x4928    LDR	R1, [PC, #160]
0x10F6	0x7008    STRB	R0, [R1, #0]
;__dali2_driver.c, 917 :: 		if (_tickCounter > 200)
0x10F8	0x482A    LDR	R0, [PC, #168]
0x10FA	0x8800    LDRH	R0, [R0, #0]
0x10FC	0x28C8    CMP	R0, #200
0x10FE	0xD90D    BLS	L_dali2_isr89
;__dali2_driver.c, 919 :: 		_daliState = _DALI2_NO_ACTION;
0x1100	0x2100    MOVS	R1, #0
0x1102	0x4824    LDR	R0, [PC, #144]
0x1104	0x7001    STRB	R1, [R0, #0]
;__dali2_driver.c, 921 :: 		for (i = 0; i < 8; i++)
; i start address is: 8 (R2)
0x1106	0x2200    MOVS	R2, #0
; i end address is: 8 (R2)
L_dali2_isr90:
; i start address is: 8 (R2)
0x1108	0x2A08    CMP	R2, #8
0x110A	0xD206    BCS	L_dali2_isr91
;__dali2_driver.c, 923 :: 		_rxBuffer[i] = 0;
0x110C	0x4826    LDR	R0, [PC, #152]
0x110E	0x1881    ADDS	R1, R0, R2
0x1110	0x2000    MOVS	R0, #0
0x1112	0x7008    STRB	R0, [R1, #0]
;__dali2_driver.c, 921 :: 		for (i = 0; i < 8; i++)
0x1114	0x1C52    ADDS	R2, R2, #1
0x1116	0xB2D2    UXTB	R2, R2
;__dali2_driver.c, 924 :: 		}
; i end address is: 8 (R2)
0x1118	0xE7F6    B	L_dali2_isr90
L_dali2_isr91:
;__dali2_driver.c, 925 :: 		}
0x111A	0xE00E    B	L_dali2_isr93
L_dali2_isr89:
;__dali2_driver.c, 928 :: 		if(_formerVal != _currentVal)
0x111C	0x481E    LDR	R0, [PC, #120]
0x111E	0x7801    LDRB	R1, [R0, #0]
0x1120	0x481E    LDR	R0, [PC, #120]
0x1122	0x7800    LDRB	R0, [R0, #0]
0x1124	0x4288    CMP	R0, R1
0x1126	0xD008    BEQ	L_dali2_isr94
;__dali2_driver.c, 930 :: 		_daliState = _DALI2_RECEIVING_DATA;
0x1128	0x2102    MOVS	R1, #2
0x112A	0x481A    LDR	R0, [PC, #104]
0x112C	0x7001    STRB	R1, [R0, #0]
;__dali2_driver.c, 931 :: 		_tickCounter = 0;
0x112E	0x2100    MOVS	R1, #0
0x1130	0x481C    LDR	R0, [PC, #112]
0x1132	0x8001    STRH	R1, [R0, #0]
;__dali2_driver.c, 932 :: 		_bitCounter  = 0;
0x1134	0x2100    MOVS	R1, #0
0x1136	0x481D    LDR	R0, [PC, #116]
0x1138	0x7001    STRB	R1, [R0, #0]
;__dali2_driver.c, 933 :: 		}
L_dali2_isr94:
;__dali2_driver.c, 934 :: 		}
L_dali2_isr93:
;__dali2_driver.c, 936 :: 		_tickCounter++;
0x113A	0x481A    LDR	R0, [PC, #104]
0x113C	0x8800    LDRH	R0, [R0, #0]
0x113E	0x1C41    ADDS	R1, R0, #1
0x1140	0x4818    LDR	R0, [PC, #96]
0x1142	0x8001    STRH	R1, [R0, #0]
;__dali2_driver.c, 937 :: 		}
L_dali2_isr88:
;__dali2_driver.c, 939 :: 		if ((_daliState == _DALI2_SETTLING_FF_TO_BF) || (_daliState == _DALI2_SETTLING_FF_TO_FF))
0x1144	0x4813    LDR	R0, [PC, #76]
0x1146	0x7800    LDRB	R0, [R0, #0]
0x1148	0x2804    CMP	R0, #4
0x114A	0xD004    BEQ	L__dali2_isr126
0x114C	0x4811    LDR	R0, [PC, #68]
0x114E	0x7800    LDRB	R0, [R0, #0]
0x1150	0x2805    CMP	R0, #5
0x1152	0xD000    BEQ	L__dali2_isr125
0x1154	0xE01A    B	L_dali2_isr97
L__dali2_isr126:
L__dali2_isr125:
;__dali2_driver.c, 941 :: 		if (_daliState == _DALI2_SETTLING_FF_TO_FF)
0x1156	0x480F    LDR	R0, [PC, #60]
0x1158	0x7800    LDRB	R0, [R0, #0]
0x115A	0x2805    CMP	R0, #5
0x115C	0xD106    BNE	L_dali2_isr98
;__dali2_driver.c, 943 :: 		if(_tickCounter > 104)
0x115E	0x4811    LDR	R0, [PC, #68]
0x1160	0x8800    LDRH	R0, [R0, #0]
0x1162	0x2868    CMP	R0, #104
0x1164	0xD902    BLS	L_dali2_isr99
;__dali2_driver.c, 945 :: 		_daliState = _DALI2_SETTLING_FF_TO_FF_FINISHED;
0x1166	0x2109    MOVS	R1, #9
0x1168	0x480A    LDR	R0, [PC, #40]
0x116A	0x7001    STRB	R1, [R0, #0]
;__dali2_driver.c, 946 :: 		}
L_dali2_isr99:
;__dali2_driver.c, 947 :: 		}
L_dali2_isr98:
;__dali2_driver.c, 949 :: 		if(_daliState == _DALI2_SETTLING_FF_TO_BF)
0x116C	0x4809    LDR	R0, [PC, #36]
0x116E	0x7800    LDRB	R0, [R0, #0]
0x1170	0x2804    CMP	R0, #4
0x1172	0xD106    BNE	L_dali2_isr100
;__dali2_driver.c, 951 :: 		if(_tickCounter > 28)
0x1174	0x480B    LDR	R0, [PC, #44]
0x1176	0x8800    LDRH	R0, [R0, #0]
0x1178	0x281C    CMP	R0, #28
0x117A	0xD902    BLS	L_dali2_isr101
;__dali2_driver.c, 953 :: 		_daliState = _DALI2_SETTLING_FF_TO_BF_FINISHED;
0x117C	0x2108    MOVS	R1, #8
0x117E	0x4805    LDR	R0, [PC, #20]
0x1180	0x7001    STRB	R1, [R0, #0]
;__dali2_driver.c, 954 :: 		}
L_dali2_isr101:
;__dali2_driver.c, 955 :: 		}
L_dali2_isr100:
;__dali2_driver.c, 957 :: 		_tickCounter++;
0x1182	0x4808    LDR	R0, [PC, #32]
0x1184	0x8800    LDRH	R0, [R0, #0]
0x1186	0x1C41    ADDS	R1, R0, #1
0x1188	0x4806    LDR	R0, [PC, #24]
0x118A	0x8001    STRH	R1, [R0, #0]
;__dali2_driver.c, 958 :: 		}
L_dali2_isr97:
;__dali2_driver.c, 959 :: 		}
L_end_dali2_isr:
0x118C	0xF8DDE000  LDR	LR, [SP, #0]
0x1190	0xB001    ADD	SP, SP, #4
0x1192	0x4770    BX	LR
0x1194	0x000C2000  	__dali2_driver__daliState+0
0x1198	0x00B22000  	__dali2_driver__currentVal+0
0x119C	0x00B12000  	__dali2_driver__formerVal+0
0x11A0	0x00002000  	__dali2_driver_hal_gpio_intGet+0
0x11A4	0x000E2000  	__dali2_driver__tickCounter+0
0x11A8	0x00C82000  	__dali2_driver__rxBuffer+0
0x11AC	0x000D2000  	__dali2_driver__bitCounter+0
; end of _dali2_isr
__dali2_driver__sendingData:
;__dali2_driver.c, 485 :: 		static void _sendingData()
0x0B74	0xB081    SUB	SP, SP, #4
0x0B76	0xF8CDE000  STR	LR, [SP, #0]
;__dali2_driver.c, 489 :: 		if (_tickCounter < 8)
0x0B7A	0x4831    LDR	R0, [PC, #196]
0x0B7C	0x8800    LDRH	R0, [R0, #0]
0x0B7E	0x2808    CMP	R0, #8
0x0B80	0xD20D    BCS	L___dali2_driver__sendingData5
;__dali2_driver.c, 491 :: 		if (_tickCounter < 4)
0x0B82	0x482F    LDR	R0, [PC, #188]
0x0B84	0x8800    LDRH	R0, [R0, #0]
0x0B86	0x2804    CMP	R0, #4
0x0B88	0xD204    BCS	L___dali2_driver__sendingData6
;__dali2_driver.c, 493 :: 		hal_gpio_rstSet( 1 );
0x0B8A	0x2001    MOVS	R0, #1
0x0B8C	0x4C2D    LDR	R4, [PC, #180]
0x0B8E	0x6824    LDR	R4, [R4, #0]
0x0B90	0x47A0    BLX	R4
;__dali2_driver.c, 494 :: 		}
0x0B92	0xE003    B	L___dali2_driver__sendingData7
L___dali2_driver__sendingData6:
;__dali2_driver.c, 497 :: 		hal_gpio_rstSet( 0 );
0x0B94	0x2000    MOVS	R0, #0
0x0B96	0x4C2B    LDR	R4, [PC, #172]
0x0B98	0x6824    LDR	R4, [R4, #0]
0x0B9A	0x47A0    BLX	R4
;__dali2_driver.c, 498 :: 		}
L___dali2_driver__sendingData7:
;__dali2_driver.c, 499 :: 		}
0x0B9C	0xE031    B	L___dali2_driver__sendingData8
L___dali2_driver__sendingData5:
;__dali2_driver.c, 500 :: 		else if (_bitCounter < 17)
0x0B9E	0x482A    LDR	R0, [PC, #168]
0x0BA0	0x7800    LDRB	R0, [R0, #0]
0x0BA2	0x2811    CMP	R0, #17
0x0BA4	0xD22D    BCS	L___dali2_driver__sendingData9
;__dali2_driver.c, 502 :: 		if (_tickCounter % 4 == 0)
0x0BA6	0x4826    LDR	R0, [PC, #152]
0x0BA8	0x8800    LDRH	R0, [R0, #0]
0x0BAA	0xF0000003  AND	R0, R0, #3
0x0BAE	0xB280    UXTH	R0, R0
0x0BB0	0x2800    CMP	R0, #0
0x0BB2	0xD126    BNE	L___dali2_driver__sendingData10
;__dali2_driver.c, 504 :: 		pulsePosition = _tickCounter / 4;
0x0BB4	0x4822    LDR	R0, [PC, #136]
0x0BB6	0x8800    LDRH	R0, [R0, #0]
0x0BB8	0x0880    LSRS	R0, R0, #2
;__dali2_driver.c, 506 :: 		if (pulsePosition % 2 == 0)
0x0BBA	0xB2C0    UXTB	R0, R0
0x0BBC	0xF0000001  AND	R0, R0, #1
0x0BC0	0xB2C0    UXTB	R0, R0
0x0BC2	0xB978    CBNZ	R0, L___dali2_driver__sendingData11
;__dali2_driver.c, 508 :: 		if (_txBuffer[_bitCounter] == DALI_START_BIT_PULSE)
0x0BC4	0x4820    LDR	R0, [PC, #128]
0x0BC6	0x7801    LDRB	R1, [R0, #0]
0x0BC8	0x4820    LDR	R0, [PC, #128]
0x0BCA	0x1840    ADDS	R0, R0, R1
0x0BCC	0x7800    LDRB	R0, [R0, #0]
0x0BCE	0xB920    CBNZ	R0, L___dali2_driver__sendingData12
;__dali2_driver.c, 510 :: 		hal_gpio_rstSet( 0 );
0x0BD0	0x2000    MOVS	R0, #0
0x0BD2	0x4C1C    LDR	R4, [PC, #112]
0x0BD4	0x6824    LDR	R4, [R4, #0]
0x0BD6	0x47A0    BLX	R4
;__dali2_driver.c, 511 :: 		}
0x0BD8	0xE003    B	L___dali2_driver__sendingData13
L___dali2_driver__sendingData12:
;__dali2_driver.c, 514 :: 		hal_gpio_rstSet( 1 );
0x0BDA	0x2001    MOVS	R0, #1
0x0BDC	0x4C19    LDR	R4, [PC, #100]
0x0BDE	0x6824    LDR	R4, [R4, #0]
0x0BE0	0x47A0    BLX	R4
;__dali2_driver.c, 515 :: 		}
L___dali2_driver__sendingData13:
;__dali2_driver.c, 516 :: 		}
0x0BE2	0xE00E    B	L___dali2_driver__sendingData14
L___dali2_driver__sendingData11:
;__dali2_driver.c, 519 :: 		if (_txBuffer[_bitCounter] == DALI_START_BIT_PULSE)
0x0BE4	0x4818    LDR	R0, [PC, #96]
0x0BE6	0x7801    LDRB	R1, [R0, #0]
0x0BE8	0x4818    LDR	R0, [PC, #96]
0x0BEA	0x1840    ADDS	R0, R0, R1
0x0BEC	0x7800    LDRB	R0, [R0, #0]
0x0BEE	0xB920    CBNZ	R0, L___dali2_driver__sendingData15
;__dali2_driver.c, 521 :: 		hal_gpio_rstSet( 1 );
0x0BF0	0x2001    MOVS	R0, #1
0x0BF2	0x4C14    LDR	R4, [PC, #80]
0x0BF4	0x6824    LDR	R4, [R4, #0]
0x0BF6	0x47A0    BLX	R4
;__dali2_driver.c, 522 :: 		}
0x0BF8	0xE003    B	L___dali2_driver__sendingData16
L___dali2_driver__sendingData15:
;__dali2_driver.c, 525 :: 		hal_gpio_rstSet( 0 );
0x0BFA	0x2000    MOVS	R0, #0
0x0BFC	0x4C11    LDR	R4, [PC, #68]
0x0BFE	0x6824    LDR	R4, [R4, #0]
0x0C00	0x47A0    BLX	R4
;__dali2_driver.c, 526 :: 		}
L___dali2_driver__sendingData16:
;__dali2_driver.c, 527 :: 		}
L___dali2_driver__sendingData14:
;__dali2_driver.c, 528 :: 		}
L___dali2_driver__sendingData10:
;__dali2_driver.c, 529 :: 		}
L___dali2_driver__sendingData9:
L___dali2_driver__sendingData8:
;__dali2_driver.c, 531 :: 		_tickCounter++;
0x0C02	0x480F    LDR	R0, [PC, #60]
0x0C04	0x8800    LDRH	R0, [R0, #0]
0x0C06	0x1C41    ADDS	R1, R0, #1
0x0C08	0x480D    LDR	R0, [PC, #52]
0x0C0A	0x8001    STRH	R1, [R0, #0]
;__dali2_driver.c, 533 :: 		if (_tickCounter % 8 == 0)
0x0C0C	0x480C    LDR	R0, [PC, #48]
0x0C0E	0x8800    LDRH	R0, [R0, #0]
0x0C10	0xF0000007  AND	R0, R0, #7
0x0C14	0xB280    UXTH	R0, R0
0x0C16	0xB920    CBNZ	R0, L___dali2_driver__sendingData17
;__dali2_driver.c, 535 :: 		_bitCounter++;
0x0C18	0x480B    LDR	R0, [PC, #44]
0x0C1A	0x7800    LDRB	R0, [R0, #0]
0x0C1C	0x1C41    ADDS	R1, R0, #1
0x0C1E	0x480A    LDR	R0, [PC, #40]
0x0C20	0x7001    STRB	R1, [R0, #0]
;__dali2_driver.c, 536 :: 		}
L___dali2_driver__sendingData17:
;__dali2_driver.c, 538 :: 		if (_bitCounter > 16)
0x0C22	0x4809    LDR	R0, [PC, #36]
0x0C24	0x7800    LDRB	R0, [R0, #0]
0x0C26	0x2810    CMP	R0, #16
0x0C28	0xD906    BLS	L___dali2_driver__sendingData18
;__dali2_driver.c, 540 :: 		_daliState = _DALI2_FORWARD_FRAME_SENT;
0x0C2A	0x2107    MOVS	R1, #7
0x0C2C	0x4808    LDR	R0, [PC, #32]
0x0C2E	0x7001    STRB	R1, [R0, #0]
;__dali2_driver.c, 541 :: 		hal_gpio_rstSet( 0 );
0x0C30	0x2000    MOVS	R0, #0
0x0C32	0x4C04    LDR	R4, [PC, #16]
0x0C34	0x6824    LDR	R4, [R4, #0]
0x0C36	0x47A0    BLX	R4
;__dali2_driver.c, 542 :: 		}
L___dali2_driver__sendingData18:
;__dali2_driver.c, 543 :: 		}
L_end__sendingData:
0x0C38	0xF8DDE000  LDR	LR, [SP, #0]
0x0C3C	0xB001    ADD	SP, SP, #4
0x0C3E	0x4770    BX	LR
0x0C40	0x000E2000  	__dali2_driver__tickCounter+0
0x0C44	0x00042000  	__dali2_driver_hal_gpio_rstSet+0
0x0C48	0x000D2000  	__dali2_driver__bitCounter+0
0x0C4C	0x00B32000  	__dali2_driver__txBuffer+0
0x0C50	0x000C2000  	__dali2_driver__daliState+0
; end of __dali2_driver__sendingData
__dali2_driver__receivingData:
;__dali2_driver.c, 456 :: 		static void _receivingData()
0x0AE8	0xB081    SUB	SP, SP, #4
0x0AEA	0xF8CDE000  STR	LR, [SP, #0]
;__dali2_driver.c, 460 :: 		if (_tickCounter == (_bitCounter * 8 + 2))
0x0AEE	0x4C1C    LDR	R4, [PC, #112]
0x0AF0	0x7824    LDRB	R4, [R4, #0]
0x0AF2	0x00E4    LSLS	R4, R4, #3
0x0AF4	0xB224    SXTH	R4, R4
0x0AF6	0x1CA5    ADDS	R5, R4, #2
0x0AF8	0xB22D    SXTH	R5, R5
0x0AFA	0x4C1A    LDR	R4, [PC, #104]
0x0AFC	0x8824    LDRH	R4, [R4, #0]
0x0AFE	0x42AC    CMP	R4, R5
0x0B00	0xD110    BNE	L___dali2_driver__receivingData0
;__dali2_driver.c, 462 :: 		if (hal_gpio_intGet())
0x0B02	0x4C19    LDR	R4, [PC, #100]
0x0B04	0x6824    LDR	R4, [R4, #0]
0x0B06	0x47A0    BLX	R4
0x0B08	0xB130    CBZ	R0, L___dali2_driver__receivingData1
;__dali2_driver.c, 464 :: 		_rxBuffer[_bitCounter] = 0;
0x0B0A	0x4815    LDR	R0, [PC, #84]
0x0B0C	0x7801    LDRB	R1, [R0, #0]
0x0B0E	0x4817    LDR	R0, [PC, #92]
0x0B10	0x1841    ADDS	R1, R0, R1
0x0B12	0x2000    MOVS	R0, #0
0x0B14	0x7008    STRB	R0, [R1, #0]
;__dali2_driver.c, 465 :: 		}
0x0B16	0xE005    B	L___dali2_driver__receivingData2
L___dali2_driver__receivingData1:
;__dali2_driver.c, 468 :: 		_rxBuffer[_bitCounter] = 1;
0x0B18	0x4811    LDR	R0, [PC, #68]
0x0B1A	0x7801    LDRB	R1, [R0, #0]
0x0B1C	0x4813    LDR	R0, [PC, #76]
0x0B1E	0x1841    ADDS	R1, R0, R1
0x0B20	0x2001    MOVS	R0, #1
0x0B22	0x7008    STRB	R0, [R1, #0]
;__dali2_driver.c, 469 :: 		}
L___dali2_driver__receivingData2:
;__dali2_driver.c, 470 :: 		}
L___dali2_driver__receivingData0:
;__dali2_driver.c, 472 :: 		_tickCounter++;
0x0B24	0x480F    LDR	R0, [PC, #60]
0x0B26	0x8800    LDRH	R0, [R0, #0]
0x0B28	0x1C41    ADDS	R1, R0, #1
0x0B2A	0x480E    LDR	R0, [PC, #56]
0x0B2C	0x8001    STRH	R1, [R0, #0]
;__dali2_driver.c, 474 :: 		if ((_tickCounter + 1) % 8 == 0)
0x0B2E	0x480D    LDR	R0, [PC, #52]
0x0B30	0x8800    LDRH	R0, [R0, #0]
0x0B32	0x1C40    ADDS	R0, R0, #1
0x0B34	0xB280    UXTH	R0, R0
0x0B36	0xF0000007  AND	R0, R0, #7
0x0B3A	0xB280    UXTH	R0, R0
0x0B3C	0xB920    CBNZ	R0, L___dali2_driver__receivingData3
;__dali2_driver.c, 476 :: 		_bitCounter++;
0x0B3E	0x4808    LDR	R0, [PC, #32]
0x0B40	0x7800    LDRB	R0, [R0, #0]
0x0B42	0x1C41    ADDS	R1, R0, #1
0x0B44	0x4806    LDR	R0, [PC, #24]
0x0B46	0x7001    STRB	R1, [R0, #0]
;__dali2_driver.c, 477 :: 		}
L___dali2_driver__receivingData3:
;__dali2_driver.c, 479 :: 		if (_bitCounter > 8)
0x0B48	0x4805    LDR	R0, [PC, #20]
0x0B4A	0x7800    LDRB	R0, [R0, #0]
0x0B4C	0x2808    CMP	R0, #8
0x0B4E	0xD902    BLS	L___dali2_driver__receivingData4
;__dali2_driver.c, 481 :: 		_daliState = _DALI2_BACKWARD_FRAME_RECEIVED;
0x0B50	0x2106    MOVS	R1, #6
0x0B52	0x4807    LDR	R0, [PC, #28]
0x0B54	0x7001    STRB	R1, [R0, #0]
;__dali2_driver.c, 482 :: 		}
L___dali2_driver__receivingData4:
;__dali2_driver.c, 483 :: 		}
L_end__receivingData:
0x0B56	0xF8DDE000  LDR	LR, [SP, #0]
0x0B5A	0xB001    ADD	SP, SP, #4
0x0B5C	0x4770    BX	LR
0x0B5E	0xBF00    NOP
0x0B60	0x000D2000  	__dali2_driver__bitCounter+0
0x0B64	0x000E2000  	__dali2_driver__tickCounter+0
0x0B68	0x00002000  	__dali2_driver_hal_gpio_intGet+0
0x0B6C	0x00C82000  	__dali2_driver__rxBuffer+0
0x0B70	0x000C2000  	__dali2_driver__daliState+0
; end of __dali2_driver__receivingData
;easymx_v7_STM32F107VC.c,47 :: __MIKROBUS1_GPIO [96]
0x1518	0x00000651 ;__MIKROBUS1_GPIO+0
0x151C	0x0000065D ;__MIKROBUS1_GPIO+4
0x1520	0x00000669 ;__MIKROBUS1_GPIO+8
0x1524	0x00000A11 ;__MIKROBUS1_GPIO+12
0x1528	0x00000A59 ;__MIKROBUS1_GPIO+16
0x152C	0x00000A41 ;__MIKROBUS1_GPIO+20
0x1530	0x00000A4D ;__MIKROBUS1_GPIO+24
0x1534	0x00000A1D ;__MIKROBUS1_GPIO+28
0x1538	0x00000A29 ;__MIKROBUS1_GPIO+32
0x153C	0x00000A35 ;__MIKROBUS1_GPIO+36
0x1540	0x00000465 ;__MIKROBUS1_GPIO+40
0x1544	0x00000471 ;__MIKROBUS1_GPIO+44
0x1548	0x00001051 ;__MIKROBUS1_GPIO+48
0x154C	0x0000108D ;__MIKROBUS1_GPIO+52
0x1550	0x0000105D ;__MIKROBUS1_GPIO+56
0x1554	0x00001069 ;__MIKROBUS1_GPIO+60
0x1558	0x00001075 ;__MIKROBUS1_GPIO+64
0x155C	0x00001099 ;__MIKROBUS1_GPIO+68
0x1560	0x00001081 ;__MIKROBUS1_GPIO+72
0x1564	0x00000C91 ;__MIKROBUS1_GPIO+76
0x1568	0x00000AAD ;__MIKROBUS1_GPIO+80
0x156C	0x00000AA1 ;__MIKROBUS1_GPIO+84
0x1570	0x00000AC5 ;__MIKROBUS1_GPIO+88
0x1574	0x00000AB9 ;__MIKROBUS1_GPIO+92
; end of __MIKROBUS1_GPIO
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0150     [140]    _GPIO_Clk_Enable
0x01DC     [500]    _GPIO_Config
0x03D0      [24]    _GPIO_Digital_Input
0x03E8      [28]    _GPIO_Digital_Output
0x0404      [12]    easymx_v7_STM32F107VC__setSCK_2
0x0410      [12]    easymx_v7_STM32F107VC__setINT_2
0x041C      [12]    easymx_v7_STM32F107VC__setMISO_2
0x0428      [12]    easymx_v7_STM32F107VC__setMOSI_2
0x0434      [12]    easymx_v7_STM32F107VC__setPWM_2
0x0440      [12]    easymx_v7_STM32F107VC__setRST_2
0x044C      [12]    easymx_v7_STM32F107VC__setAN_2
0x0458      [12]    easymx_v7_STM32F107VC__setCS_2
0x0464      [12]    easymx_v7_STM32F107VC__setSCL_1
0x0470      [12]    easymx_v7_STM32F107VC__setSDA_1
0x047C      [62]    __dali2_driver__prepareAddress
0x04BC      [14]    _EnableInterrupts
0x04CC     [158]    __dali2_driver__prepareData
0x056C      [34]    __dali2_driver__checkSpecCmd
0x0590      [24]    __dali2_driver__writeData
0x05A8      [12]    easymx_v7_STM32F107VC__setTX_2
0x05B4      [12]    easymx_v7_STM32F107VC__setRX_2
0x05C0      [12]    easymx_v7_STM32F107VC__setSCL_2
0x05CC     [120]    _NVIC_IntEnable
0x0644      [12]    easymx_v7_STM32F107VC__setSDA_2
0x0650      [12]    easymx_v7_STM32F107VC__setAN_1
0x065C      [12]    easymx_v7_STM32F107VC__setRST_1
0x0668      [12]    easymx_v7_STM32F107VC__setCS_1
0x0674     [440]    easymx_v7_STM32F107VC__gpioInit_1
0x082C     [440]    easymx_v7_STM32F107VC__gpioInit_2
0x09E4      [44]    __dali2_driver_hal_gpioMap
0x0A10      [12]    easymx_v7_STM32F107VC__setSCK_1
0x0A1C      [12]    easymx_v7_STM32F107VC__setINT_1
0x0A28      [12]    easymx_v7_STM32F107VC__setRX_1
0x0A34      [12]    easymx_v7_STM32F107VC__setTX_1
0x0A40      [12]    easymx_v7_STM32F107VC__setMOSI_1
0x0A4C      [12]    easymx_v7_STM32F107VC__setPWM_1
0x0A58      [12]    easymx_v7_STM32F107VC__setMISO_1
0x0A64      [12]    easymx_v7_STM32F107VC__getRST_2
0x0A70      [12]    easymx_v7_STM32F107VC__getMISO_2
0x0A7C      [12]    easymx_v7_STM32F107VC__getSCK_2
0x0A88      [12]    easymx_v7_STM32F107VC__getCS_2
0x0A94      [12]    easymx_v7_STM32F107VC__getAN_2
0x0AA0      [12]    easymx_v7_STM32F107VC__getTX_1
0x0AAC      [12]    easymx_v7_STM32F107VC__getRX_1
0x0AB8      [12]    easymx_v7_STM32F107VC__getSDA_1
0x0AC4      [12]    easymx_v7_STM32F107VC__getSCL_1
0x0AD0      [12]    easymx_v7_STM32F107VC__getSDA_2
0x0ADC      [12]    easymx_v7_STM32F107VC__getSCL_2
0x0AE8     [140]    __dali2_driver__receivingData
0x0B74     [224]    __dali2_driver__sendingData
0x0C54      [12]    easymx_v7_STM32F107VC__getTX_2
0x0C60      [12]    easymx_v7_STM32F107VC__getPWM_2
0x0C6C      [12]    easymx_v7_STM32F107VC__getMOSI_2
0x0C78      [12]    easymx_v7_STM32F107VC__getRX_2
0x0C84      [12]    easymx_v7_STM32F107VC__getINT_2
0x0C90      [12]    easymx_v7_STM32F107VC__getINT_1
0x0C9C     [332]    _dali2_sendCmd
0x0DE8      [66]    _mikrobus_gpioInit
0x0E2C     [272]    _dali2_masterStatus
0x0F3C     [168]    _dali2_masterInit
0x0FE4      [18]    _dali2_gpioDriverInit
0x0FF8      [88]    Click_DALI_2_STM_dali2_configTimer
0x1050      [12]    easymx_v7_STM32F107VC__getAN_1
0x105C      [12]    easymx_v7_STM32F107VC__getCS_1
0x1068      [12]    easymx_v7_STM32F107VC__getSCK_1
0x1074      [12]    easymx_v7_STM32F107VC__getMISO_1
0x1080      [12]    easymx_v7_STM32F107VC__getPWM_1
0x108C      [12]    easymx_v7_STM32F107VC__getRST_1
0x1098      [12]    easymx_v7_STM32F107VC__getMOSI_1
0x10A4      [20]    ___CC2DW
0x10B8     [248]    _dali2_isr
0x11B0     [108]    __Lib_System_105_107_SystemClockSetDefault
0x121C      [58]    ___FillZeros
0x1258      [34]    _systemInit
0x1280     [214]    _applicationTask
0x1358      [32]    _applicationInit
0x1378      [28]    _main
0x1394      [36]    _Timer_interrupt
0x13B8     [324]    __Lib_System_105_107_InitialSetUpRCCRCC2
0x14FC      [20]    __Lib_System_105_107_InitialSetUpFosc
0x1510       [8]    ___GenExcept
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x20000000       [4]    __dali2_driver_hal_gpio_intGet
0x20000004       [4]    __dali2_driver_hal_gpio_rstSet
0x20000008       [4]    __dali2_driver_hal_gpio_intSet
0x2000000C       [1]    __dali2_driver__daliState
0x2000000D       [1]    __dali2_driver__bitCounter
0x2000000E       [2]    __dali2_driver__tickCounter
0x20000010     [160]    __dali2_driver__ballast
0x200000B0       [1]    __dali2_driver__expectBackCh
0x200000B1       [1]    __dali2_driver__formerVal
0x200000B2       [1]    __dali2_driver__currentVal
0x200000B3      [17]    __dali2_driver__txBuffer
0x200000C4       [4]    ___System_CLOCK_IN_KHZ
0x200000C8       [9]    __dali2_driver__rxBuffer
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x1518      [96]    __MIKROBUS1_GPIO
